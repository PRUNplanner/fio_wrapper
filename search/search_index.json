{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":"<p>FIO API wrapper with pydantic data validation and easy-to-use querying. fio_wrapper implements the most used endpoints of Prosperous Universes community game data API.</p> <p>Source Code: https://github.com/jplacht/fio_wrapper</p> <p>Documentation: https://jplacht.github.io/fio_wrapper/</p> <p>PyPi Package: https://jplacht.github.io/fio_wrapper/</p>"},{"location":"decorator/","title":"Decorators","text":""},{"location":"decorator/#decorator","title":"decorator","text":""},{"location":"decorator/#decorator.apikey_required","title":"apikey_required","text":"<pre><code>apikey_required(func)\n</code></pre> <p>Wraps endpoint and check for FIO API Key</p> <p>Parameters:</p> Name Type Description Default <code>func</code> <code>method</code> <p>Wrapped endpoint method</p> required <p>Raises:</p> Type Description <code>SystemExit</code> <p>Decorator can only be used on endpoints</p> <code>NoAPIKeyProvided</code> <p>FIO API Key not provided, but endpoint requires it.</p> <p>Returns:</p> Name Type Description <code>method</code> <code>any</code> <p>Executed endpoint method</p>"},{"location":"exception/","title":"Exceptions","text":""},{"location":"exception/#exceptions","title":"exceptions","text":""},{"location":"exception/#exceptions.EndpointNotImplemented","title":"EndpointNotImplemented","text":"<p>Endpoint is not implemented in fio_wrapper</p>"},{"location":"exception/#exceptions.NoAPIKeyProvided","title":"NoAPIKeyProvided","text":"<p>No FIO API Key was provided, but endpoint requires key</p>"},{"location":"exception/#exceptions.NotAuthenticated","title":"NotAuthenticated","text":"<p>FIO returned failed authentication</p>"},{"location":"exception/#exceptions.MaterialTickerInvalid","title":"MaterialTickerInvalid","text":"<p>Invalid Material Ticker provided</p>"},{"location":"exception/#exceptions.MaterialTickerNotFound","title":"MaterialTickerNotFound","text":"<p>Material Ticker not found</p>"},{"location":"exception/#exceptions.MaterialCategoryNotFound","title":"MaterialCategoryNotFound","text":"<p>Material Category not found</p>"},{"location":"exception/#exceptions.ExchangeTickerInvalid","title":"ExchangeTickerInvalid","text":"<p>Exchange ticker invalid</p>"},{"location":"exception/#exceptions.ExchangeTickerNotFound","title":"ExchangeTickerNotFound","text":"<p>Exchange ticker not found</p>"},{"location":"exception/#exceptions.CompanyCodeInvalid","title":"CompanyCodeInvalid","text":"<p>Company code invalid</p>"},{"location":"exception/#exceptions.BuildingTickerNotFound","title":"BuildingTickerNotFound","text":"<p>Building ticker not found</p>"},{"location":"exception/#exceptions.PlanetNotFound","title":"PlanetNotFound","text":"<p>Planet not found</p>"},{"location":"exception/#exceptions.PlanetSearchMaterialsInvalid","title":"PlanetSearchMaterialsInvalid","text":"<p>Planet search material ticker provided invalid</p>"},{"location":"exception/#exceptions.PlanetSearchDistanceChecksInvalid","title":"PlanetSearchDistanceChecksInvalid","text":"<p>Planet search invalid distance checks</p>"},{"location":"exception/#exceptions.PlanetSearchInvalidRequest","title":"PlanetSearchInvalidRequest","text":"<p>Planet search request invalid</p>"},{"location":"exception/#exceptions.InvalidAdType","title":"InvalidAdType","text":"<p>Ad type invalid</p>"},{"location":"exception/#exceptions.PlanetOrAdsNotFound","title":"PlanetOrAdsNotFound","text":"<p>Planet or ads not found</p>"},{"location":"exception/#exceptions.CompanyOrAdsNotFound","title":"CompanyOrAdsNotFound","text":"<p>Company or ads not found</p>"},{"location":"exception/#exceptions.NoSiteData","title":"NoSiteData","text":"<p>No site data found</p>"},{"location":"fio/","title":"FIO Class","text":""},{"location":"fio/#fio","title":"fio","text":"<p>FIO class to access game data through FIO REST API endpoints</p>"},{"location":"fio/#fio.FIO","title":"FIO","text":"<pre><code>FIO(\n    api_key=\"\",\n    version=\"1.0.0\",\n    base_url=\"https://rest.fnar.net\",\n    ssl_verify=True,\n)\n</code></pre> <p>FIO API wrapper class</p> <p>Attributes:</p> Name Type Description <code>Building</code> <code>Building</code> <p>Building information</p> <code>Exchange</code> <code>Exchange</code> <p>Exchange information</p> <code>LocalMarket</code> <code>LocalMarket</code> <p>LocalMarket information</p> <code>Material</code> <code>Material</code> <p>Material information</p> <code>Planet</code> <code>Planet</code> <p>Planet information</p> <code>Recipe</code> <code>Recipe</code> <p>Recipe information</p> <p>Initializes the FIO wrapper</p> <p>Parameters:</p> Name Type Description Default <code>api_key</code> <code>str</code> <p>FIO API-Key. Defaults to \"\".</p> <code>''</code> <code>version</code> <code>str</code> <p>FIO API version. Defaults to \"1.0.0\".</p> <code>'1.0.0'</code> <code>base_url</code> <code>_type_</code> <p>FIO base url. Defaults to \"https://rest.fnar.net\".</p> <code>'https://rest.fnar.net'</code> <code>ssl_verify</code> <code>bool</code> <p>Verify https connection. Defaults to True.</p> <code>True</code> <p>Raises:</p> Type Description <code>EndpointNotImplemented</code> <p>description</p>"},{"location":"fio/#fio.FIO.Building","title":"Building  <code>instance-attribute</code>","text":"<pre><code>Building = building_v1.Building(self._adapter)\n</code></pre>"},{"location":"fio/#fio.FIO.Exchange","title":"Exchange  <code>instance-attribute</code>","text":"<pre><code>Exchange = exchange_v1.Exchange(self._adapter)\n</code></pre>"},{"location":"fio/#fio.FIO.LocalMarket","title":"LocalMarket  <code>instance-attribute</code>","text":"<pre><code>LocalMarket = localmarket_v1.LocalMarket(self._adapter)\n</code></pre>"},{"location":"fio/#fio.FIO.Material","title":"Material  <code>instance-attribute</code>","text":"<pre><code>Material = material_v1.Material(self._adapter)\n</code></pre>"},{"location":"fio/#fio.FIO.Planet","title":"Planet  <code>instance-attribute</code>","text":"<pre><code>Planet = planet_v1.Planet(self._adapter)\n</code></pre>"},{"location":"fio/#fio.FIO.Recipe","title":"Recipe  <code>instance-attribute</code>","text":"<pre><code>Recipe = recipe_v1.Recipe(self._adapter)\n</code></pre>"},{"location":"fio/#fio.FIO.Sites","title":"Sites  <code>instance-attribute</code>","text":"<pre><code>Sites = sites_v1.Sites(self._adapter)\n</code></pre>"},{"location":"fio_adapter/","title":"FIO Adapter","text":""},{"location":"fio_adapter/#fio_adapter","title":"fio_adapter","text":"<p>Request adapter performing actual API calls towards FIO endpoints</p>"},{"location":"fio_adapter/#fio_adapter.FIOAdapter","title":"FIOAdapter","text":"<pre><code>FIOAdapter(\n    api_key=\"\",\n    version=\"1.0.0\",\n    base_url=\"https://rest.fnar.net\",\n    ssl_verify=True,\n)\n</code></pre>"},{"location":"fio_adapter/#fio_adapter.FIOAdapter.api_key","title":"api_key  <code>instance-attribute</code>","text":"<pre><code>api_key = api_key\n</code></pre>"},{"location":"fio_adapter/#fio_adapter.FIOAdapter.version","title":"version  <code>instance-attribute</code>","text":"<pre><code>version = version\n</code></pre>"},{"location":"fio_adapter/#fio_adapter.FIOAdapter.base_url","title":"base_url  <code>instance-attribute</code>","text":"<pre><code>base_url = base_url\n</code></pre>"},{"location":"fio_adapter/#fio_adapter.FIOAdapter.urls","title":"urls  <code>instance-attribute</code>","text":"<pre><code>urls = URLs(base_url=base_url)\n</code></pre>"},{"location":"fio_adapter/#fio_adapter.FIOAdapter.headers","title":"headers","text":"<pre><code>headers()\n</code></pre>"},{"location":"fio_adapter/#fio_adapter.FIOAdapter.get","title":"get","text":"<pre><code>get(endpoint, params=None, err_codes=[])\n</code></pre> <p>Performs a GET request towards endpoint</p> <p>Parameters:</p> Name Type Description Default <code>endpoint</code> <code>str</code> <p>URL</p> required <code>params</code> <code>Dict</code> <p>GET parameters. Defaults to None.</p> <code>None</code> <code>err_codes</code> <code>list</code> <p>List of error codes to handle in calling function. Defaults to [].</p> <code>[]</code> <p>Returns:</p> Type Description <code>Tuple[int, any]</code> <p>Tuple[int, any]: Request status code and request data</p>"},{"location":"fio_adapter/#fio_adapter.FIOAdapter.post","title":"post","text":"<pre><code>post(endpoint, params=None, data=None, err_codes=[])\n</code></pre> <p>Performs a POST request towards endpoint</p> <p>Parameters:</p> Name Type Description Default <code>endpoint</code> <code>str</code> <p>URL</p> required <code>params</code> <code>Dict</code> <p>POST parameters. Defaults to None.</p> <code>None</code> <code>data</code> <code>Dict</code> <p>POST data. Defaults to None.</p> <code>None</code> <code>err_codes</code> <code>list</code> <p>List of error codes to handle in calling function. Defaults to [].</p> <code>[]</code> <p>Returns:</p> Type Description <code>Tuple[int, any]</code> <p>Tuple[int, any]: Request status code and request data</p>"},{"location":"routes/","title":"FIO REST API endpoints","text":"<p>FIO Wrapper includes the most commonly used FIO REST API endpoints.</p>"},{"location":"routes/#planet","title":"Planet","text":"<ul> <li><code>GET</code> /planet/{Planet}</li> <li><code>GET</code> /planet/allplanets</li> <li><code>GET</code> /planet/allplanets/full</li> <li><code>GET</code> /planet/sites/{Planet}</li> <li><code>POST</code> /planet/search</li> </ul>"},{"location":"routes/#material","title":"Material","text":"<ul> <li><code>GET</code> /material/{MaterialTicker}</li> <li><code>GET</code> /material/allmaterials</li> <li><code>GET</code> /material/category/{CategoryName}</li> </ul>"},{"location":"routes/#building","title":"Building","text":"<ul> <li><code>GET</code> /building/{BuildingTicker}</li> <li><code>GET</code> /building/allbuildings</li> </ul>"},{"location":"routes/#recipes","title":"Recipes","text":"<ul> <li><code>GET</code> /recipes/{Ticker}</li> <li><code>GET</code> /recipes/allrecipes</li> </ul>"},{"location":"routes/#exchange","title":"Exchange","text":"<ul> <li><code>GET</code> /exchange/{ExchangeTicker}</li> <li><code>GET</code> /exchange/all</li> <li><code>GET</code> /exchange/full</li> <li><code>GET</code> /exchange/orders/{CompanyCode}</li> <li><code>GET</code> /exchange/orders/{CompanyCode}/{ExchangeCode}</li> </ul>"},{"location":"routes/#localmarket","title":"LocalMarket","text":"<ul> <li><code>GET</code> /localmarket/planet/{Planet}</li> <li><code>GET</code> /localmarket/planet/{Planet}/{Type}</li> <li><code>GET</code> /localmarket/shipping/source/{Planet}</li> <li><code>GET</code> /localmarket/shipping/destination/{Planet}</li> <li><code>GET</code> /localmarket/company/{Company}</li> </ul>"},{"location":"usage/","title":"Installation","text":"<pre><code>pip install fio-wrapper\n</code></pre>"},{"location":"usage/#usage","title":"Usage","text":"<p>Creating the FIO adapter and looking for information about the material Drinking Water by its ticker \"DW\". <pre><code>from fio_wrapper import FIO\n\nfio = FIO()\n\nmaterial = fio.Material.get(\"DW\")\n\nprint(material.model_dump_json())\n</code></pre></p> <p>This will print the material information of Drinking Water as MaterialModel and it's JSON.</p> <pre><code>{\n    \"MaterialId\": \"4fca6f5b5e6c3b8a1b887c6dc99db146\",\n    \"CategoryName\": \"consumables (basic)\",\n    \"CategoryId\": \"3f047ec3043bdd795fd7272d6be98799\",\n    \"Name\": \"drinkingWater\",\n    \"Ticker\": \"DW\",\n    \"Weight\": 0.10000000149011612,\n    \"Volume\": 0.10000000149011612,\n    \"UserNameSubmitted\": \"SAGANAKI\",\n    \"Timestamp\": \"2023-10-28T19:26:21.831707\"\n}\n</code></pre>"},{"location":"endpoints/building/","title":"Building","text":""},{"location":"endpoints/building/#endpoints.endpoints_v1.building","title":"endpoints.endpoints_v1.building","text":"<p>Access building information from FIO.</p>"},{"location":"endpoints/building/#endpoints.endpoints_v1.building.Building","title":"Building","text":"<pre><code>Building(adapter)\n</code></pre>"},{"location":"endpoints/building/#endpoints.endpoints_v1.building.Building.get","title":"get","text":"<pre><code>get(building_ticker)\n</code></pre> <p>Gets a single building from FIO</p> <p>Parameters:</p> Name Type Description Default <code>building_ticker</code> <code>str</code> <p>Building Ticker (e.g., \"CHP\")</p> required <p>Raises:</p> Type Description <code>BuildingTickerNotFound</code> <p>Building Ticker was not found</p> <p>Returns:</p> Name Type Description <code>BuildingTicker</code> <code>BuildingTicker</code> <p>Building</p>"},{"location":"endpoints/building/#endpoints.endpoints_v1.building.Building.all","title":"all","text":"<pre><code>all()\n</code></pre> <p>Gets all buildings from FIO</p> <p>Returns:</p> Name Type Description <code>BuildingTickerList</code> <code>BuildingTickerList</code> <p>List of Buildings as List[BuildingTicker]</p>"},{"location":"endpoints/exchange/","title":"Exchange","text":""},{"location":"endpoints/exchange/#endpoints.endpoints_v1.exchange","title":"endpoints.endpoints_v1.exchange","text":"<p>Access exchange information from FIO.</p>"},{"location":"endpoints/exchange/#endpoints.endpoints_v1.exchange.Exchange","title":"Exchange","text":"<pre><code>Exchange(adapter)\n</code></pre>"},{"location":"endpoints/exchange/#endpoints.endpoints_v1.exchange.Exchange.get","title":"get","text":"<pre><code>get(exchange_ticker)\n</code></pre> <p>Gets a single exchange ticker from FIO</p> <p>Parameters:</p> Name Type Description Default <code>exchange_ticker</code> <code>str</code> <p>Exchange Ticker (e.g., \"DW.AI1\")</p> required <p>Raises:</p> Type Description <code>ExchangeTickerNotFound</code> <p>Exchange ticker was not found</p> <p>Returns:</p> Name Type Description <code>ExchangeTicker</code> <code>ExchangeTickerFull</code> <p>Exchange ticker</p>"},{"location":"endpoints/exchange/#endpoints.endpoints_v1.exchange.Exchange.all","title":"all","text":"<pre><code>all()\n</code></pre> <p>Gets all simple exchange ticker from FIO</p> <p>Returns:</p> Name Type Description <code>ExchangeTickerList</code> <code>ExchangeTickerList</code> <p>Exchange ticker</p>"},{"location":"endpoints/exchange/#endpoints.endpoints_v1.exchange.Exchange.full","title":"full","text":"<pre><code>full()\n</code></pre> <p>Gets a complete list of all exchange information from FIO</p> <p>Returns:</p> Name Type Description <code>ExchangeTickerFullList</code> <code>ExchangeTickerFullList</code> <p>Exchange ticker full</p>"},{"location":"endpoints/exchange/#endpoints.endpoints_v1.exchange.Exchange.get_orders","title":"get_orders","text":"<pre><code>get_orders(company_code)\n</code></pre> <p>Gets a companies order data from FIO</p> <p>Parameters:</p> Name Type Description Default <code>company_code</code> <code>str</code> <p>Company code (1-4 characters)</p> required <p>Returns:</p> Name Type Description <code>OrderList</code> <code>OrderList</code> <p>Orders</p>"},{"location":"endpoints/exchange/#endpoints.endpoints_v1.exchange.Exchange.get_orders_exchange","title":"get_orders_exchange","text":"<pre><code>get_orders_exchange(company_code, exchange_code)\n</code></pre> <p>Gets a companies order data for a specific exchange from FIO</p> <p>Parameters:</p> Name Type Description Default <code>company_code</code> <code>str</code> <p>Company code (1-4 characters)</p> required <code>exchange_code</code> <code>str</code> <p>Exchange code (e.g., \"AI1\")</p> required <p>Returns:</p> Name Type Description <code>OrderList</code> <code>OrderList</code> <p>Orders</p>"},{"location":"endpoints/localmarket/","title":"LocalMarket","text":""},{"location":"endpoints/localmarket/#endpoints.endpoints_v1.localmarket","title":"endpoints.endpoints_v1.localmarket","text":"<p>Access local market information from FIO.</p>"},{"location":"endpoints/localmarket/#endpoints.endpoints_v1.localmarket.LocalMarket","title":"LocalMarket","text":"<pre><code>LocalMarket(adapter)\n</code></pre>"},{"location":"endpoints/localmarket/#endpoints.endpoints_v1.localmarket.LocalMarket.planet","title":"planet","text":"<pre><code>planet(planet)\n</code></pre> <p>Gets local market ads for planet</p> <p>Parameters:</p> Name Type Description Default <code>planet</code> <code>str</code> <p>PlanetId, PlanetNaturalId, PlanetName</p> required <p>Raises:</p> Type Description <code>PlanetNotFound</code> <p>Planet not found</p> <p>Returns:</p> Name Type Description <code>LocalMarketAds</code> <code>LocalMarketAds</code> <p>List of ads</p>"},{"location":"endpoints/localmarket/#endpoints.endpoints_v1.localmarket.LocalMarket.planet_buy","title":"planet_buy","text":"<pre><code>planet_buy(planet)\n</code></pre> <p>Gets all BUY ads from the planets local market</p> <p>Parameters:</p> Name Type Description Default <code>planet</code> <code>str</code> <p>PlanetId, PlanetNaturalId, PlanetName</p> required <p>Raises:</p> Type Description <code>PlanetOrAdsNotFound</code> <p>Planet not found or no ads</p> <p>Returns:</p> Name Type Description <code>LocalMarketAdList</code> <code>LocalMarketAdList</code> <p>List of planet local market BUY ads</p>"},{"location":"endpoints/localmarket/#endpoints.endpoints_v1.localmarket.LocalMarket.planet_sell","title":"planet_sell","text":"<pre><code>planet_sell(planet)\n</code></pre> <p>Gets all SELL ads from planets local market</p> <p>Parameters:</p> Name Type Description Default <code>planet</code> <code>str</code> <p>PlanetId, PlanetNaturalId, PlanetName</p> required <p>Raises:</p> Type Description <code>PlanetOrAdsNotFound</code> <p>Planet not found or no ads</p> <p>Returns:</p> Name Type Description <code>LocalMarketAdList</code> <code>LocalMarketAdList</code> <p>List of planet local market SELL ads</p>"},{"location":"endpoints/localmarket/#endpoints.endpoints_v1.localmarket.LocalMarket.planet_shipping","title":"planet_shipping","text":"<pre><code>planet_shipping(planet)\n</code></pre> <p>Gets a list of planets shipping ads</p> <p>Parameters:</p> Name Type Description Default <code>planet</code> <code>str</code> <p>PlanetId, PlanetNaturalId, PlanetName</p> required <p>Raises:</p> Type Description <code>PlanetOrAdsNotFound</code> <p>Planet not found or no ads</p> <p>Returns:</p> Name Type Description <code>LocalMarketShippingAdList</code> <code>LocalMarketShippingAdList</code> <p>List of planet local market SHIPPING ads</p>"},{"location":"endpoints/localmarket/#endpoints.endpoints_v1.localmarket.LocalMarket.shipping_from","title":"shipping_from","text":"<pre><code>shipping_from(planet)\n</code></pre> <p>Gets a list of SHIPPING ads starting from planet</p> <p>Parameters:</p> Name Type Description Default <code>planet</code> <code>str</code> <p>PlanetId, PlanetNaturalId, PlanetName</p> required <p>Raises:</p> Type Description <code>PlanetOrAdsNotFound</code> <p>Planet not found or no ads</p> <p>Returns:</p> Name Type Description <code>LocalMarketShippingAdList</code> <code>LocalMarketShippingAdList</code> <p>List of shipping ads from planet</p>"},{"location":"endpoints/localmarket/#endpoints.endpoints_v1.localmarket.LocalMarket.shipping_to","title":"shipping_to","text":"<pre><code>shipping_to(planet)\n</code></pre> <p>Gets a list of SHIPPING ads ending at planet</p> <p>Parameters:</p> Name Type Description Default <code>planet</code> <code>str</code> <p>PlanetId, PlanetNaturalId, PlanetName</p> required <p>Raises:</p> Type Description <code>PlanetOrAdsNotFound</code> <p>Planet not found or no ads</p> <p>Returns:</p> Name Type Description <code>LocalMarketShippingAdList</code> <code>LocalMarketShippingAdList</code> <p>List of shipping ads to planet</p>"},{"location":"endpoints/localmarket/#endpoints.endpoints_v1.localmarket.LocalMarket.company","title":"company","text":"<pre><code>company(companycode)\n</code></pre> <p>Gets a list of all ads of the specified company</p> <p>Parameters:</p> Name Type Description Default <code>companycode</code> <code>str</code> <p>Company Code (e.g., \"SKYP\")</p> required <p>Raises:</p> Type Description <code>CompanyOrAdsNotFound</code> <p>Company not found or company has no ads</p> <p>Returns:</p> Name Type Description <code>LocalMarketAds</code> <code>LocalMarketAds</code> <p>List of local market ads of company</p>"},{"location":"endpoints/material/","title":"Material","text":""},{"location":"endpoints/material/#endpoints.endpoints_v1.material","title":"endpoints.endpoints_v1.material","text":"<p>Access material information from FIO.</p>"},{"location":"endpoints/material/#endpoints.endpoints_v1.material.Material","title":"Material","text":"<pre><code>Material(adapter)\n</code></pre>"},{"location":"endpoints/material/#endpoints.endpoints_v1.material.Material.get","title":"get","text":"<pre><code>get(material_ticker)\n</code></pre> <p>Gets a single material from FIO</p> <p>Parameters:</p> Name Type Description Default <code>material_ticker</code> <code>str</code> <p>Material Ticker (e.g., \"DW\")</p> required <p>Raises:</p> Type Description <code>MaterialTickerNotFound</code> <p>Material Ticker was not found</p> <p>Returns:</p> Name Type Description <code>MaterialModel</code> <code>MaterialTicker</code> <p>Material</p>"},{"location":"endpoints/material/#endpoints.endpoints_v1.material.Material.all","title":"all","text":"<pre><code>all()\n</code></pre> <p>Gets all materials from FIO</p> <p>Returns:</p> Name Type Description <code>MaterialModelList</code> <code>MaterialTickerList</code> <p>List of Materials as List[MaterialModel]</p>"},{"location":"endpoints/material/#endpoints.endpoints_v1.material.Material.category","title":"category","text":"<pre><code>category(category_name)\n</code></pre> <p>Gets all materials of specified category</p> <p>Parameters:</p> Name Type Description Default <code>category_name</code> <code>str</code> <p>Category name (e.g., \"agricultural products\")</p> required <p>Raises:</p> Type Description <code>MaterialCategoryNotFound</code> <p>Category was not found</p> <p>Returns:</p> Name Type Description <code>MaterialModelList</code> <code>MaterialTickerList</code> <p>List of Materials as List[MaterialModel]</p>"},{"location":"endpoints/planet/","title":"Planet","text":""},{"location":"endpoints/planet/#endpoints.endpoints_v1.planet","title":"endpoints.endpoints_v1.planet","text":"<p>Access planet information from FIO.</p>"},{"location":"endpoints/planet/#endpoints.endpoints_v1.planet.Planet","title":"Planet","text":"<pre><code>Planet(adapter)\n</code></pre> <p>Planet endpoint wrapper</p>"},{"location":"endpoints/planet/#endpoints.endpoints_v1.planet.Planet.get","title":"get","text":"<pre><code>get(planet)\n</code></pre> <p>Gets full planet data from FIO</p> <p>Parameters:</p> Name Type Description Default <code>planet</code> <code>str</code> <p>PlanetId, PlanetNaturalId or PlanetName</p> required <p>Raises:</p> Type Description <code>PlanetNotFound</code> <p>Planet not found</p> <p>Returns:</p> Name Type Description <code>PlanetFull</code> <code>PlanetFull</code> <p>Full planet information</p>"},{"location":"endpoints/planet/#endpoints.endpoints_v1.planet.Planet.all","title":"all","text":"<pre><code>all()\n</code></pre> <p>Gets a list of all Planets with minimal information from FIO</p> <p>Returns:</p> Name Type Description <code>PlanetList</code> <code>PlanetList</code> <p>List of Planets as List[Planet]</p>"},{"location":"endpoints/planet/#endpoints.endpoints_v1.planet.Planet.full","title":"full","text":"<pre><code>full()\n</code></pre> <p>Gets a list of all planets from FIO with full planet information</p> <p>Returns:</p> Name Type Description <code>PlanetFullList</code> <code>PlanetFullList</code> <p>List of Planets with full information as List[PlanetFull]</p>"},{"location":"endpoints/planet/#endpoints.endpoints_v1.planet.Planet.sites","title":"sites","text":"<pre><code>sites(planet)\n</code></pre> <p>Gets a list of sites on the planet from FIO</p> <p>Parameters:</p> Name Type Description Default <code>planet</code> <code>str</code> <p>PlanetId, PlanetNaturalId or PlanetName</p> required <p>Raises:</p> Type Description <code>PlanetNotFound</code> <p>Planet not found</p> <p>Returns:</p> Name Type Description <code>PlanetSiteList</code> <code>PlanetSiteList</code> <p>List of Planet sites as List[PlanetSite]</p>"},{"location":"endpoints/planet/#endpoints.endpoints_v1.planet.Planet.search","title":"search","text":"<pre><code>search(\n    materials=[],\n    include_rocky=False,\n    include_gaseous=False,\n    include_low_gravity=False,\n    include_high_gravity=False,\n    include_low_pressure=False,\n    include_high_pressure=False,\n    include_low_temperature=False,\n    include_high_temperature=False,\n    must_be_fertile=False,\n    must_have_localmarket=False,\n    must_have_cogc=False,\n    must_have_war=False,\n    must_have_adm=False,\n    must_have_shy=False,\n    distance_checks=[],\n)\n</code></pre> <p>Performs a search request towards FIO to find a planet matching the search parameters</p> <p>Parameters:</p> Name Type Description Default <code>materials</code> <code>List[str]</code> <p>List of materials to search for, e.g. [\"FEO\", \"LST\"].</p> <code>[]</code> <code>include_rocky</code> <code>bool</code> <p>Planet can be Rocky.</p> <code>False</code> <code>include_gaseous</code> <code>bool</code> <p>Planet can be Gaseous.</p> <code>False</code> <code>include_low_gravity</code> <code>bool</code> <p>Planet can be low gravity.</p> <code>False</code> <code>include_high_gravity</code> <code>bool</code> <p>Planet can be high gravity.</p> <code>False</code> <code>include_low_pressure</code> <code>bool</code> <p>Planet can be low pressure.</p> <code>False</code> <code>include_high_pressure</code> <code>bool</code> <p>Planet can be high pressure.</p> <code>False</code> <code>include_low_temperature</code> <code>bool</code> <p>Planet can be low temperature.</p> <code>False</code> <code>include_high_temperature</code> <code>bool</code> <p>Planet can be high temperature.</p> <code>False</code> <code>must_be_fertile</code> <code>bool</code> <p>Planet must be Fertile.</p> <code>False</code> <code>must_have_localmarket</code> <code>bool</code> <p>Planet must have a Local Market.</p> <code>False</code> <code>must_have_cogc</code> <code>bool</code> <p>Planet must have a Chamber of Glboal Commerce.</p> <code>False</code> <code>must_have_war</code> <code>bool</code> <p>Planet must have warehouses.</p> <code>False</code> <code>must_have_adm</code> <code>bool</code> <p>Planet must have a Planetary Administration Center.</p> <code>False</code> <code>must_have_shy</code> <code>bool</code> <p>Planet must have a Shipyard.</p> <code>False</code> <code>distance_checks</code> <code>List[str]</code> <p>List of other planets to check distance to, e.g. [\"ANT\", \"MOR\"].</p> <code>[]</code> <p>Raises:</p> Type Description <code>PlanetSearchMaterialsInvalid</code> <p>description</p> <code>PlanetSearchDistanceChecksInvalid</code> <p>description</p> <code>PlanetSearchInvalidRequest</code> <p>description</p> <p>Returns:</p> Name Type Description <code>PlanetFullList</code> <code>PlanetFullList</code> <p>List of Planets with full information as List[PlanetFull]</p>"},{"location":"endpoints/recipe/","title":"Recipe","text":""},{"location":"endpoints/recipe/#endpoints.endpoints_v1.recipe","title":"endpoints.endpoints_v1.recipe","text":"<p>Access recipe information from FIO.</p>"},{"location":"endpoints/recipe/#endpoints.endpoints_v1.recipe.Recipe","title":"Recipe","text":"<pre><code>Recipe(adapter)\n</code></pre>"},{"location":"endpoints/recipe/#endpoints.endpoints_v1.recipe.Recipe.get","title":"get","text":"<pre><code>get(material_ticker)\n</code></pre> <p>Gets all recipes for given material from FIO</p> <p>Parameters:</p> Name Type Description Default <code>material_ticker</code> <code>str</code> <p>Material Ticker (e.g. \"FE\")</p> required <p>Returns:</p> Name Type Description <code>MaterialRecipeList</code> <code>MaterialRecipeList</code> <p>List of Recipes as List[MaterialRecipeList]</p>"},{"location":"endpoints/recipe/#endpoints.endpoints_v1.recipe.Recipe.all","title":"all","text":"<pre><code>all()\n</code></pre> <p>Gets all recipes from FIO</p> <p>Returns:</p> Name Type Description <code>RecipeList</code> <code>RecipeList</code> <p>List of Recipes as List[RecipeList]</p>"},{"location":"endpoints/sites/","title":"Sites","text":"<p>Exposes FIO Sites data for users, either as whole site data or warehouses.  All Sites data requires a FIO API KEY. You will need to have access to the data the user has in FIO in order to access it.</p> <p>Example: <pre><code>from fio_wrapper import FIO\n\nfio = FIO(api_key=\"your_api_key\")\n\n# Get users warehouses\nuser_warehouses = fio.Sites.warehouses(username=\"PrUn username\")\n\n# Get users complete sites data incl. buildings, \n# their condition and repair / reclaimable materials\nuser_sites = fio.Sites.get(username=\"PrUn username\")\n</code></pre></p>"},{"location":"endpoints/sites/#endpoints.endpoints_v1.sites","title":"endpoints.endpoints_v1.sites","text":"<p>Access site information from FIO.</p>"},{"location":"endpoints/sites/#endpoints.endpoints_v1.sites.Sites","title":"Sites","text":""},{"location":"endpoints/sites/#endpoints.endpoints_v1.sites.Sites.get","title":"get","text":"<pre><code>get(username, planet=None)\n</code></pre> <p>Gets site data for given username from FIO, can specify planet.</p> Note <p>FIO API Key Required</p> <p>Parameters:</p> Name Type Description Default <code>username</code> <code>str</code> <p>Prosperous Universe username</p> required <code>planet</code> <code>str</code> <p>PlanetId, PlanetNaturalId or PlanetName. Defaults to None.</p> <code>None</code> <p>Raises:</p> Type Description <code>NoSiteData</code> <p>Username has no site data</p> <code>NotAuthenticated</code> <p>Not authenticated or no appropiate permissions</p> <p>Returns:</p> Type Description <code>Site | SiteList</code> <p>Site | SiteList: Site or List of Sites</p>"},{"location":"endpoints/sites/#endpoints.endpoints_v1.sites.Sites.planets","title":"planets","text":"<pre><code>planets(username)\n</code></pre> <p>Gets a list of SiteIds from FIO for given username</p> Note <p>FIO API Key Required</p> <p>Parameters:</p> Name Type Description Default <code>username</code> <code>str</code> <p>Prosperous Universe username</p> required <p>Raises:</p> Type Description <code>NoSiteData</code> <p>Username has no site data</p> <code>NotAuthenticated</code> <p>Not authenticated or no appropiate permissions</p> <p>Returns:</p> Type Description <code>List[str]</code> <p>List[str]: List of SiteIds</p>"},{"location":"endpoints/sites/#endpoints.endpoints_v1.sites.Sites.warehouses","title":"warehouses","text":"<pre><code>warehouses(username)\n</code></pre>"},{"location":"coverage/","title":"Coverage Report","text":""}]}