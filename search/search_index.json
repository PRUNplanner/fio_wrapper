{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"FIO Wrapper","text":"<p>FIO API wrapper with pydantic data validation and easy-to-use querying. FIO Wrapper implements the most used endpoints of Prosperous Universes community game data API.</p> <p>FIO Wrapper was developed as part of PRUNplanner, the Prosperous Universe Empire and Base Planning Tool.</p> <ul> <li> <p>Source Code: https://github.com/jplacht/fio_wrapper</p> </li> <li> <p>Documentation: https://jplacht.github.io/fio_wrapper/</p> </li> <li> <p>PyPi Package: https://jplacht.github.io/fio_wrapper/</p> </li> </ul>"},{"location":"config/","title":"Config","text":"<p>FIO Wrapper internally uses a configuration file to provide its standard capabilities. The configuration can be overwritten by the user.</p>"},{"location":"config/#baseini","title":"<code>base.ini</code>","text":"<pre><code>[FIO]\napplication = FIO Wrapper\nversion = 1.0.0\nbase_url = https://rest.fnar.net\ntimeout = 10\nssl_verify = True\nversions = 1.0.0\n\n[URL]\n# material\n1.0.0_material_base = /material\n1.0.0_material_all = /allmaterials\n\n# exchange\n1.0.0_exchange_base = /exchange\n1.0.0_exchange_orders = /orders\n1.0.0_exchange_all = /all\n1.0.0_exchange_full = /full\n\n# building\n1.0.0_building_base = /building\n1.0.0_building_all = /allbuildings\n\n# recipe\n1.0.0_recipe_base = /recipes\n1.0.0_recipe_all = /allrecipes\n\n# planet\n1.0.0_planet_base = /planet\n1.0.0_planet_all = /allplanets\n1.0.0_planet_full = /allplanets/full\n1.0.0_planet_sites = /sites\n1.0.0_planet_search = /search\n\n# localmarket\n1.0.0_localmarket_base = /localmarket\n1.0.0_localmarket_planet = /planet\n1.0.0_localmarket_shipping_source = /shipping/source\n1.0.0_localmarket_shipping_destination = /shipping/destination\n1.0.0_localmarket_company = /company\n\n# sites\n1.0.0_sites_base = /sites\n1.0.0_sites_planets = /planets\n1.0.0_sites_warehouses = /warehouses\n\n# storage\n1.0.0_storage_base = /storage\n1.0.0_storage_planets = /planets\n\n# groups\n1.0.0_groups = /auth/groups\n1.0.0_groups_group = /auth/group\n1.0.0_groups_groupmemberships = /auth/groupmemberships\n1.0.0_groups_hub = /fioweb/grouphub\n1.0.0_groups_burn = /fioweb/burn/group\n</code></pre>"},{"location":"config/#config-class","title":"Config() class","text":""},{"location":"config/#config.logger","title":"logger  <code>module-attribute</code>","text":"<pre><code>logger = logging.getLogger(__name__)\n</code></pre>"},{"location":"config/#config.Config","title":"Config","text":"<pre><code>Config(\n    api_key=None,\n    version=None,\n    application=None,\n    base_url=None,\n    timeout=10.0,\n    ssl_verify=True,\n    user_config=None,\n)\n</code></pre> <p>FIO Wrapper configuration class</p> <p>Attributes:</p> Name Type Description <code>_api_key</code> <code>str</code> <p>FIO API key</p> <code>_version</code> <code>str</code> <p>FIO API version</p> <code>_application</code> <code>str</code> <p>Application name</p> <code>_base_url</code> <code>str</code> <p>FIO base url</p> <code>_timeout</code> <code>float</code> <p>FIO generic timeout</p> <code>_ssl_verify</code> <code>bool</code> <p>Request ssl verification</p> <code>data</code> <code>ConfigParser</code> <p>Configuration Parser</p> <p>Initializes the configuration</p> <p>Parameters:</p> Name Type Description Default <code>api_key</code> <code>Optional[str]</code> <p>FIO API key. Defaults to None.</p> <code>None</code> <code>version</code> <code>Optional[str]</code> <p>FIO API version. Defaults to None.</p> <code>None</code> <code>application</code> <code>Optional[str]</code> <p>Application name. Defaults to None.</p> <code>None</code> <code>base_url</code> <code>Optional[str]</code> <p>FIO base url. Defaults to None.</p> <code>None</code> <code>timeout</code> <code>Optional[float]</code> <p>FIO generic timeout. Defaults to 10.0.</p> <code>10.0</code> <code>ssl_verify</code> <code>Optional[bool]</code> <p>Request ssl verification. Defaults to True.</p> <code>True</code> <code>user_config</code> <code>Optional[str]</code> <p>User configuration file. Defaults to None.</p> <code>None</code> Source code in <code>fio_wrapper/config.py</code> <pre><code>def __init__(\n    self,\n    api_key: Optional[str] = None,\n    version: Optional[str] = None,\n    application: Optional[str] = None,\n    base_url: Optional[str] = None,\n    timeout: Optional[float] = 10.0,\n    ssl_verify: Optional[bool] = True,\n    user_config: Optional[str] = None,\n) -&gt; None:\n    \"\"\"Initializes the configuration\n\n    Args:\n        api_key (Optional[str]): FIO API key. Defaults to None.\n        version (Optional[str]): FIO API version. Defaults to None.\n        application (Optional[str]): Application name. Defaults to None.\n        base_url (Optional[str]): FIO base url. Defaults to None.\n        timeout (Optional[float]): FIO generic timeout. Defaults to 10.0.\n        ssl_verify (Optional[bool]): Request ssl verification. Defaults to True.\n        user_config (Optional[str]): User configuration file. Defaults to None.\n    \"\"\"\n    # FIO instantiation overwrites\n    self._api_key = api_key\n    self._version = version\n    self._application = application\n    self._base_url = base_url\n    self._timeout = timeout\n    self._ssl_verify = ssl_verify\n\n    # converters\n    converters = {\"list\": lambda x: [i.strip() for i in x.split(\",\")]}\n\n    # initialize data\n    # ConfigParser handles succession by order of read()\n    self.data: ConfigParser = ConfigParser(converters=converters)\n    self.data.read(os.path.join(os.path.dirname(__file__), \"base.ini\"))\n\n    # user config\n    if user_config is not None:\n        self.data.read(user_config)\n</code></pre>"},{"location":"config/#config.Config.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data = ConfigParser(converters=converters)\n</code></pre>"},{"location":"config/#config.Config.versions","title":"versions","text":"<pre><code>versions()\n</code></pre> <p>Gets the versions information from config</p> <p>Raises:</p> Type Description <code>SystemExit</code> <p>No list of available FIO versions provided</p> <p>Returns:</p> Type Description <code>List[str]</code> <p>List[str]: List of versions</p> Source code in <code>fio_wrapper/config.py</code> <pre><code>def versions(self) -&gt; List[str]:\n    \"\"\"Gets the versions information from config\n\n    Raises:\n        SystemExit: No list of available FIO versions provided\n\n    Returns:\n        List[str]: List of versions\n    \"\"\"\n    try:\n        return self.data.getlist(\"FIO\", \"versions\")\n    except Exception as exc:\n        raise SystemExit(\"No list of available FIO versions provided\") from exc\n</code></pre>"},{"location":"config/#config.Config.api_key","title":"api_key","text":"<pre><code>api_key()\n</code></pre> <p>Gets the FIO API key</p> <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>FIO API key or None</p> Source code in <code>fio_wrapper/config.py</code> <pre><code>def api_key(self) -&gt; str:\n    \"\"\"Gets the FIO API key\n\n    Returns:\n        str: FIO API key or None\n    \"\"\"\n    if self._api_key is not None:\n        return self._api_key\n\n    try:\n        return self.get(\"FIO\", \"api_key\")\n    except UnknownConfig:\n        # API Key can be blank\n        return None\n</code></pre>"},{"location":"config/#config.Config.version","title":"version","text":"<pre><code>version()\n</code></pre> <p>Gets the FIO version specified</p> <p>Raises:</p> Type Description <code>UnknownConfig</code> <p>No version setting found</p> <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>FIO API version</p> Source code in <code>fio_wrapper/config.py</code> <pre><code>def version(self) -&gt; str:\n    \"\"\"Gets the FIO version specified\n\n    Raises:\n        UnknownConfig: No version setting found\n\n    Returns:\n        str: FIO API version\n    \"\"\"\n    if self._version is not None:\n        return self._version\n\n    try:\n        return self.get(\"FIO\", \"version\")\n    except Exception as exc:\n        raise UnknownConfig(\"No version setting found\") from exc\n</code></pre>"},{"location":"config/#config.Config.application","title":"application","text":"<pre><code>application()\n</code></pre> <p>Gets the application name</p> <p>Raises:</p> Type Description <code>UnknownConfig</code> <p>No application setting found</p> <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>Application name</p> Source code in <code>fio_wrapper/config.py</code> <pre><code>def application(self) -&gt; str:\n    \"\"\"Gets the application name\n\n    Raises:\n        UnknownConfig: No application setting found\n\n    Returns:\n        str: Application name\n    \"\"\"\n    if self._application is not None:\n        return self._application\n\n    try:\n        return self.get(\"FIO\", \"application\")\n    except (NoSectionError, NoOptionError) as exc:\n        raise UnknownConfig(\"No application setting found\") from exc\n</code></pre>"},{"location":"config/#config.Config.base_url","title":"base_url","text":"<pre><code>base_url()\n</code></pre> <p>Gets the FIO base url</p> <p>Raises:</p> Type Description <code>UnknownConfig</code> <p>No base_url setting found</p> <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>FIO base url</p> Source code in <code>fio_wrapper/config.py</code> <pre><code>def base_url(self) -&gt; str:\n    \"\"\"Gets the FIO base url\n\n    Raises:\n        UnknownConfig: No base_url setting found\n\n    Returns:\n        str: FIO base url\n    \"\"\"\n    if self._base_url is not None:\n        return self._base_url\n\n    try:\n        return self.get(\"FIO\", \"base_url\")\n    except Exception as exc:\n        raise UnknownConfig(\"No base_url setting found\") from exc\n</code></pre>"},{"location":"config/#config.Config.timeout","title":"timeout","text":"<pre><code>timeout()\n</code></pre> <p>Gets the timeout parameter</p> <p>Raises:</p> Type Description <code>UnknownConfig</code> <p>No timeout setting found</p> <p>Returns:</p> Name Type Description <code>float</code> <code>float</code> <p>Timeout parameter</p> Source code in <code>fio_wrapper/config.py</code> <pre><code>def timeout(self) -&gt; float:\n    \"\"\"Gets the timeout parameter\n\n    Raises:\n        UnknownConfig: No timeout setting found\n\n    Returns:\n        float: Timeout parameter\n    \"\"\"\n    if self._timeout is not None:\n        return self._timeout\n\n    try:\n        # timeout value must be float\n        return float(self.get(\"FIO\", \"timeout\"))\n    except Exception as exc:\n        raise UnknownConfig(\"No timeout setting found\") from exc\n</code></pre>"},{"location":"config/#config.Config.ssl_verify","title":"ssl_verify","text":"<pre><code>ssl_verify()\n</code></pre> <p>Gets the ssl verification parameter</p> <p>Raises:</p> Type Description <code>UnknownConfig</code> <p>No ssl_verify setting found</p> <p>Returns:</p> Name Type Description <code>float</code> <code>float</code> <p>Seconds as float of request timeout</p> Source code in <code>fio_wrapper/config.py</code> <pre><code>def ssl_verify(self) -&gt; float:\n    \"\"\"Gets the ssl verification parameter\n\n    Raises:\n        UnknownConfig: No ssl_verify setting found\n\n    Returns:\n        float: Seconds as float of request timeout\n    \"\"\"\n    if self._ssl_verify is not None:\n        return self._ssl_verify\n\n    try:\n        return bool(self.get(\"FIO\", \"ssl_verify\"))\n    except Exception as exc:\n        raise UnknownConfig(\"No ssl_verify setting found\") from exc\n</code></pre>"},{"location":"config/#config.Config.get","title":"get","text":"<pre><code>get(section, option)\n</code></pre> <p>Gets a configuration element</p> <p>Parameters:</p> Name Type Description Default <code>section</code> <code>str</code> <p>Configuration section</p> required <code>option</code> <code>str</code> <p>Configuration option</p> required <p>Raises:</p> Type Description <code>UnknownConfig</code> <p>Configuration not found</p> <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>Configuration element</p> Source code in <code>fio_wrapper/config.py</code> <pre><code>def get(self, section: str, option: str) -&gt; str:\n    \"\"\"Gets a configuration element\n\n    Args:\n        section (str): Configuration section\n        option (str): Configuration option\n\n    Raises:\n        UnknownConfig: Configuration not found\n\n    Returns:\n        str: Configuration element\n    \"\"\"\n    logger.debug(\"get(): %s | %s\", section, option)\n    try:\n        return self.data.get(section, option)\n    except (NoSectionError, NoOptionError) as exc:\n        raise UnknownConfig() from exc\n</code></pre>"},{"location":"config/#config.Config.get_versioned","title":"get_versioned","text":"<pre><code>get_versioned(section, option)\n</code></pre> <p>Gets a versioned configuration element</p> <p>Parameters:</p> Name Type Description Default <code>section</code> <code>str</code> <p>Configuration section</p> required <code>option</code> <code>str</code> <p>Configuration option</p> required <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>Versioned configuration element (e.g., 1.0.0_base)</p> Source code in <code>fio_wrapper/config.py</code> <pre><code>def get_versioned(self, section: str, option: str) -&gt; str:\n    \"\"\"Gets a versioned configuration element\n\n    Args:\n        section (str): Configuration section\n        option (str): Configuration option\n\n    Returns:\n        str: Versioned configuration element (e.g., 1.0.0_base)\n    \"\"\"\n    option = f\"{self.version()}_{option}\"\n\n    logger.debug(\"get_versioned(): %s | %s\", section, option)\n\n    return self.get(section, option)\n</code></pre>"},{"location":"decorator/","title":"Decorators","text":""},{"location":"decorator/#decorator.apikey_required","title":"apikey_required","text":"<pre><code>apikey_required(func)\n</code></pre> <p>Wraps endpoint and check for FIO API Key</p> <p>Parameters:</p> Name Type Description Default <code>func</code> <code>method</code> <p>Wrapped endpoint method</p> required <p>Raises:</p> Type Description <code>SystemExit</code> <p>Decorator can only be used on endpoints</p> <code>NoAPIKeyProvided</code> <p>FIO API Key not provided, but endpoint requires it.</p> <p>Returns:</p> Name Type Description <code>method</code> <code>any</code> <p>Executed endpoint method</p> Source code in <code>fio_wrapper/decorator.py</code> <pre><code>def apikey_required(func) -&gt; any:\n    \"\"\"Wraps endpoint and check for FIO API Key\n\n    Args:\n        func (method): Wrapped endpoint method\n\n    Raises:\n        SystemExit: Decorator can only be used on endpoints\n        NoAPIKeyProvided: FIO API Key not provided, but endpoint requires it.\n\n    Returns:\n        method: Executed endpoint method\n    \"\"\"\n\n    @wraps(func)\n    def wrapper_apikey_required(self, *args, **kwargs):\n        # can only decorate endpoint functions\n        if self.adapter is None or not isinstance(self.adapter, FIOAdapter):\n            raise SystemExit(\"apikey_required decorator can only be used on endpoints\")\n\n        # requires API Key set in adapter\n        if self.adapter.header is None or self.adapter.header[\"Authorization\"] is None:\n            raise NoAPIKeyProvided(\n                \"FIO API Key not provided. This endpoint requires an API key.\"\n            )\n\n        return func(self, *args, **kwargs)\n\n    return wrapper_apikey_required\n</code></pre>"},{"location":"exception/","title":"Exceptions","text":""},{"location":"exception/#exceptions.EndpointNotImplemented","title":"EndpointNotImplemented","text":"<p>Endpoint is not implemented in fio_wrapper</p>"},{"location":"exception/#exceptions.NoAPIKeyProvided","title":"NoAPIKeyProvided","text":"<p>No FIO API Key was provided, but endpoint requires key</p>"},{"location":"exception/#exceptions.NotAuthenticated","title":"NotAuthenticated","text":"<p>FIO returned failed authentication</p>"},{"location":"exception/#exceptions.UnknownFIOResponse","title":"UnknownFIOResponse","text":"<p>FIO returned a unknown response</p>"},{"location":"exception/#exceptions.UnknownConfig","title":"UnknownConfig","text":"<p>Configuration not available</p>"},{"location":"exception/#exceptions.MaterialTickerInvalid","title":"MaterialTickerInvalid","text":"<p>Invalid Material Ticker provided</p>"},{"location":"exception/#exceptions.MaterialTickerNotFound","title":"MaterialTickerNotFound","text":"<p>Material Ticker not found</p>"},{"location":"exception/#exceptions.MaterialCategoryNotFound","title":"MaterialCategoryNotFound","text":"<p>Material Category not found</p>"},{"location":"exception/#exceptions.ExchangeTickerInvalid","title":"ExchangeTickerInvalid","text":"<p>Exchange ticker invalid</p>"},{"location":"exception/#exceptions.ExchangeTickerNotFound","title":"ExchangeTickerNotFound","text":"<p>Exchange ticker not found</p>"},{"location":"exception/#exceptions.CompanyCodeInvalid","title":"CompanyCodeInvalid","text":"<p>Company code invalid</p>"},{"location":"exception/#exceptions.BuildingTickerNotFound","title":"BuildingTickerNotFound","text":"<p>Building ticker not found</p>"},{"location":"exception/#exceptions.PlanetNotFound","title":"PlanetNotFound","text":"<p>Planet not found</p>"},{"location":"exception/#exceptions.PlanetSearchMaterialsInvalid","title":"PlanetSearchMaterialsInvalid","text":"<p>Planet search material ticker provided invalid</p>"},{"location":"exception/#exceptions.PlanetSearchDistanceChecksInvalid","title":"PlanetSearchDistanceChecksInvalid","text":"<p>Planet search invalid distance checks</p>"},{"location":"exception/#exceptions.PlanetSearchInvalidRequest","title":"PlanetSearchInvalidRequest","text":"<p>Planet search request invalid</p>"},{"location":"exception/#exceptions.InvalidAdType","title":"InvalidAdType","text":"<p>Ad type invalid</p>"},{"location":"exception/#exceptions.PlanetOrAdsNotFound","title":"PlanetOrAdsNotFound","text":"<p>Planet or ads not found</p>"},{"location":"exception/#exceptions.CompanyOrAdsNotFound","title":"CompanyOrAdsNotFound","text":"<p>Company or ads not found</p>"},{"location":"exception/#exceptions.NoSiteData","title":"NoSiteData","text":"<p>No site data found</p>"},{"location":"exception/#exceptions.NoStorageData","title":"NoStorageData","text":"<p>No storage data found</p>"},{"location":"fio/","title":"FIO","text":"<p>FIO class to access game data through FIO REST API endpoints</p>"},{"location":"fio/#fio.FIO","title":"FIO","text":"<pre><code>FIO(\n    version=None,\n    application=None,\n    api_key=None,\n    base_url=None,\n    timeout=None,\n    ssl_verify=True,\n    config=None,\n)\n</code></pre> <p>FIO API wrapper class</p> <p>Attributes:</p> Name Type Description <code>Building</code> <code>Building</code> <p>Building information</p> <code>Exchange</code> <code>Exchange</code> <p>Exchange information</p> <code>Group</code> <code>Group</code> <p>Group information</p> <code>LocalMarket</code> <code>LocalMarket</code> <p>LocalMarket information</p> <code>Material</code> <code>Material</code> <p>Material information</p> <code>Planet</code> <code>Planet</code> <p>Planet information</p> <code>Recipe</code> <code>Recipe</code> <p>Recipe information</p> <code>Sites</code> <code>Sites</code> <p>Sites information</p> <code>Storage</code> <code>Storage</code> <p>Storage information</p> <code>config</code> <code>Config</code> <p>FIO Configuration</p> <code>adapter</code> <code>FIOAdapter</code> <p>FIO Adapter</p> <code>urls</code> <code>URLs</code> <p>FIO URLs</p> <p>Initializes the FIO wrapper</p> <p>Parameters:</p> Name Type Description Default <code>version</code> <code>str</code> <p>FIO API version. Defaults to None.</p> <code>None</code> <code>application</code> <code>str</code> <p>Application name. Defaults to None.</p> <code>None</code> <code>api_key</code> <code>str</code> <p>FIO API-Key. Defaults to None.</p> <code>None</code> <code>base_url</code> <code>str</code> <p>FIO base url. Defaults to None.</p> <code>None</code> <code>timeout</code> <code>float</code> <p>Request timeout. Defaults to None.</p> <code>None</code> <code>ssl_verify</code> <code>bool</code> <p>Verify https connection. Defaults to True.</p> <code>True</code> <code>config</code> <code>Optional[str]</code> <p>(str, optional): User specified configuration file. Defaults to None.</p> <code>None</code> <p>Raises:</p> Type Description <code>EndpointNotImplemented</code> <p>description</p> Source code in <code>fio_wrapper/fio.py</code> <pre><code>def __init__(\n    self,\n    version: Optional[str] = None,\n    application: Optional[str] = None,\n    api_key: Optional[str] = None,\n    base_url: Optional[str] = None,\n    timeout: Optional[float] = None,\n    ssl_verify: Optional[bool] = True,\n    config: Optional[str] = None,\n) -&gt; None:\n    \"\"\"Initializes the FIO wrapper\n\n    Args:\n        version (str, optional): FIO API version. Defaults to None.\n        application (str, optional): Application name. Defaults to None.\n        api_key (str, optional): FIO API-Key. Defaults to None.\n        base_url (str, optional): FIO base url. Defaults to None.\n        timeout (float, optional): Request timeout. Defaults to None.\n        ssl_verify (bool, optional): Verify https connection. Defaults to True.\n        config: (str, optional): User specified configuration file. Defaults to None.\n\n    Raises:\n        EndpointNotImplemented: _description_\n    \"\"\"\n\n    # Config needs to already supercede here !!!\n\n    self.config = Config(\n        api_key=api_key,\n        version=version,\n        application=application,\n        base_url=base_url,\n        timeout=timeout,\n        ssl_verify=ssl_verify,\n        user_config=config,\n    )\n\n    # Check version availability\n    if self.config.version() not in self.config.versions():\n        raise EndpointNotImplemented(\"FIO version not supported\")\n\n    # create adapter\n    self.adapter = FIOAdapter(\n        header=self.get_header(),\n        ssl_verify=self.config.ssl_verify(),\n        timeout=self.config.timeout(),\n    )\n\n    # create urls\n    self.urls: URLs = URLs(self.config)\n\n    # add version 1.0.0 endpoints\n    if self.config.version() == \"1.0.0\":\n        self.Building = building_v1.Building(self.adapter, self.urls)\n        self.Exchange = exchange_v1.Exchange(self.adapter, self.urls)\n        self.Group = group_v1.Group(self.adapter, self.urls)\n        self.LocalMarket = localmarket_v1.LocalMarket(self.adapter, self.urls)\n        self.Material = material_v1.Material(self.adapter, self.urls)\n        self.Planet = planet_v1.Planet(self.adapter, self.urls)\n        self.Recipe = recipe_v1.Recipe(self.adapter, self.urls)\n        self.Sites = sites_v1.Sites(self.adapter, self.urls)\n        self.Storage = storage_v1.Storage(self.adapter, self.urls)\n</code></pre>"},{"location":"fio/#fio.FIO.config","title":"config  <code>instance-attribute</code>","text":"<pre><code>config = Config(\n    api_key=api_key,\n    version=version,\n    application=application,\n    base_url=base_url,\n    timeout=timeout,\n    ssl_verify=ssl_verify,\n    user_config=config,\n)\n</code></pre>"},{"location":"fio/#fio.FIO.adapter","title":"adapter  <code>instance-attribute</code>","text":"<pre><code>adapter = FIOAdapter(\n    header=self.get_header(),\n    ssl_verify=self.config.ssl_verify(),\n    timeout=self.config.timeout(),\n)\n</code></pre>"},{"location":"fio/#fio.FIO.urls","title":"urls  <code>instance-attribute</code>","text":"<pre><code>urls = URLs(self.config)\n</code></pre>"},{"location":"fio/#fio.FIO.Building","title":"Building  <code>instance-attribute</code>","text":"<pre><code>Building = building_v1.Building(self.adapter, self.urls)\n</code></pre>"},{"location":"fio/#fio.FIO.Exchange","title":"Exchange  <code>instance-attribute</code>","text":"<pre><code>Exchange = exchange_v1.Exchange(self.adapter, self.urls)\n</code></pre>"},{"location":"fio/#fio.FIO.Group","title":"Group  <code>instance-attribute</code>","text":"<pre><code>Group = group_v1.Group(self.adapter, self.urls)\n</code></pre>"},{"location":"fio/#fio.FIO.LocalMarket","title":"LocalMarket  <code>instance-attribute</code>","text":"<pre><code>LocalMarket = localmarket_v1.LocalMarket(\n    self.adapter, self.urls\n)\n</code></pre>"},{"location":"fio/#fio.FIO.Material","title":"Material  <code>instance-attribute</code>","text":"<pre><code>Material = material_v1.Material(self.adapter, self.urls)\n</code></pre>"},{"location":"fio/#fio.FIO.Planet","title":"Planet  <code>instance-attribute</code>","text":"<pre><code>Planet = planet_v1.Planet(self.adapter, self.urls)\n</code></pre>"},{"location":"fio/#fio.FIO.Recipe","title":"Recipe  <code>instance-attribute</code>","text":"<pre><code>Recipe = recipe_v1.Recipe(self.adapter, self.urls)\n</code></pre>"},{"location":"fio/#fio.FIO.Sites","title":"Sites  <code>instance-attribute</code>","text":"<pre><code>Sites = sites_v1.Sites(self.adapter, self.urls)\n</code></pre>"},{"location":"fio/#fio.FIO.Storage","title":"Storage  <code>instance-attribute</code>","text":"<pre><code>Storage = storage_v1.Storage(self.adapter, self.urls)\n</code></pre>"},{"location":"fio/#fio.FIO.get_header","title":"get_header","text":"<pre><code>get_header()\n</code></pre> <p>Creates the header to be included in calls towards FIO</p> <p>Returns:</p> Type Description <code>Dict[str, str]</code> <p>Dict[str, str]: Contains \"Authorization\" and \"X-FIO-Application\"</p> Source code in <code>fio_wrapper/fio.py</code> <pre><code>def get_header(self) -&gt; Dict[str, str]:\n    \"\"\"Creates the header to be included in calls towards FIO\n\n    Returns:\n        Dict[str, str]: Contains \"Authorization\" and \"X-FIO-Application\"\n    \"\"\"\n    return {\n        \"Authorization\": self.config.api_key(),\n        \"X-FIO-Application\": self.config.application(),\n    }\n</code></pre>"},{"location":"fio_adapter/","title":"Adapter","text":"<p>Request adapter performing actual API calls towards FIO endpoints</p>"},{"location":"fio_adapter/#fio_adapter.logger","title":"logger  <code>module-attribute</code>","text":"<pre><code>logger = logging.getLogger(__name__)\n</code></pre>"},{"location":"fio_adapter/#fio_adapter.FIOAdapter","title":"FIOAdapter","text":"<pre><code>FIOAdapter(header, ssl_verify=True, timeout=10.0)\n</code></pre> <p>FIO Adapater</p> <p>Attributes:</p> Name Type Description <code>header</code> <code>Dict[str, str]</code> <p>FIO Header.</p> <code>ssl_verify</code> <code>bool</code> <p>Verify https connection. Defaults to True.</p> <code>timeout</code> <code>float</code> <p>Request timeout in seconds. Defaults to 10.0.</p> <p>Initializes the FIO adapter</p> <p>Parameters:</p> Name Type Description Default <code>header</code> <code>Dict[str, str]</code> <p>FIO Header.</p> required <code>ssl_verify</code> <code>bool</code> <p>Verify https connection. Defaults to True.</p> <code>True</code> <code>timeout</code> <code>float</code> <p>Request timeout in seconds. Defaults to 10.0.</p> <code>10.0</code> Source code in <code>fio_wrapper/fio_adapter.py</code> <pre><code>def __init__(\n    self,\n    header: Dict[str, str],\n    ssl_verify: bool = True,\n    timeout: float = 10.0,\n):\n    \"\"\"Initializes the FIO adapter\n\n    Args:\n        header (Dict[str, str]): FIO Header.\n        ssl_verify (bool, optional): Verify https connection. Defaults to True.\n        timeout (float, optional): Request timeout in seconds. Defaults to 10.0.\n    \"\"\"\n\n    self.header = header\n    self.ssl_verify = ssl_verify\n    self.timeout = timeout\n\n    if not ssl_verify:\n        requests.packages.urllib3.disable_warnings(category=InsecureRequestWarning)\n</code></pre>"},{"location":"fio_adapter/#fio_adapter.FIOAdapter.header","title":"header  <code>instance-attribute</code>","text":"<pre><code>header = header\n</code></pre>"},{"location":"fio_adapter/#fio_adapter.FIOAdapter.ssl_verify","title":"ssl_verify  <code>instance-attribute</code>","text":"<pre><code>ssl_verify = ssl_verify\n</code></pre>"},{"location":"fio_adapter/#fio_adapter.FIOAdapter.timeout","title":"timeout  <code>instance-attribute</code>","text":"<pre><code>timeout = timeout\n</code></pre>"},{"location":"fio_adapter/#fio_adapter.FIOAdapter.get","title":"get","text":"<pre><code>get(endpoint, params=None, err_codes=None, timeout=None)\n</code></pre> <p>Performs a GET request towards endpoint</p> <p>Parameters:</p> Name Type Description Default <code>endpoint</code> <code>str</code> <p>URL</p> required <code>params</code> <code>Dict</code> <p>GET parameters. Defaults to None.</p> <code>None</code> <code>err_codes</code> <code>List[int]</code> <p>List of error codes to handle in calling function. Defaults to None.</p> <code>None</code> <code>timeout</code> <code>float</code> <p>Request timeout in seconds. Defaults to None.</p> <code>None</code> <p>Returns:</p> Type Description <code>Tuple[int, any]</code> <p>Tuple[int, any]: Request status code and request data</p> Source code in <code>fio_wrapper/fio_adapter.py</code> <pre><code>def get(\n    self,\n    endpoint: str,\n    params: Dict = None,\n    err_codes: Optional[List[int]] = None,\n    timeout: Optional[float] = None,\n) -&gt; Tuple[int, any]:\n    \"\"\"Performs a GET request towards endpoint\n\n    Args:\n        endpoint (str): URL\n        params (Dict, optional): GET parameters. Defaults to None.\n        err_codes (List[int], optional): List of error codes to handle in calling function. Defaults to None.\n        timeout (float, optional): Request timeout in seconds. Defaults to None.\n\n    Returns:\n        Tuple[int, any]: Request status code and request data\n    \"\"\"\n    return self._do(\n        http_method=\"GET\",\n        endpoint=endpoint,\n        params=params,\n        err_codes=err_codes,\n        timeout=timeout,\n    )\n</code></pre>"},{"location":"fio_adapter/#fio_adapter.FIOAdapter.post","title":"post","text":"<pre><code>post(\n    endpoint,\n    params=None,\n    data=None,\n    err_codes=None,\n    timeout=None,\n)\n</code></pre> <p>Performs a POST request towards endpoint</p> <p>Parameters:</p> Name Type Description Default <code>endpoint</code> <code>str</code> <p>URL</p> required <code>params</code> <code>Dict</code> <p>POST parameters. Defaults to None.</p> <code>None</code> <code>data</code> <code>Dict</code> <p>POST data. Defaults to None.</p> <code>None</code> <code>err_codes</code> <code>List[int]</code> <p>List of error codes to handle in calling function. Defaults to None.</p> <code>None</code> <code>timeout</code> <code>float</code> <p>Request timeout in seconds. Defaults to None.</p> <code>None</code> <p>Returns:</p> Type Description <code>Tuple[int, any]</code> <p>Tuple[int, any]: Request status code and request data</p> Source code in <code>fio_wrapper/fio_adapter.py</code> <pre><code>def post(\n    self,\n    endpoint: str,\n    params: Dict = None,\n    data: Dict = None,\n    err_codes: Optional[List[int]] = None,\n    timeout: Optional[float] = None,\n) -&gt; Tuple[int, any]:\n    \"\"\"Performs a POST request towards endpoint\n\n    Args:\n        endpoint (str): URL\n        params (Dict, optional): POST parameters. Defaults to None.\n        data (Dict, optional): POST data. Defaults to None.\n        err_codes (List[int], optional): List of error codes to handle in calling function. Defaults to None.\n        timeout (float): Request timeout in seconds. Defaults to None.\n\n    Returns:\n        Tuple[int, any]: Request status code and request data\n    \"\"\"\n    return self._do(\n        http_method=\"POST\",\n        endpoint=endpoint,\n        params=params,\n        data=data,\n        err_codes=err_codes,\n        timeout=timeout,\n    )\n</code></pre>"},{"location":"routes/","title":"FIO REST API endpoints","text":"<p>FIO Wrapper includes the most commonly used FIO REST API endpoints.</p>"},{"location":"routes/#building","title":"Building","text":"<ul> <li><code>GET</code> /building/{BuildingTicker}</li> <li><code>GET</code> /building/allbuildings</li> </ul>"},{"location":"routes/#exchange","title":"Exchange","text":"<ul> <li><code>GET</code> /exchange/{ExchangeTicker}</li> <li><code>GET</code> /exchange/all</li> <li><code>GET</code> /exchange/full</li> <li><code>GET</code> /exchange/orders/{CompanyCode}</li> <li><code>GET</code> /exchange/orders/{CompanyCode}/{ExchangeCode}</li> </ul>"},{"location":"routes/#localmarket","title":"LocalMarket","text":"<ul> <li><code>GET</code> /localmarket/planet/{Planet}</li> <li><code>GET</code> /localmarket/planet/{Planet}/{Type}</li> <li><code>GET</code> /localmarket/shipping/source/{Planet}</li> <li><code>GET</code> /localmarket/shipping/destination/{Planet}</li> <li><code>GET</code> /localmarket/company/{Company}</li> </ul>"},{"location":"routes/#material","title":"Material","text":"<ul> <li><code>GET</code> /material/{MaterialTicker}</li> <li><code>GET</code> /material/allmaterials</li> <li><code>GET</code> /material/category/{CategoryName}</li> </ul>"},{"location":"routes/#planet","title":"Planet","text":"<ul> <li><code>GET</code> /planet/{Planet}</li> <li><code>GET</code> /planet/allplanets</li> <li><code>GET</code> /planet/allplanets/full</li> <li><code>GET</code> /planet/sites/{Planet}</li> <li><code>POST</code> /planet/search</li> </ul>"},{"location":"routes/#recipes","title":"Recipes","text":"<ul> <li><code>GET</code> /recipes/{Ticker}</li> <li><code>GET</code> /recipes/allrecipes</li> </ul>"},{"location":"routes/#sites","title":"Sites","text":"<ul> <li><code>GET</code> /sites/{UserName}</li> <li><code>GET</code> /sites/planets/{UserName}</li> <li><code>GET</code> /sites/{UserName}/{Planet}</li> <li><code>GET</code> /sites/warehouses/{UserName}</li> </ul>"},{"location":"routes/#storage","title":"Storage","text":"<ul> <li><code>GET</code> /storage/{UserName}</li> <li><code>GET</code> /storage/planets/{UserName}</li> <li><code>GET</code> /storage/{UserName}/{StorageDescription}</li> </ul>"},{"location":"routes/#group","title":"Group","text":"<ul> <li><code>GET</code> /auth/groups</li> <li><code>GET</code> /auth/group/{GroupId}</li> <li><code>GET</code> /auth/groupmemberships</li> <li><code>POST</code> /fioweb/grouphub</li> <li><code>GET</code> /fioweb/burn/group/{GroupId}</li> </ul>"},{"location":"timeouts/","title":"Timeouts","text":""},{"location":"timeouts/#logic","title":"Logic","text":"<p>All calls the wrapper makes towards FIO contain a specified timeout value on <code>requests</code> to not keep your program in an infinite loop.</p> <p>Timeouts can be defined by the user on two levels:</p> <ol> <li>Upon instantiation of the <code>FIO</code> class</li> <li>Upon individual endpoint calls</li> </ol> <p>FIO Wrapper includes a default fallback to <code>10.0</code> seconds, if no value is defined by the user. Overwriting to <code>None</code> to disable timeouts is possible.</p>"},{"location":"timeouts/#fio-instantiation","title":"<code>FIO</code> instantiation","text":"<p>Define a default timeout for all requests by overwriting the <code>Adapter</code> default.</p> <pre><code>from fio_wrapper import FIO\n\n# set timeout to 5 seconds\nfio = FIO(timeout=5)\n</code></pre> <p>FIO Wrapper will now apply the timeout of <code>5 seconds</code> to all calls it is making towards FIO.</p>"},{"location":"timeouts/#configuration-file","title":"Configuration file","text":"<p>A standard timeout can also be defined in a users configuration file.</p>"},{"location":"timeouts/#indidivual-endpoint-calls","title":"Indidivual endpoint calls","text":"<p>All endpoints allow passing the optional <code>timeout</code> argument that is of type <code>Optional[float]</code> and defaults to <code>None</code>.</p> <pre><code>from fio_wrapper import FIO\n\n# no timeout set, uses default (10 seconds)\nfio = FIO()\n\n\n# Call will timeout after default (10 seconds) from Adapter\nall_buildings = fio.Building.all()\n\n# Call will timeout after 3.5 seconds\nall_exchange = fio.Exchange.all(timeout=3.5)\n</code></pre> <p>It is highly recommended to not set any timeout to <code>None</code> to avoid infinite loops especially on expensive FIO endpoints like <code>Group</code>.</p>"},{"location":"usage/","title":"Usage","text":""},{"location":"usage/#installation","title":"Installation","text":"<pre><code>pip install fio-wrapper\n</code></pre>"},{"location":"usage/#simple-usage","title":"Simple Usage","text":"<p>Creating the FIO adapter and looking for information about the material Drinking Water by its ticker \"DW\". <pre><code>from fio_wrapper import FIO\n\nfio = FIO()\n\nmaterial = fio.Material.get(\"DW\")\n\nprint(material.model_dump_json())\n</code></pre></p> <p>This will print the material information of Drinking Water as MaterialModel and it's JSON.</p> <pre><code>{\n    \"MaterialId\": \"4fca6f5b5e6c3b8a1b887c6dc99db146\",\n    \"CategoryName\": \"consumables (basic)\",\n    \"CategoryId\": \"3f047ec3043bdd795fd7272d6be98799\",\n    \"Name\": \"drinkingWater\",\n    \"Ticker\": \"DW\",\n    \"Weight\": 0.10000000149011612,\n    \"Volume\": 0.10000000149011612,\n    \"UserNameSubmitted\": \"SAGANAKI\",\n    \"Timestamp\": \"2023-10-28T19:26:21.831707\"\n}\n</code></pre>"},{"location":"usage/#additional-parameters","title":"Additional parameters","text":"<p>FIO Wrapper allows you to specify additional attributes when instantiating. The most commonly used is <code>api_key</code> that lets you add your FIO API Key (obtained on the FIO Website) to access protected endpoints like Site or Storage.</p> <pre><code>from fio_wrapper import FIO\n\nfio = FIO(api_key=\"YOUR_FIO_API_KEY\")\n</code></pre> <p>The complete list of parameters can be found on <code>FIO()</code>.</p>"},{"location":"usage/#configuration-file","title":"Configuration file","text":"<p>FIO Wrapper can use a configuration file provided upon instantiation to overwrite its base configuration.</p> <p>Example configuration file <code>config.ini</code>:</p> <pre><code>[FIO]\napplication = My Awesome FIO application\ntimeout = 3\napi_key = MY_FIO_API_KEY\n</code></pre> <p>Use this configuration file on <code>FIO()</code> by providing the <code>config</code> attribute:</p> <pre><code>from fio_wrapper import FIO\n\nfio = FIO(config=\"config.ini\")\n</code></pre>"},{"location":"endpoints/building/","title":"Building","text":"<p>Access building information from FIO.</p>"},{"location":"endpoints/building/#endpoints.endpoints_v1.building.Building","title":"Building","text":"<p>             Bases: <code>AbstractBuilding</code>, <code>AbstractEndpoint</code></p>"},{"location":"endpoints/building/#endpoints.endpoints_v1.building.Building.get","title":"get","text":"<pre><code>get(building_ticker, timeout=None)\n</code></pre> <p>Gets a single building from FIO</p> <p>Parameters:</p> Name Type Description Default <code>building_ticker</code> <code>str</code> <p>Building Ticker (e.g., \"CHP\")</p> required <code>timeout</code> <code>float</code> <p>Request timeout in seconds. Defaults to None.</p> <code>None</code> <p>Raises:</p> Type Description <code>BuildingTickerNotFound</code> <p>Building Ticker was not found</p> <p>Returns:</p> Name Type Description <code>BuildingTicker</code> <code>BuildingTicker</code> <p>Building</p> Source code in <code>fio_wrapper/endpoints/endpoints_v1/building.py</code> <pre><code>def get(\n    self, building_ticker: str, timeout: Optional[float] = None\n) -&gt; BuildingTicker:\n    \"\"\"Gets a single building from FIO\n\n    Args:\n        building_ticker (str): Building Ticker (e.g., \"CHP\")\n        timeout (float, optional): Request timeout in seconds. Defaults to None.\n\n    Raises:\n        BuildingTickerNotFound: Building Ticker was not found\n\n    Returns:\n        BuildingTicker: Building\n    \"\"\"\n    (status, data) = self.adapter.get(\n        endpoint=self.urls.building_get_url(building_ticker=building_ticker),\n        err_codes=[204],\n        timeout=timeout,\n    )\n\n    if status == 200:\n        return BuildingTicker.model_validate(data)\n    elif status == 204:\n        raise BuildingTickerNotFound(\"Buildingticker not found\")\n</code></pre>"},{"location":"endpoints/building/#endpoints.endpoints_v1.building.Building.all","title":"all","text":"<pre><code>all(timeout=None)\n</code></pre> <p>Gets all buildings from FIO</p> <p>Parameters:</p> Name Type Description Default <code>timeout</code> <code>float</code> <p>Request timeout in seconds. Defaults to None.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>BuildingTickerList</code> <code>BuildingTickerList</code> <p>List of Buildings as List[BuildingTicker]</p> Source code in <code>fio_wrapper/endpoints/endpoints_v1/building.py</code> <pre><code>def all(self, timeout: Optional[float] = None) -&gt; BuildingTickerList:\n    \"\"\"Gets all buildings from FIO\n\n    Args:\n        timeout (float, optional): Request timeout in seconds. Defaults to None.\n\n    Returns:\n        BuildingTickerList: List of Buildings as List[BuildingTicker]\n    \"\"\"\n    (_, data) = self.adapter.get(\n        endpoint=self.urls.building_get_all_url(), timeout=timeout\n    )\n\n    return BuildingTickerList.model_validate(data)\n</code></pre>"},{"location":"endpoints/exchange/","title":"Exchange","text":"<p>Access exchange information from FIO.</p>"},{"location":"endpoints/exchange/#endpoints.endpoints_v1.exchange.Exchange","title":"Exchange","text":"<p>             Bases: <code>AbstractExchange</code>, <code>AbstractEndpoint</code></p>"},{"location":"endpoints/exchange/#endpoints.endpoints_v1.exchange.Exchange.get","title":"get","text":"<pre><code>get(exchange_ticker, timeout=None)\n</code></pre> <p>Gets a single exchange ticker from FIO</p> <p>Parameters:</p> Name Type Description Default <code>exchange_ticker</code> <code>str</code> <p>Exchange Ticker (e.g., \"DW.AI1\")</p> required <code>timeout</code> <code>float</code> <p>Request timeout in seconds. Defaults to None.</p> <code>None</code> <p>Raises:</p> Type Description <code>ExchangeTickerNotFound</code> <p>Exchange ticker was not found</p> <p>Returns:</p> Name Type Description <code>ExchangeTicker</code> <code>ExchangeTickerFull</code> <p>Exchange ticker</p> Source code in <code>fio_wrapper/endpoints/endpoints_v1/exchange.py</code> <pre><code>def get(\n    self, exchange_ticker: str, timeout: Optional[float] = None\n) -&gt; ExchangeTickerFull:\n    \"\"\"Gets a single exchange ticker from FIO\n\n    Args:\n        exchange_ticker (str): Exchange Ticker (e.g., \"DW.AI1\")\n        timeout (float, optional): Request timeout in seconds. Defaults to None.\n\n    Raises:\n        ExchangeTickerNotFound: Exchange ticker was not found\n\n    Returns:\n        ExchangeTicker: Exchange ticker\n    \"\"\"\n    self._validate_exchangeticker(exchange_ticker=exchange_ticker)\n\n    (status, data) = self.adapter.get(\n        endpoint=self.urls.exchange_get_url(exchange_ticker=exchange_ticker),\n        err_codes=[204],\n        timeout=timeout,\n    )\n\n    if status == 200:\n        return ExchangeTickerFull.model_validate(data)\n    elif status == 204:\n        raise ExchangeTickerNotFound(\"Exchangeticker not found\")\n</code></pre>"},{"location":"endpoints/exchange/#endpoints.endpoints_v1.exchange.Exchange.all","title":"all","text":"<pre><code>all(timeout=None)\n</code></pre> <p>Gets all simple exchange ticker from FIO</p> <p>Parameters:</p> Name Type Description Default <code>timeout</code> <code>float</code> <p>Request timeout in seconds. Defaults to None.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>ExchangeTickerList</code> <code>ExchangeTickerList</code> <p>Exchange ticker</p> Source code in <code>fio_wrapper/endpoints/endpoints_v1/exchange.py</code> <pre><code>def all(self, timeout: Optional[float] = None) -&gt; ExchangeTickerList:\n    \"\"\"Gets all simple exchange ticker from FIO\n\n    Args:\n        timeout (float, optional): Request timeout in seconds. Defaults to None.\n\n    Returns:\n        ExchangeTickerList: Exchange ticker\n    \"\"\"\n    (_, data) = self.adapter.get(\n        endpoint=self.urls.exchange_get_all_url(), timeout=timeout\n    )\n\n    return ExchangeTickerList.model_validate(data)\n</code></pre>"},{"location":"endpoints/exchange/#endpoints.endpoints_v1.exchange.Exchange.full","title":"full","text":"<pre><code>full(timeout=None)\n</code></pre> <p>Gets a complete list of all exchange information from FIO</p> <p>Parameters:</p> Name Type Description Default <code>timeout</code> <code>float</code> <p>Request timeout in seconds. Defaults to None.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>ExchangeTickerFullList</code> <code>ExchangeTickerFullList</code> <p>Exchange ticker full</p> Source code in <code>fio_wrapper/endpoints/endpoints_v1/exchange.py</code> <pre><code>def full(self, timeout: Optional[float] = None) -&gt; ExchangeTickerFullList:\n    \"\"\"Gets a complete list of all exchange information from FIO\n\n    Args:\n        timeout (float, optional): Request timeout in seconds. Defaults to None.\n\n    Returns:\n        ExchangeTickerFullList: Exchange ticker full\n    \"\"\"\n    (_, data) = self.adapter.get(\n        endpoint=self.urls.exchange_get_full_url(), timeout=timeout\n    )\n\n    return ExchangeTickerFullList.model_validate(data)\n</code></pre>"},{"location":"endpoints/exchange/#endpoints.endpoints_v1.exchange.Exchange.get_orders","title":"get_orders","text":"<pre><code>get_orders(company_code, timeout=None)\n</code></pre> <p>Gets a companies order data from FIO</p> <p>Parameters:</p> Name Type Description Default <code>company_code</code> <code>str</code> <p>Company code (1-4 characters)</p> required <code>timeout</code> <code>float</code> <p>Request timeout in seconds. Defaults to None.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>OrderList</code> <code>OrderList</code> <p>Orders</p> Source code in <code>fio_wrapper/endpoints/endpoints_v1/exchange.py</code> <pre><code>def get_orders(\n    self, company_code: str, timeout: Optional[float] = None\n) -&gt; OrderList:\n    \"\"\"Gets a companies order data from FIO\n\n    Args:\n        company_code (str): Company code (1-4 characters)\n        timeout (float, optional): Request timeout in seconds. Defaults to None.\n\n    Returns:\n        OrderList: Orders\n    \"\"\"\n    # 1 to 4 character company code\n    validate_company_code(company_code=company_code)\n\n    (_, data) = self.adapter.get(\n        endpoint=self.urls.exchange_get_orders_companycode(\n            company_code=company_code\n        ),\n        timeout=timeout,\n    )\n\n    return OrderList.model_validate(data)\n</code></pre>"},{"location":"endpoints/exchange/#endpoints.endpoints_v1.exchange.Exchange.get_orders_exchange","title":"get_orders_exchange","text":"<pre><code>get_orders_exchange(\n    company_code, exchange_code, timeout=None\n)\n</code></pre> <p>Gets a companies order data for a specific exchange from FIO</p> <p>Parameters:</p> Name Type Description Default <code>company_code</code> <code>str</code> <p>Company code (1-4 characters)</p> required <code>exchange_code</code> <code>str</code> <p>Exchange code (e.g., \"AI1\")</p> required <code>timeout</code> <code>float</code> <p>Request timeout in seconds. Defaults to None.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>OrderList</code> <code>OrderList</code> <p>Orders</p> Source code in <code>fio_wrapper/endpoints/endpoints_v1/exchange.py</code> <pre><code>def get_orders_exchange(\n    self, company_code: str, exchange_code: str, timeout: Optional[float] = None\n) -&gt; OrderList:\n    \"\"\"Gets a companies order data for a specific exchange from FIO\n\n    Args:\n        company_code (str): Company code (1-4 characters)\n        exchange_code (str): Exchange code (e.g., \"AI1\")\n        timeout (float, optional): Request timeout in seconds. Defaults to None.\n\n    Returns:\n        OrderList: Orders\n    \"\"\"\n    validate_company_code(company_code=company_code)\n    validate_exchange_code(exchange_code=exchange_code)\n\n    (_, data) = self.adapter.get(\n        endpoint=self.urls.exchange_get_orders_companycode_exchange(\n            company_code=company_code, exchange_code=exchange_code\n        ),\n        timeout=timeout,\n    )\n\n    return OrderList.model_validate(data)\n</code></pre>"},{"location":"endpoints/group/","title":"Group","text":"<p>Exposes FIO group data. All Group data requires a <code>FIO API KEY</code>. You will need to have access to the data the user has in FIO in order to access it.</p> <p>Groups can be created and modified in the FIO Settings.</p>"},{"location":"endpoints/group/#examples","title":"Examples","text":""},{"location":"endpoints/group/#all-groups-their-information","title":"All groups &amp; their information","text":"<pre><code># Get all groups \ngroups = fio.Group.all()\n\n# Iterate through group IDs and print group details\nfor id in groups.ids():\n    # Get information of specific group by Id\n    group = fio.Group.get(groupid=id)\n    print(group)\n</code></pre>"},{"location":"endpoints/group/#members-of-a-specific-group-and-hub-information","title":"Members of a specific Group and Hub information","text":"<pre><code># Get group users\ngroup_user = fio.Group.get(groupid=123456).users()\n\n# Get hub information\ndata = fio.Group.hub(group_user)\n</code></pre>"},{"location":"endpoints/group/#members-burn-information","title":"Members Burn information","text":"<pre><code># Get Burn information\ndata = fio.Group.burn(groupid=123456)\n</code></pre>"},{"location":"endpoints/group/#endpoints","title":"Endpoints","text":""},{"location":"endpoints/group/#endpoints.endpoints_v1.group.Group","title":"Group","text":"<p>             Bases: <code>AbstractGroup</code>, <code>AbstractEndpoint</code></p>"},{"location":"endpoints/group/#endpoints.endpoints_v1.group.Group.all","title":"all","text":"<pre><code>all(timeout=None)\n</code></pre> <p>Gets all groups from FIO</p> Note <p>FIO API Key Required</p> <p>Parameters:</p> Name Type Description Default <code>timeout</code> <code>float</code> <p>Request timeout in seconds. Defaults to None.</p> <code>None</code> <p>Raises:</p> Type Description <code>UnknownFIOResponse</code> <p>FIO returned an unknown response</p> <p>Returns:</p> Name Type Description <code>GroupList</code> <code>GroupList</code> <p>List of Groups</p> Source code in <code>fio_wrapper/endpoints/endpoints_v1/group.py</code> <pre><code>@apikey_required\ndef all(self, timeout: Optional[float] = None) -&gt; GroupList:\n    \"\"\"Gets all groups from FIO\n\n    Note:\n        FIO API Key Required\n\n    Args:\n        timeout (float, optional): Request timeout in seconds. Defaults to None.\n\n    Raises:\n        UnknownFIOResponse: FIO returned an unknown response\n\n    Returns:\n        GroupList: List of Groups\n    \"\"\"\n    (status, data) = self.adapter.get(\n        endpoint=self.urls.group_all_url(), timeout=timeout\n    )\n\n    if status == 200:\n        return GroupList.model_validate(data)\n</code></pre>"},{"location":"endpoints/group/#endpoints.endpoints_v1.group.Group.get","title":"get","text":"<pre><code>get(groupid, timeout=None)\n</code></pre> <p>Gets group information for specified GroupID from FIO</p> Note <p>FIO API Key Required</p> <p>Parameters:</p> Name Type Description Default <code>groupid</code> <code>int</code> <p>GroupModelId</p> required <code>timeout</code> <code>float</code> <p>Request timeout in seconds. Defaults to None.</p> <code>None</code> <p>Raises:</p> Type Description <code>UnknownFIOResponse</code> <p>FIO returned an unknown response</p> <p>Returns:</p> Name Type Description <code>GroupModel</code> <code>Group</code> <p>GroupModel</p> Source code in <code>fio_wrapper/endpoints/endpoints_v1/group.py</code> <pre><code>@apikey_required\ndef get(self, groupid: int, timeout: Optional[float] = None) -&gt; GroupModel:\n    \"\"\"Gets group information for specified GroupID from FIO\n\n    Note:\n        FIO API Key Required\n\n    Args:\n        groupid (int): GroupModelId\n        timeout (float, optional): Request timeout in seconds. Defaults to None.\n\n    Raises:\n        UnknownFIOResponse: FIO returned an unknown response\n\n    Returns:\n        GroupModel: GroupModel\n    \"\"\"\n    (status, data) = self.adapter.get(\n        endpoint=self.urls.group_get_url(groupid=groupid), timeout=timeout\n    )\n\n    if status == 200:\n        return GroupModel.model_validate(data)\n</code></pre>"},{"location":"endpoints/group/#endpoints.endpoints_v1.group.Group.memberships","title":"memberships","text":"<pre><code>memberships(timeout=None)\n</code></pre> <p>Gets all groups the FIO API Key is member of</p> Note <p>FIO API Key Required</p> <p>Parameters:</p> Name Type Description Default <code>timeout</code> <code>float</code> <p>Request timeout in seconds. Defaults to None.</p> <code>None</code> <p>Raises:</p> Type Description <code>UnknownFIOResponse</code> <p>FIO returned an unknown response</p> <p>Returns:</p> Name Type Description <code>GroupMembershipList</code> <code>GroupMembershipList</code> <p>List of Group Memberships</p> Source code in <code>fio_wrapper/endpoints/endpoints_v1/group.py</code> <pre><code>@apikey_required\ndef memberships(self, timeout: Optional[float] = None) -&gt; GroupMembershipList:\n    \"\"\"Gets all groups the FIO API Key is member of\n\n    Note:\n        FIO API Key Required\n\n    Args:\n        timeout (float, optional): Request timeout in seconds. Defaults to None.\n\n    Raises:\n        UnknownFIOResponse: FIO returned an unknown response\n\n    Returns:\n        GroupMembershipList: List of Group Memberships\n    \"\"\"\n    (status, data) = self.adapter.get(\n        endpoint=self.urls.group_memberships_url(), timeout=timeout\n    )\n\n    if status == 200:\n        return GroupMembershipList.model_validate(data)\n</code></pre>"},{"location":"endpoints/group/#endpoints.endpoints_v1.group.Group.hub","title":"hub","text":"<pre><code>hub(members, timeout=None)\n</code></pre> <p>Gets the groups Hub information from FIO</p> Note <p>FIO API Key Required</p> <p>Parameters:</p> Name Type Description Default <code>members</code> <code>List[str]</code> <p>List of members, e.g. [\"NAME1\", \"NAME2\"]</p> required <code>timeout</code> <code>float</code> <p>Request timeout in seconds. Defaults to None.</p> <code>None</code> <p>Raises:</p> Type Description <code>UnknownFIOResponse</code> <p>FIO returned an unknown response</p> <p>Returns:</p> Name Type Description <code>GroupHub</code> <code>GroupHub</code> <p>GroupHub data from FIO</p> Source code in <code>fio_wrapper/endpoints/endpoints_v1/group.py</code> <pre><code>@apikey_required\ndef hub(self, members: List[str], timeout: Optional[float] = None) -&gt; GroupHub:\n    \"\"\"Gets the groups Hub information from FIO\n\n    Note:\n        FIO API Key Required\n\n    Args:\n        members (List[str]): List of members, e.g. [\"NAME1\", \"NAME2\"]\n        timeout (float, optional): Request timeout in seconds. Defaults to None.\n\n    Raises:\n        UnknownFIOResponse: FIO returned an unknown response\n\n    Returns:\n        GroupHub: GroupHub data from FIO\n    \"\"\"\n    (status, data) = self.adapter.post(\n        endpoint=self.urls.group_hub_url(), data=members, timeout=timeout\n    )\n\n    if status == 200:\n        return GroupHub.model_validate(data)\n</code></pre>"},{"location":"endpoints/group/#endpoints.endpoints_v1.group.Group.burn","title":"burn","text":"<pre><code>burn(groupid, timeout=None)\n</code></pre> <p>Gets the groups Burn information from FIO</p> Note <p>FIO API Key Required</p> <p>Parameters:</p> Name Type Description Default <code>groupid</code> <code>int</code> <p>GroupModelId</p> required <code>timeout</code> <code>float</code> <p>Request timeout in seconds. Defaults to None.</p> <code>None</code> <p>Raises:</p> Type Description <code>UnknownFIOResponse</code> <p>FIO returned an unknown response</p> <p>Returns:</p> Name Type Description <code>BurnList</code> <code>BurnList</code> <p>List of Burn data</p> Source code in <code>fio_wrapper/endpoints/endpoints_v1/group.py</code> <pre><code>@apikey_required\ndef burn(self, groupid: int, timeout: Optional[float] = None) -&gt; BurnList:\n    \"\"\"Gets the groups Burn information from FIO\n\n    Note:\n        FIO API Key Required\n\n    Args:\n        groupid (int): GroupModelId\n        timeout (float, optional): Request timeout in seconds. Defaults to None.\n\n    Raises:\n        UnknownFIOResponse: FIO returned an unknown response\n\n    Returns:\n        BurnList: List of Burn data\n    \"\"\"\n    (status, data) = self.adapter.get(\n        endpoint=self.urls.group_burn_url(groupid=groupid), timeout=timeout\n    )\n\n    if status == 200:\n        return BurnList.model_validate(data)\n</code></pre>"},{"location":"endpoints/localmarket/","title":"LocalMarket","text":"<p>Access local market information from FIO.</p>"},{"location":"endpoints/localmarket/#endpoints.endpoints_v1.localmarket.LocalMarket","title":"LocalMarket","text":"<p>             Bases: <code>AbstractLocalMarket</code>, <code>AbstractEndpoint</code></p>"},{"location":"endpoints/localmarket/#endpoints.endpoints_v1.localmarket.LocalMarket.planet","title":"planet","text":"<pre><code>planet(planet, timeout=None)\n</code></pre> <p>Gets local market ads for planet</p> <p>Parameters:</p> Name Type Description Default <code>planet</code> <code>str</code> <p>PlanetId, PlanetNaturalId, PlanetName</p> required <code>timeout</code> <code>float</code> <p>Request timeout in seconds. Defaults to None.</p> <code>None</code> <p>Raises:</p> Type Description <code>PlanetNotFound</code> <p>Planet not found</p> <p>Returns:</p> Name Type Description <code>LocalMarketAds</code> <code>LocalMarketAds</code> <p>List of ads</p> Source code in <code>fio_wrapper/endpoints/endpoints_v1/localmarket.py</code> <pre><code>def planet(self, planet: str, timeout: Optional[float] = None) -&gt; LocalMarketAds:\n    \"\"\"Gets local market ads for planet\n\n    Args:\n        planet (str): PlanetId, PlanetNaturalId, PlanetName\n        timeout (float, optional): Request timeout in seconds. Defaults to None.\n\n    Raises:\n        PlanetNotFound: Planet not found\n\n    Returns:\n        LocalMarketAds: List of ads\n    \"\"\"\n    (status, data) = self.adapter.get(\n        endpoint=self.urls.localmarket_planet_url(planet),\n        err_codes=[204],\n        timeout=timeout,\n    )\n\n    if status == 200:\n        return LocalMarketAds.model_validate(data)\n    elif status == 204:\n        raise PlanetNotFound(\"Planet not found\")\n</code></pre>"},{"location":"endpoints/localmarket/#endpoints.endpoints_v1.localmarket.LocalMarket.planet_buy","title":"planet_buy","text":"<pre><code>planet_buy(planet, timeout=None)\n</code></pre> <p>Gets all BUY ads from the planets local market</p> <p>Parameters:</p> Name Type Description Default <code>planet</code> <code>str</code> <p>PlanetId, PlanetNaturalId, PlanetName</p> required <code>timeout</code> <code>float</code> <p>Request timeout in seconds. Defaults to None.</p> <code>None</code> <p>Raises:</p> Type Description <code>PlanetOrAdsNotFound</code> <p>Planet not found or no ads</p> <p>Returns:</p> Name Type Description <code>LocalMarketAdList</code> <code>LocalMarketAdList</code> <p>List of planet local market BUY ads</p> Source code in <code>fio_wrapper/endpoints/endpoints_v1/localmarket.py</code> <pre><code>def planet_buy(\n    self, planet: str, timeout: Optional[float] = None\n) -&gt; LocalMarketAdList:\n    \"\"\"Gets all BUY ads from the planets local market\n\n    Args:\n        planet (str): PlanetId, PlanetNaturalId, PlanetName\n        timeout (float, optional): Request timeout in seconds. Defaults to None.\n\n    Raises:\n        PlanetOrAdsNotFound: Planet not found or no ads\n\n    Returns:\n        LocalMarketAdList: List of planet local market BUY ads\n    \"\"\"\n    (status, data) = self._planet_type(planet=planet, adtype=\"BUY\", timeout=timeout)\n\n    if status == 200:\n        return LocalMarketAdList.model_validate(data)\n    elif status == 204:\n        raise PlanetOrAdsNotFound(\"Planet not found or no ads on planet\")\n</code></pre>"},{"location":"endpoints/localmarket/#endpoints.endpoints_v1.localmarket.LocalMarket.planet_sell","title":"planet_sell","text":"<pre><code>planet_sell(planet, timeout=None)\n</code></pre> <p>Gets all SELL ads from planets local market</p> <p>Parameters:</p> Name Type Description Default <code>planet</code> <code>str</code> <p>PlanetId, PlanetNaturalId, PlanetName</p> required <code>timeout</code> <code>float</code> <p>Request timeout in seconds. Defaults to None.</p> <code>None</code> <p>Raises:</p> Type Description <code>PlanetOrAdsNotFound</code> <p>Planet not found or no ads</p> <p>Returns:</p> Name Type Description <code>LocalMarketAdList</code> <code>LocalMarketAdList</code> <p>List of planet local market SELL ads</p> Source code in <code>fio_wrapper/endpoints/endpoints_v1/localmarket.py</code> <pre><code>def planet_sell(\n    self, planet: str, timeout: Optional[float] = None\n) -&gt; LocalMarketAdList:\n    \"\"\"Gets all SELL ads from planets local market\n\n    Args:\n        planet (str): PlanetId, PlanetNaturalId, PlanetName\n        timeout (float, optional): Request timeout in seconds. Defaults to None.\n\n    Raises:\n        PlanetOrAdsNotFound: Planet not found or no ads\n\n    Returns:\n        LocalMarketAdList: List of planet local market SELL ads\n    \"\"\"\n    (status, data) = self._planet_type(\n        planet=planet, adtype=\"SELL\", timeout=timeout\n    )\n\n    if status == 200:\n        return LocalMarketAdList.model_validate(data)\n    elif status == 204:\n        raise PlanetOrAdsNotFound(\"Planet not found or no ads on planet\")\n</code></pre>"},{"location":"endpoints/localmarket/#endpoints.endpoints_v1.localmarket.LocalMarket.planet_shipping","title":"planet_shipping","text":"<pre><code>planet_shipping(planet, timeout=None)\n</code></pre> <p>Gets a list of planets shipping ads</p> <p>Parameters:</p> Name Type Description Default <code>planet</code> <code>str</code> <p>PlanetId, PlanetNaturalId, PlanetName</p> required <code>timeout</code> <code>float</code> <p>Request timeout in seconds. Defaults to None.</p> <code>None</code> <p>Raises:</p> Type Description <code>PlanetOrAdsNotFound</code> <p>Planet not found or no ads</p> <p>Returns:</p> Name Type Description <code>LocalMarketShippingAdList</code> <code>LocalMarketShippingAdList</code> <p>List of planet local market SHIPPING ads</p> Source code in <code>fio_wrapper/endpoints/endpoints_v1/localmarket.py</code> <pre><code>def planet_shipping(\n    self, planet: str, timeout: Optional[float] = None\n) -&gt; LocalMarketShippingAdList:\n    \"\"\"Gets a list of planets shipping ads\n\n    Args:\n        planet (str): PlanetId, PlanetNaturalId, PlanetName\n        timeout (float, optional): Request timeout in seconds. Defaults to None.\n\n    Raises:\n        PlanetOrAdsNotFound: Planet not found or no ads\n\n    Returns:\n        LocalMarketShippingAdList: List of planet local market SHIPPING ads\n    \"\"\"\n    (status, data) = self._planet_type(\n        planet=planet, adtype=\"SHIP\", timeout=timeout\n    )\n\n    if status == 200:\n        return LocalMarketShippingAdList.model_validate(data)\n    elif status == 204:\n        raise PlanetOrAdsNotFound(\"Planet not found or no ads on planet\")\n</code></pre>"},{"location":"endpoints/localmarket/#endpoints.endpoints_v1.localmarket.LocalMarket.shipping_from","title":"shipping_from","text":"<pre><code>shipping_from(planet, timeout=None)\n</code></pre> <p>Gets a list of SHIPPING ads starting from planet</p> <p>Parameters:</p> Name Type Description Default <code>planet</code> <code>str</code> <p>PlanetId, PlanetNaturalId, PlanetName</p> required <code>timeout</code> <code>float</code> <p>Request timeout in seconds. Defaults to None.</p> <code>None</code> <p>Raises:</p> Type Description <code>PlanetOrAdsNotFound</code> <p>Planet not found or no ads</p> <p>Returns:</p> Name Type Description <code>LocalMarketShippingAdList</code> <code>LocalMarketShippingAdList</code> <p>List of shipping ads from planet</p> Source code in <code>fio_wrapper/endpoints/endpoints_v1/localmarket.py</code> <pre><code>def shipping_from(\n    self, planet: str, timeout: Optional[float] = None\n) -&gt; LocalMarketShippingAdList:\n    \"\"\"Gets a list of SHIPPING ads starting from planet\n\n    Args:\n        planet (str): PlanetId, PlanetNaturalId, PlanetName\n        timeout (float, optional): Request timeout in seconds. Defaults to None.\n\n    Raises:\n        PlanetOrAdsNotFound: Planet not found or no ads\n\n    Returns:\n        LocalMarketShippingAdList: List of shipping ads from planet\n    \"\"\"\n    (status, data) = self.adapter.get(\n        endpoint=self.urls.localmarket_shipping_source_url(planet=planet),\n        err_codes=[204],\n        timeout=timeout,\n    )\n\n    if status == 200:\n        return LocalMarketShippingAdList.model_validate(data)\n    elif status == 204:\n        raise PlanetOrAdsNotFound(\"Planet not found or no ads on planet\")\n</code></pre>"},{"location":"endpoints/localmarket/#endpoints.endpoints_v1.localmarket.LocalMarket.shipping_to","title":"shipping_to","text":"<pre><code>shipping_to(planet, timeout=None)\n</code></pre> <p>Gets a list of SHIPPING ads ending at planet</p> <p>Parameters:</p> Name Type Description Default <code>planet</code> <code>str</code> <p>PlanetId, PlanetNaturalId, PlanetName</p> required <code>timeout</code> <code>float</code> <p>Request timeout in seconds. Defaults to None.</p> <code>None</code> <p>Raises:</p> Type Description <code>PlanetOrAdsNotFound</code> <p>Planet not found or no ads</p> <p>Returns:</p> Name Type Description <code>LocalMarketShippingAdList</code> <code>LocalMarketShippingAdList</code> <p>List of shipping ads to planet</p> Source code in <code>fio_wrapper/endpoints/endpoints_v1/localmarket.py</code> <pre><code>def shipping_to(\n    self, planet: str, timeout: Optional[float] = None\n) -&gt; LocalMarketShippingAdList:\n    \"\"\"Gets a list of SHIPPING ads ending at planet\n\n    Args:\n        planet (str): PlanetId, PlanetNaturalId, PlanetName\n        timeout (float, optional): Request timeout in seconds. Defaults to None.\n\n    Raises:\n        PlanetOrAdsNotFound: Planet not found or no ads\n\n    Returns:\n        LocalMarketShippingAdList: List of shipping ads to planet\n    \"\"\"\n    (status, data) = self.adapter.get(\n        endpoint=self.urls.localmarket_shipping_destination_url(planet=planet),\n        err_codes=[204],\n        timeout=timeout,\n    )\n\n    if status == 200:\n        return LocalMarketShippingAdList.model_validate(data)\n    elif status == 204:\n        raise PlanetOrAdsNotFound(\"Planet not found or no ads on planet\")\n</code></pre>"},{"location":"endpoints/localmarket/#endpoints.endpoints_v1.localmarket.LocalMarket.company","title":"company","text":"<pre><code>company(companycode, timeout=None)\n</code></pre> <p>Gets a list of all ads of the specified company</p> <p>Parameters:</p> Name Type Description Default <code>companycode</code> <code>str</code> <p>Company Code (e.g., \"SKYP\")</p> required <code>timeout</code> <code>float</code> <p>Request timeout in seconds. Defaults to None.</p> <code>None</code> <p>Raises:</p> Type Description <code>CompanyOrAdsNotFound</code> <p>Company not found or company has no ads</p> <p>Returns:</p> Name Type Description <code>LocalMarketAds</code> <code>LocalMarketAds</code> <p>List of local market ads of company</p> Source code in <code>fio_wrapper/endpoints/endpoints_v1/localmarket.py</code> <pre><code>def company(\n    self, companycode: str, timeout: Optional[float] = None\n) -&gt; LocalMarketAds:\n    \"\"\"Gets a list of all ads of the specified company\n\n    Args:\n        companycode (str): Company Code (e.g., \"SKYP\")\n        timeout (float, optional): Request timeout in seconds. Defaults to None.\n\n    Raises:\n        CompanyOrAdsNotFound: Company not found or company has no ads\n\n    Returns:\n        LocalMarketAds: List of local market ads of company\n    \"\"\"\n    (status, data) = self.adapter.get(\n        endpoint=self.urls.localmarket_company_url(companycode=companycode),\n        err_codes=[204],\n        timeout=timeout,\n    )\n\n    if status == 200:\n        return LocalMarketAds.model_validate(data)\n    elif status == 204:\n        raise CompanyOrAdsNotFound(\"Company not found or no ads from company\")\n</code></pre>"},{"location":"endpoints/material/","title":"Material","text":"<p>Access material information from FIO.</p>"},{"location":"endpoints/material/#endpoints.endpoints_v1.material.Material","title":"Material","text":"<p>             Bases: <code>AbstractMaterial</code>, <code>AbstractEndpoint</code></p>"},{"location":"endpoints/material/#endpoints.endpoints_v1.material.Material.get","title":"get","text":"<pre><code>get(material_ticker, timeout=None)\n</code></pre> <p>Gets a single material from FIO</p> <p>Parameters:</p> Name Type Description Default <code>material_ticker</code> <code>str</code> <p>Material Ticker (e.g., \"DW\")</p> required <code>timeout</code> <code>float</code> <p>Request timeout in seconds. Defaults to None.</p> <code>None</code> <p>Raises:</p> Type Description <code>MaterialTickerNotFound</code> <p>Material Ticker was not found</p> <p>Returns:</p> Name Type Description <code>MaterialModel</code> <code>MaterialTicker</code> <p>Material</p> Source code in <code>fio_wrapper/endpoints/endpoints_v1/material.py</code> <pre><code>def get(\n    self, material_ticker: str, timeout: Optional[float] = None\n) -&gt; MaterialTicker:\n    \"\"\"Gets a single material from FIO\n\n    Args:\n        material_ticker (str): Material Ticker (e.g., \"DW\")\n        timeout (float, optional): Request timeout in seconds. Defaults to None.\n\n    Raises:\n        MaterialTickerNotFound: Material Ticker was not found\n\n    Returns:\n        MaterialModel: Material\n    \"\"\"\n\n    self._validate_ticker(material_ticker=material_ticker)\n\n    (status, data) = self.adapter.get(\n        endpoint=self.urls.material_get_url(material_ticker=material_ticker),\n        err_codes=[204],\n        timeout=timeout,\n    )\n\n    if status == 200:\n        return MaterialTicker.model_validate(data)\n    elif status == 204:\n        raise MaterialTickerNotFound(\"Materialticker not found\")\n</code></pre>"},{"location":"endpoints/material/#endpoints.endpoints_v1.material.Material.all","title":"all","text":"<pre><code>all(timeout=None)\n</code></pre> <p>Gets all materials from FIO</p> <p>Parameters:</p> Name Type Description Default <code>timeout</code> <code>float</code> <p>Request timeout in seconds. Defaults to None.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>MaterialModelList</code> <code>MaterialTickerList</code> <p>List of Materials as List[MaterialModel]</p> Source code in <code>fio_wrapper/endpoints/endpoints_v1/material.py</code> <pre><code>def all(self, timeout: Optional[float] = None) -&gt; MaterialTickerList:\n    \"\"\"Gets all materials from FIO\n\n    Args:\n        timeout (float, optional): Request timeout in seconds. Defaults to None.\n\n    Returns:\n        MaterialModelList: List of Materials as List[MaterialModel]\n    \"\"\"\n    (_, data) = self.adapter.get(\n        endpoint=self.urls.material_allmaterials_url(), timeout=timeout\n    )\n    return MaterialTickerList.model_validate(data)\n</code></pre>"},{"location":"endpoints/material/#endpoints.endpoints_v1.material.Material.category","title":"category","text":"<pre><code>category(category_name, timeout=None)\n</code></pre> <p>Gets all materials of specified category</p> <p>Parameters:</p> Name Type Description Default <code>category_name</code> <code>str</code> <p>Category name (e.g., \"agricultural products\")</p> required <code>timeout</code> <code>float</code> <p>Request timeout in seconds. Defaults to None.</p> <code>None</code> <p>Raises:</p> Type Description <code>MaterialCategoryNotFound</code> <p>Category was not found</p> <p>Returns:</p> Name Type Description <code>MaterialModelList</code> <code>MaterialTickerList</code> <p>List of Materials as List[MaterialModel]</p> Source code in <code>fio_wrapper/endpoints/endpoints_v1/material.py</code> <pre><code>def category(\n    self, category_name: str, timeout: Optional[float] = None\n) -&gt; MaterialTickerList:\n    \"\"\"Gets all materials of specified category\n\n    Args:\n        category_name (str): Category name (e.g., \"agricultural products\")\n        timeout (float, optional): Request timeout in seconds. Defaults to None.\n\n    Raises:\n        MaterialCategoryNotFound: Category was not found\n\n    Returns:\n        MaterialModelList: List of Materials as List[MaterialModel]\n    \"\"\"\n    (status, data) = self.adapter.get(\n        endpoint=self.urls.material_get_category(category_name=category_name),\n        err_codes=[204],\n        timeout=timeout,\n    )\n\n    if status == 200 and len(data) &gt; 0:\n        return MaterialTickerList.model_validate(data)\n    elif status == 204 or len(data) == 0:\n        raise MaterialCategoryNotFound(\"Material category not found\")\n</code></pre>"},{"location":"endpoints/planet/","title":"Planet","text":"<p>Access planet information from FIO.</p>"},{"location":"endpoints/planet/#endpoints.endpoints_v1.planet.Planet","title":"Planet","text":"<p>             Bases: <code>AbstractPlanet</code>, <code>AbstractEndpoint</code></p> <p>Planet endpoint wrapper</p>"},{"location":"endpoints/planet/#endpoints.endpoints_v1.planet.Planet.get","title":"get","text":"<pre><code>get(planet, timeout=None)\n</code></pre> <p>Gets full planet data from FIO</p> <p>Parameters:</p> Name Type Description Default <code>planet</code> <code>str</code> <p>PlanetId, PlanetNaturalId or PlanetName</p> required <code>timeout</code> <code>float</code> <p>Request timeout in seconds. Defaults to None.</p> <code>None</code> <p>Raises:</p> Type Description <code>PlanetNotFound</code> <p>Planet not found</p> <p>Returns:</p> Name Type Description <code>PlanetFull</code> <code>PlanetFull</code> <p>Full planet information</p> Source code in <code>fio_wrapper/endpoints/endpoints_v1/planet.py</code> <pre><code>def get(self, planet: str, timeout: Optional[float] = None) -&gt; PlanetFull:\n    \"\"\"Gets full planet data from FIO\n\n    Args:\n        planet (str): PlanetId, PlanetNaturalId or PlanetName\n        timeout (float, optional): Request timeout in seconds. Defaults to None.\n\n    Raises:\n        PlanetNotFound: Planet not found\n\n    Returns:\n        PlanetFull: Full planet information\n    \"\"\"\n    (status, data) = self.adapter.get(\n        endpoint=self.urls.planet_get_url(planet=planet),\n        err_codes=[204],\n        timeout=timeout,\n    )\n\n    if status == 200:\n        return PlanetFull.model_validate(data)\n    elif status == 204:\n        raise PlanetNotFound(\"Planet not found\")\n</code></pre>"},{"location":"endpoints/planet/#endpoints.endpoints_v1.planet.Planet.all","title":"all","text":"<pre><code>all(timeout=None)\n</code></pre> <p>Gets a list of all Planets with minimal information from FIO</p> <p>Parameters:</p> Name Type Description Default <code>timeout</code> <code>float</code> <p>Request timeout in seconds. Defaults to None.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>PlanetList</code> <code>PlanetList</code> <p>List of Planets as List[Planet]</p> Source code in <code>fio_wrapper/endpoints/endpoints_v1/planet.py</code> <pre><code>def all(self, timeout: Optional[float] = None) -&gt; PlanetList:\n    \"\"\"Gets a list of all Planets with minimal information from FIO\n\n    Args:\n        timeout (float, optional): Request timeout in seconds. Defaults to None.\n\n    Returns:\n        PlanetList: List of Planets as List[Planet]\n    \"\"\"\n    (_, data) = self.adapter.get(\n        endpoint=self.urls.planet_all_url(), timeout=timeout\n    )\n\n    return PlanetList.model_validate(data)\n</code></pre>"},{"location":"endpoints/planet/#endpoints.endpoints_v1.planet.Planet.full","title":"full","text":"<pre><code>full(timeout=None)\n</code></pre> <p>Gets a list of all planets from FIO with full planet information</p> <p>Parameters:</p> Name Type Description Default <code>timeout</code> <code>float</code> <p>Request timeout in seconds. Defaults to None.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>PlanetFullList</code> <code>PlanetFullList</code> <p>List of Planets with full information as List[PlanetFull]</p> Source code in <code>fio_wrapper/endpoints/endpoints_v1/planet.py</code> <pre><code>def full(self, timeout: Optional[float] = None) -&gt; PlanetFullList:\n    \"\"\"Gets a list of all planets from FIO with full planet information\n\n    Args:\n        timeout (float, optional): Request timeout in seconds. Defaults to None.\n\n    Returns:\n        PlanetFullList: List of Planets with full information as List[PlanetFull]\n    \"\"\"\n    (_, data) = self.adapter.get(\n        endpoint=self.urls.planet_full_url(), timeout=timeout\n    )\n\n    return PlanetFullList.model_validate(data)\n</code></pre>"},{"location":"endpoints/planet/#endpoints.endpoints_v1.planet.Planet.sites","title":"sites","text":"<pre><code>sites(planet, timeout=None)\n</code></pre> <p>Gets a list of sites on the planet from FIO</p> <p>Parameters:</p> Name Type Description Default <code>planet</code> <code>str</code> <p>PlanetId, PlanetNaturalId or PlanetName</p> required <code>timeout</code> <code>float</code> <p>Request timeout in seconds. Defaults to None.</p> <code>None</code> <p>Raises:</p> Type Description <code>PlanetNotFound</code> <p>Planet not found</p> <p>Returns:</p> Name Type Description <code>PlanetSiteList</code> <code>PlanetSiteList</code> <p>List of Planet sites as List[PlanetSite]</p> Source code in <code>fio_wrapper/endpoints/endpoints_v1/planet.py</code> <pre><code>def sites(self, planet: str, timeout: Optional[float] = None) -&gt; PlanetSiteList:\n    \"\"\"Gets a list of sites on the planet from FIO\n\n    Args:\n        planet (str): PlanetId, PlanetNaturalId or PlanetName\n        timeout (float, optional): Request timeout in seconds. Defaults to None.\n\n    Raises:\n        PlanetNotFound: Planet not found\n\n    Returns:\n        PlanetSiteList: List of Planet sites as List[PlanetSite]\n    \"\"\"\n    (status, data) = self.adapter.get(\n        endpoint=self.urls.planet_sites_url(planet=planet),\n        err_codes=[204],\n        timeout=timeout,\n    )\n\n    if status == 200:\n        return PlanetSiteList.model_validate(data)\n    elif status == 204:\n        raise PlanetNotFound(\"Planet not found\")\n</code></pre>"},{"location":"endpoints/planet/#endpoints.endpoints_v1.planet.Planet.search","title":"search","text":"<pre><code>search(\n    materials=None,\n    include_rocky=False,\n    include_gaseous=False,\n    include_low_gravity=False,\n    include_high_gravity=False,\n    include_low_pressure=False,\n    include_high_pressure=False,\n    include_low_temperature=False,\n    include_high_temperature=False,\n    must_be_fertile=False,\n    must_have_localmarket=False,\n    must_have_cogc=False,\n    must_have_war=False,\n    must_have_adm=False,\n    must_have_shy=False,\n    distance_checks=None,\n    timeout=None,\n)\n</code></pre> <p>Performs a search request towards FIO to find a planet matching the search parameters</p> <p>Parameters:</p> Name Type Description Default <code>materials</code> <code>List[str]</code> <p>List of materials to search for, e.g. [\"FEO\", \"LST\"].</p> <code>None</code> <code>include_rocky</code> <code>bool</code> <p>Planet can be Rocky.</p> <code>False</code> <code>include_gaseous</code> <code>bool</code> <p>Planet can be Gaseous.</p> <code>False</code> <code>include_low_gravity</code> <code>bool</code> <p>Planet can be low gravity.</p> <code>False</code> <code>include_high_gravity</code> <code>bool</code> <p>Planet can be high gravity.</p> <code>False</code> <code>include_low_pressure</code> <code>bool</code> <p>Planet can be low pressure.</p> <code>False</code> <code>include_high_pressure</code> <code>bool</code> <p>Planet can be high pressure.</p> <code>False</code> <code>include_low_temperature</code> <code>bool</code> <p>Planet can be low temperature.</p> <code>False</code> <code>include_high_temperature</code> <code>bool</code> <p>Planet can be high temperature.</p> <code>False</code> <code>must_be_fertile</code> <code>bool</code> <p>Planet must be Fertile.</p> <code>False</code> <code>must_have_localmarket</code> <code>bool</code> <p>Planet must have a Local Market.</p> <code>False</code> <code>must_have_cogc</code> <code>bool</code> <p>Planet must have a Chamber of Glboal Commerce.</p> <code>False</code> <code>must_have_war</code> <code>bool</code> <p>Planet must have warehouses.</p> <code>False</code> <code>must_have_adm</code> <code>bool</code> <p>Planet must have a Planetary Administration Center.</p> <code>False</code> <code>must_have_shy</code> <code>bool</code> <p>Planet must have a Shipyard.</p> <code>False</code> <code>distance_checks</code> <code>List[str]</code> <p>List of other planets to check distance to, e.g. [\"ANT\", \"MOR\"].</p> <code>None</code> <code>timeout</code> <code>float</code> <p>Request timeout in seconds. Defaults to None.</p> <code>None</code> <p>Raises:</p> Type Description <code>PlanetSearchMaterialsInvalid</code> <p>description</p> <code>PlanetSearchDistanceChecksInvalid</code> <p>description</p> <code>PlanetSearchInvalidRequest</code> <p>description</p> <p>Returns:</p> Name Type Description <code>PlanetFullList</code> <code>PlanetFullList</code> <p>List of Planets with full information as List[PlanetFull]</p> Source code in <code>fio_wrapper/endpoints/endpoints_v1/planet.py</code> <pre><code>def search(\n    self,\n    materials: List[str] = None,\n    include_rocky: bool = False,\n    include_gaseous: bool = False,\n    include_low_gravity: bool = False,\n    include_high_gravity: bool = False,\n    include_low_pressure: bool = False,\n    include_high_pressure: bool = False,\n    include_low_temperature: bool = False,\n    include_high_temperature: bool = False,\n    must_be_fertile: bool = False,\n    must_have_localmarket: bool = False,\n    must_have_cogc: bool = False,\n    must_have_war: bool = False,\n    must_have_adm: bool = False,\n    must_have_shy: bool = False,\n    distance_checks: List[str] = None,\n    timeout: Optional[float] = None,\n) -&gt; PlanetFullList:\n    \"\"\"Performs a search request towards FIO to find a planet matching the search parameters\n\n    Args:\n        materials (List[str], optional): List of materials to search for, e.g. [\"FEO\", \"LST\"].\n        include_rocky (bool, optional): Planet can be Rocky.\n        include_gaseous (bool, optional): Planet can be Gaseous.\n        include_low_gravity (bool, optional): Planet can be low gravity.\n        include_high_gravity (bool, optional): Planet can be high gravity.\n        include_low_pressure (bool, optional): Planet can be low pressure.\n        include_high_pressure (bool, optional): Planet can be high pressure.\n        include_low_temperature (bool, optional): Planet can be low temperature.\n        include_high_temperature (bool, optional): Planet can be high temperature.\n        must_be_fertile (bool, optional): Planet must be Fertile.\n        must_have_localmarket (bool, optional): Planet must have a Local Market.\n        must_have_cogc (bool, optional): Planet must have a Chamber of Glboal Commerce.\n        must_have_war (bool, optional): Planet must have warehouses.\n        must_have_adm (bool, optional): Planet must have a Planetary Administration Center.\n        must_have_shy (bool, optional): Planet must have a Shipyard.\n        distance_checks (List[str], optional): List of other planets to check distance to, e.g. [\"ANT\", \"MOR\"].\n        timeout (float, optional): Request timeout in seconds. Defaults to None.\n\n    Raises:\n        PlanetSearchMaterialsInvalid: _description_\n        PlanetSearchDistanceChecksInvalid: _description_\n        PlanetSearchInvalidRequest: _description_\n\n    Returns:\n        PlanetFullList: List of Planets with full information as List[PlanetFull]\n    \"\"\"\n\n    # accept None as materials, don't include materials in search\n    if materials is not None:\n        if not validate_planet_search_materials(materials=materials):\n            raise PlanetSearchMaterialsInvalid(\n                \"Invalid materials provided. Can check for up to 4 materials.\"\n            )\n\n    if distance_checks is not None:\n        if not validate_planet_search_distance_checks(\n            distance_checks=distance_checks\n        ):\n            raise PlanetSearchDistanceChecksInvalid(\n                \"Invalid distance checks. Can check for up to 10 distances.\"\n            )\n\n    (status, data) = self.adapter.post(\n        endpoint=self.urls.planet_search_url(),\n        data={\n            \"Materials\": [] if materials is None else materials,\n            \"IncludeRocky\": include_rocky,\n            \"IncludeGaseous\": include_gaseous,\n            \"IncludeLowGravity\": include_low_gravity,\n            \"IncludeHighGravity\": include_high_gravity,\n            \"IncludeLowPressure\": include_low_pressure,\n            \"IncludeHighPressure\": include_high_pressure,\n            \"IncludeLowTemperature\": include_low_temperature,\n            \"IncludeHighTemperature\": include_high_temperature,\n            \"MustBeFertile\": must_be_fertile,\n            \"MustHaveLocalMarket\": must_have_localmarket,\n            \"MustHaveChamberOfCommerce\": must_have_cogc,\n            \"MustHaveWarehouse\": must_have_war,\n            \"MustHaveAdministrationCenter\": must_have_adm,\n            \"MustHaveShipyard\": must_have_shy,\n            \"DistanceChecks\": [] if distance_checks is None else distance_checks,\n        },\n        err_codes=[400],\n        timeout=timeout,\n    )\n\n    if status == 200:\n        return PlanetFullList.model_validate(data)\n    elif status == 400:\n        raise PlanetSearchInvalidRequest(\"Failed to parse payload\")\n</code></pre>"},{"location":"endpoints/recipe/","title":"Recipe","text":"<p>Access recipe information from FIO.</p>"},{"location":"endpoints/recipe/#endpoints.endpoints_v1.recipe.Recipe","title":"Recipe","text":"<p>             Bases: <code>AbstractRecipe</code>, <code>AbstractEndpoint</code></p>"},{"location":"endpoints/recipe/#endpoints.endpoints_v1.recipe.Recipe.get","title":"get","text":"<pre><code>get(material_ticker, timeout=None)\n</code></pre> <p>Gets all recipes for given material from FIO</p> <p>Parameters:</p> Name Type Description Default <code>material_ticker</code> <code>str</code> <p>Material Ticker (e.g. \"FE\")</p> required <code>timeout</code> <code>float</code> <p>Request timeout in seconds. Defaults to None.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>MaterialRecipeList</code> <code>MaterialRecipeList</code> <p>List of Recipes as List[MaterialRecipeList]</p> Source code in <code>fio_wrapper/endpoints/endpoints_v1/recipe.py</code> <pre><code>def get(\n    self, material_ticker: str, timeout: Optional[float] = None\n) -&gt; MaterialRecipeList:\n    \"\"\"Gets all recipes for given material from FIO\n\n    Args:\n        material_ticker (str): Material Ticker (e.g. \"FE\")\n        timeout (float, optional): Request timeout in seconds. Defaults to None.\n\n    Returns:\n        MaterialRecipeList: List of Recipes as List[MaterialRecipeList]\n    \"\"\"\n    (_, data) = self.adapter.get(\n        endpoint=self.urls.recipe_get_url(material_ticker=material_ticker),\n        timeout=timeout,\n    )\n\n    return MaterialRecipeList.model_validate(data)\n</code></pre>"},{"location":"endpoints/recipe/#endpoints.endpoints_v1.recipe.Recipe.all","title":"all","text":"<pre><code>all(timeout=None)\n</code></pre> <p>Gets all recipes from FIO</p> <p>Parameters:</p> Name Type Description Default <code>timeout</code> <code>float</code> <p>Request timeout in seconds. Defaults to None.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>RecipeList</code> <code>RecipeList</code> <p>List of Recipes as List[RecipeList]</p> Source code in <code>fio_wrapper/endpoints/endpoints_v1/recipe.py</code> <pre><code>def all(self, timeout: Optional[float] = None) -&gt; RecipeList:\n    \"\"\"Gets all recipes from FIO\n\n    Args:\n        timeout (float, optional): Request timeout in seconds. Defaults to None.\n\n    Returns:\n        RecipeList: List of Recipes as List[RecipeList]\n    \"\"\"\n    (_, data) = self.adapter.get(\n        endpoint=self.urls.recipe_get_all_url(), timeout=timeout\n    )\n\n    return RecipeList.model_validate(data)\n</code></pre>"},{"location":"endpoints/sites/","title":"Sites","text":"<p>Exposes FIO Sites data for users, either as whole site data or warehouses.  All Sites data requires a FIO API KEY. You will need to have access to the data the user has in FIO in order to access it.</p>"},{"location":"endpoints/sites/#example","title":"Example","text":"<pre><code>from fio_wrapper import FIO\n\nfio = FIO(api_key=\"your_api_key\")\n\n# Get users warehouses\nuser_warehouses = fio.Sites.warehouses(username=\"PrUn username\")\n\n# Get users complete sites data incl. buildings, \n# their condition and repair / reclaimable materials\nuser_sites = fio.Sites.get(username=\"PrUn username\")\n\n# Get users sites data for specific planet incl. buildings, \n# their condition and repair / reclaimable materials\nuser_sites = fio.Sites.get_planet(username=\"PrUn username\", planet=\"Montem\")\n</code></pre>"},{"location":"endpoints/sites/#endpoints","title":"Endpoints","text":"<p>Access site information from FIO.</p>"},{"location":"endpoints/sites/#endpoints.endpoints_v1.sites.Sites","title":"Sites","text":"<p>             Bases: <code>AbstractSites</code>, <code>AbstractEndpoint</code></p>"},{"location":"endpoints/sites/#endpoints.endpoints_v1.sites.Sites.get","title":"get","text":"<pre><code>get(username, timeout=None)\n</code></pre> <p>Gets site data for given username from FIO</p> Note <p>FIO API Key Required</p> <p>Parameters:</p> Name Type Description Default <code>username</code> <code>str</code> <p>Prosperous Universe username</p> required <code>timeout</code> <code>float</code> <p>Request timeout in seconds. Defaults to None.</p> <code>None</code> <p>Raises:</p> Type Description <code>NoSiteData</code> <p>Username has no site data</p> <code>NotAuthenticated</code> <p>Not authenticated or no appropiate permissions</p> <p>Returns:</p> Type Description <code>SiteList</code> <p>Site | SiteList: Site or List of Sites</p> Source code in <code>fio_wrapper/endpoints/endpoints_v1/sites.py</code> <pre><code>@apikey_required\ndef get(self, username: str, timeout: Optional[float] = None) -&gt; SiteList:\n    \"\"\"Gets site data for given username from FIO\n\n    Note:\n        FIO API Key Required\n\n    Args:\n        username (str): Prosperous Universe username\n        timeout (float, optional): Request timeout in seconds. Defaults to None.\n\n    Raises:\n        NoSiteData: Username has no site data\n        NotAuthenticated: Not authenticated or no appropiate permissions\n\n    Returns:\n        Site | SiteList: Site or List of Sites\n    \"\"\"\n\n    (status, data) = self.adapter.get(\n        endpoint=self.urls.sites_get_url(username=username),\n        err_codes=[204, 401],\n        timeout=timeout,\n    )\n\n    if status == 200:\n        return SiteList.model_validate(data)\n\n    elif status == 204:\n        raise NoSiteData(\"Username has no site data\")\n    elif status == 401:\n        raise NotAuthenticated(\"Not authenticated or no appropiate permissions\")\n</code></pre>"},{"location":"endpoints/sites/#endpoints.endpoints_v1.sites.Sites.get_planet","title":"get_planet","text":"<pre><code>get_planet(username, planet, timeout=None)\n</code></pre> <p>Gets site data for given username and planet from FIO</p> Note <p>FIO API Key Required</p> <p>Parameters:</p> Name Type Description Default <code>username</code> <code>str</code> <p>Prosperous Universe username</p> required <code>planet</code> <code>str</code> <p>PlanetId, PlanetNaturalId or PlanetName. Defaults to None.</p> required <code>timeout</code> <code>float</code> <p>Request timeout in seconds. Defaults to None.</p> <code>None</code> <p>Raises:</p> Type Description <code>NoSiteData</code> <p>Username has no site data</p> <code>NotAuthenticated</code> <p>Not authenticated or no appropiate permissions</p> <p>Returns:</p> Name Type Description <code>Site</code> <code>Site</code> <p>Site</p> Source code in <code>fio_wrapper/endpoints/endpoints_v1/sites.py</code> <pre><code>@apikey_required\ndef get_planet(\n    self, username: str, planet: str, timeout: Optional[float] = None\n) -&gt; Site:\n    \"\"\"Gets site data for given username and planet from FIO\n\n    Note:\n        FIO API Key Required\n\n    Args:\n        username (str): Prosperous Universe username\n        planet (str): PlanetId, PlanetNaturalId or PlanetName. Defaults to None.\n        timeout (float, optional): Request timeout in seconds. Defaults to None.\n\n    Raises:\n        NoSiteData: Username has no site data\n        NotAuthenticated: Not authenticated or no appropiate permissions\n\n    Returns:\n        Site: Site\n    \"\"\"\n\n    (status, data) = self.adapter.get(\n        endpoint=self.urls.sites_planets_get_planet_url(\n            username=username, planet=planet\n        ),\n        err_codes=[204, 401],\n        timeout=timeout,\n    )\n\n    if status == 200:\n        return Site.model_validate(data)\n    elif status == 204:\n        raise NoSiteData(\"Username has no site data\")\n    elif status == 401:\n        raise NotAuthenticated(\"Not authenticated or no appropiate permissions\")\n</code></pre>"},{"location":"endpoints/sites/#endpoints.endpoints_v1.sites.Sites.planets","title":"planets","text":"<pre><code>planets(username, timeout=None)\n</code></pre> <p>Gets a list of SiteIds from FIO for given username</p> Note <p>FIO API Key Required</p> <p>Parameters:</p> Name Type Description Default <code>username</code> <code>str</code> <p>Prosperous Universe username</p> required <code>timeout</code> <code>float</code> <p>Request timeout in seconds. Defaults to None.</p> <code>None</code> <p>Raises:</p> Type Description <code>NoSiteData</code> <p>Username has no site data</p> <code>NotAuthenticated</code> <p>Not authenticated or no appropiate permissions</p> <p>Returns:</p> Type Description <code>List[str]</code> <p>List[str]: List of SiteIds</p> Source code in <code>fio_wrapper/endpoints/endpoints_v1/sites.py</code> <pre><code>@apikey_required\ndef planets(self, username: str, timeout: Optional[float] = None) -&gt; List[str]:\n    \"\"\"Gets a list of SiteIds from FIO for given username\n\n    Note:\n        FIO API Key Required\n\n    Args:\n        username (str): Prosperous Universe username\n        timeout (float, optional): Request timeout in seconds. Defaults to None.\n\n    Raises:\n        NoSiteData: Username has no site data\n        NotAuthenticated: Not authenticated or no appropiate permissions\n\n    Returns:\n        List[str]: List of SiteIds\n    \"\"\"\n    (status, data) = self.adapter.get(\n        endpoint=self.urls.sites_planets_get_url(username=username),\n        err_codes=[204, 401],\n        timeout=timeout,\n    )\n\n    if status == 200:\n        return data\n    elif status == 204:\n        raise NoSiteData(\"Username has no site data\")\n    elif status == 401:\n        raise NotAuthenticated(\"Not authenticated or no appropiate permissions\")\n</code></pre>"},{"location":"endpoints/sites/#endpoints.endpoints_v1.sites.Sites.warehouses","title":"warehouses","text":"<pre><code>warehouses(username, timeout=None)\n</code></pre> <p>Get warehouse data for username from FIO</p> Note <p>FIO API Key Required</p> <p>Parameters:</p> Name Type Description Default <code>username</code> <code>str</code> <p>Prosperous Universe username</p> required <code>timeout</code> <code>float</code> <p>Request timeout in seconds. Defaults to None.</p> <code>None</code> <p>Raises:</p> Type Description <code>NoSiteData</code> <p>Username has no warehouse site data</p> <code>NotAuthenticated</code> <p>Not authenticated or no appropiate permissions</p> <p>Returns:</p> Name Type Description <code>WarehouseList</code> <code>WarehouseList</code> <p>List of Warehouses</p> Source code in <code>fio_wrapper/endpoints/endpoints_v1/sites.py</code> <pre><code>@apikey_required\ndef warehouses(\n    self, username: str, timeout: Optional[float] = None\n) -&gt; WarehouseList:\n    \"\"\"Get warehouse data for username from FIO\n\n    Note:\n        FIO API Key Required\n\n    Args:\n        username (str): Prosperous Universe username\n        timeout (float, optional): Request timeout in seconds. Defaults to None.\n\n    Raises:\n        NoSiteData: Username has no warehouse site data\n        NotAuthenticated: Not authenticated or no appropiate permissions\n\n    Returns:\n        WarehouseList: List of Warehouses\n    \"\"\"\n    (status, data) = self.adapter.get(\n        endpoint=self.urls.sites_warehouses_get(username=username),\n        err_codes=[204, 401],\n        timeout=timeout,\n    )\n\n    if status == 200:\n        return WarehouseList.model_validate(data)\n    elif status == 204:\n        raise NoSiteData(\"Username has no warehouse site data\")\n    elif status == 401:\n        raise NotAuthenticated(\"Not authenticated or no appropiate permissions\")\n</code></pre>"},{"location":"endpoints/storage/","title":"Storage","text":"<p>Exposes FIO Storage data for users. All storage data requires a FIO API KEY. You will need to have access to the data the user has in FIO in order to access it.</p> <p>Example: <pre><code>from fio_wrapper import FIO\n\nfio = FIO(api_key=\"your_api_key\")\n\n# Get users storage data\nuser_storage = fio.Sites.get(username=\"PrUn username\")\n</code></pre></p>"},{"location":"endpoints/storage/#endpoints.endpoints_v1.storage.Storage","title":"Storage","text":"<p>             Bases: <code>AbstractStorage</code>, <code>AbstractEndpoint</code></p>"},{"location":"endpoints/storage/#endpoints.endpoints_v1.storage.Storage.get","title":"get","text":"<pre><code>get(username, timeout=None)\n</code></pre> <p>Gets users storage data from FIO</p> Note <p>FIO API Key Required</p> <p>Parameters:</p> Name Type Description Default <code>username</code> <code>str</code> <p>Prosperous Universe username</p> required <code>timeout</code> <code>float</code> <p>Request timeout in seconds. Defaults to None.</p> <code>None</code> <p>Raises:</p> Type Description <code>NoStorageData</code> <p>Username has no storage data</p> <code>NotAuthenticated</code> <p>Not authenticated or no appropiate permissions</p> <p>Returns:</p> Name Type Description <code>StorageList</code> <code>StorageList</code> <p>List of storages</p> Source code in <code>fio_wrapper/endpoints/endpoints_v1/storage.py</code> <pre><code>@apikey_required\ndef get(self, username: str, timeout: Optional[float] = None) -&gt; StorageList:\n    \"\"\"Gets users storage data from FIO\n\n    Note:\n        FIO API Key Required\n\n    Args:\n        username (str): Prosperous Universe username\n        timeout (float, optional): Request timeout in seconds. Defaults to None.\n\n    Raises:\n        NoStorageData: Username has no storage data\n        NotAuthenticated: Not authenticated or no appropiate permissions\n\n    Returns:\n        StorageList: List of storages\n    \"\"\"\n    (status, data) = self.adapter.get(\n        endpoint=self.urls.storage_get_url(username=username),\n        err_codes=[204, 401],\n        timeout=timeout,\n    )\n\n    if status == 200:\n        return StorageList.model_validate(data)\n\n    elif status == 204:\n        raise NoStorageData(\"Username has no storage data\")\n    elif status == 401:\n        raise NotAuthenticated(\"Not authenticated or no appropiate permissions\")\n</code></pre>"},{"location":"endpoints/storage/#endpoints.endpoints_v1.storage.Storage.get_specific","title":"get_specific","text":"<pre><code>get_specific(username, specific, timeout=None)\n</code></pre> <p>Gets users specific storage data from FIO</p> Note <p>FIO API Key Required</p> <p>Parameters:</p> Name Type Description Default <code>username</code> <code>str</code> <p>Prosperous Universe username</p> required <code>specific</code> <code>str</code> <p>StorageId, PlanetId, PlanetNaturalId or PlanetName</p> required <code>timeout</code> <code>float</code> <p>Request timeout in seconds. Defaults to None.</p> <code>None</code> <p>Raises:</p> Type Description <code>NoStorageData</code> <p>Username has no storage data</p> <code>NotAuthenticated</code> <p>Not authenticated or no appropiate permissions</p> <p>Returns:</p> Name Type Description <code>StorageModel</code> <code>Storage</code> <p>Storage data</p> Source code in <code>fio_wrapper/endpoints/endpoints_v1/storage.py</code> <pre><code>@apikey_required\ndef get_specific(\n    self, username: str, specific: str, timeout: Optional[float] = None\n) -&gt; StorageModel:\n    \"\"\"Gets users specific storage data from FIO\n\n    Note:\n        FIO API Key Required\n\n    Args:\n        username (str): Prosperous Universe username\n        specific (str): StorageId, PlanetId, PlanetNaturalId or PlanetName\n        timeout (float, optional): Request timeout in seconds. Defaults to None.\n\n    Raises:\n        NoStorageData: Username has no storage data\n        NotAuthenticated: Not authenticated or no appropiate permissions\n\n    Returns:\n        StorageModel: Storage data\n    \"\"\"\n    (status, data) = self.adapter.get(\n        endpoint=self.urls.storage_get_specific_url(\n            username=username, specific=specific\n        ),\n        err_codes=[204, 401],\n        timeout=timeout,\n    )\n\n    if status == 200:\n        return StorageModel.model_validate(data)\n\n    elif status == 204:\n        raise NoStorageData(\"Username has no storage data\")\n    elif status == 401:\n        raise NotAuthenticated(\"Not authenticated or no appropiate permissions\")\n</code></pre>"},{"location":"endpoints/storage/#endpoints.endpoints_v1.storage.Storage.planets","title":"planets","text":"<pre><code>planets(username, timeout=None)\n</code></pre> <p>Returns a list of storages from FIO</p> Note <p>FIO API Key Required</p> <p>Parameters:</p> Name Type Description Default <code>username</code> <code>str</code> <p>Prosperous Universe username</p> required <code>timeout</code> <code>float</code> <p>Request timeout in seconds. Defaults to None.</p> <code>None</code> <p>Raises:</p> Type Description <code>NoStorageData</code> <p>Username has no storage data</p> <code>NotAuthenticated</code> <p>Not authenticated or no appropiate permissions</p> <p>Returns:</p> Type Description <code>List[str]</code> <p>List[str]: List of StorageIds</p> Source code in <code>fio_wrapper/endpoints/endpoints_v1/storage.py</code> <pre><code>@apikey_required\ndef planets(self, username: str, timeout: Optional[float] = None) -&gt; List[str]:\n    \"\"\"Returns a list of storages from FIO\n\n    Note:\n        FIO API Key Required\n\n    Args:\n        username (str): Prosperous Universe username\n        timeout (float, optional): Request timeout in seconds. Defaults to None.\n\n    Raises:\n        NoStorageData: Username has no storage data\n        NotAuthenticated: Not authenticated or no appropiate permissions\n\n    Returns:\n        List[str]: List of StorageIds\n    \"\"\"\n    (status, data) = self.adapter.get(\n        endpoint=self.urls.storage_planets_get_url(username=username),\n        err_codes=[204, 401],\n        timeout=timeout,\n    )\n\n    if status == 200:\n        return data\n    elif status == 204:\n        raise NoStorageData(\"Username has no storage data\")\n    elif status == 401:\n        raise NotAuthenticated(\"Not authenticated or no appropiate permissions\")\n</code></pre>"},{"location":"models/building/","title":"Building","text":""},{"location":"models/building/#models.building_models.BuildingRecipeIO","title":"BuildingRecipeIO","text":"<p>             Bases: <code>BaseModel</code></p>"},{"location":"models/building/#models.building_models.BuildingRecipeIO.CommodityName","title":"CommodityName  <code>instance-attribute</code>","text":"<pre><code>CommodityName\n</code></pre>"},{"location":"models/building/#models.building_models.BuildingRecipeIO.CommodityTicker","title":"CommodityTicker  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>CommodityTicker = Field(max_length=3)\n</code></pre>"},{"location":"models/building/#models.building_models.BuildingRecipeIO.Weight","title":"Weight  <code>instance-attribute</code>","text":"<pre><code>Weight\n</code></pre>"},{"location":"models/building/#models.building_models.BuildingRecipeIO.Volume","title":"Volume  <code>instance-attribute</code>","text":"<pre><code>Volume\n</code></pre>"},{"location":"models/building/#models.building_models.BuildingRecipeIO.Amount","title":"Amount  <code>instance-attribute</code>","text":"<pre><code>Amount\n</code></pre>"},{"location":"models/building/#models.building_models.BuildingRecipe","title":"BuildingRecipe","text":"<p>             Bases: <code>BaseModel</code></p>"},{"location":"models/building/#models.building_models.BuildingRecipe.Inputs","title":"Inputs  <code>instance-attribute</code>","text":"<pre><code>Inputs\n</code></pre>"},{"location":"models/building/#models.building_models.BuildingRecipe.Outputs","title":"Outputs  <code>instance-attribute</code>","text":"<pre><code>Outputs\n</code></pre>"},{"location":"models/building/#models.building_models.BuildingRecipe.BuildingRecipeId","title":"BuildingRecipeId  <code>instance-attribute</code>","text":"<pre><code>BuildingRecipeId\n</code></pre>"},{"location":"models/building/#models.building_models.BuildingRecipe.RecipeName","title":"RecipeName  <code>instance-attribute</code>","text":"<pre><code>RecipeName\n</code></pre>"},{"location":"models/building/#models.building_models.BuildingRecipe.StandardRecipeName","title":"StandardRecipeName  <code>instance-attribute</code>","text":"<pre><code>StandardRecipeName\n</code></pre>"},{"location":"models/building/#models.building_models.BuildingRecipe.DurationMs","title":"DurationMs  <code>instance-attribute</code>","text":"<pre><code>DurationMs\n</code></pre>"},{"location":"models/building/#models.building_models.BuildingCost","title":"BuildingCost","text":"<p>             Bases: <code>BaseModel</code></p>"},{"location":"models/building/#models.building_models.BuildingCost.CommodityName","title":"CommodityName  <code>instance-attribute</code>","text":"<pre><code>CommodityName\n</code></pre>"},{"location":"models/building/#models.building_models.BuildingCost.CommodityTicker","title":"CommodityTicker  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>CommodityTicker = Field(max_length=3)\n</code></pre>"},{"location":"models/building/#models.building_models.BuildingCost.Weight","title":"Weight  <code>instance-attribute</code>","text":"<pre><code>Weight\n</code></pre>"},{"location":"models/building/#models.building_models.BuildingCost.Volume","title":"Volume  <code>instance-attribute</code>","text":"<pre><code>Volume\n</code></pre>"},{"location":"models/building/#models.building_models.BuildingCost.Amount","title":"Amount  <code>instance-attribute</code>","text":"<pre><code>Amount\n</code></pre>"},{"location":"models/building/#models.building_models.BuildingTicker","title":"BuildingTicker","text":"<p>             Bases: <code>BaseModel</code></p>"},{"location":"models/building/#models.building_models.BuildingTicker.Recipes","title":"Recipes  <code>instance-attribute</code>","text":"<pre><code>Recipes\n</code></pre>"},{"location":"models/building/#models.building_models.BuildingTicker.BuildingId","title":"BuildingId  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>BuildingId = Field(min_length=32)\n</code></pre>"},{"location":"models/building/#models.building_models.BuildingTicker.Name","title":"Name  <code>instance-attribute</code>","text":"<pre><code>Name\n</code></pre>"},{"location":"models/building/#models.building_models.BuildingTicker.Ticker","title":"Ticker  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>Ticker = Field(max_length=3)\n</code></pre>"},{"location":"models/building/#models.building_models.BuildingTicker.Expertise","title":"Expertise  <code>instance-attribute</code>","text":"<pre><code>Expertise\n</code></pre>"},{"location":"models/building/#models.building_models.BuildingTicker.Pioneers","title":"Pioneers  <code>instance-attribute</code>","text":"<pre><code>Pioneers\n</code></pre>"},{"location":"models/building/#models.building_models.BuildingTicker.Settlers","title":"Settlers  <code>instance-attribute</code>","text":"<pre><code>Settlers\n</code></pre>"},{"location":"models/building/#models.building_models.BuildingTicker.Technicians","title":"Technicians  <code>instance-attribute</code>","text":"<pre><code>Technicians\n</code></pre>"},{"location":"models/building/#models.building_models.BuildingTicker.Engineers","title":"Engineers  <code>instance-attribute</code>","text":"<pre><code>Engineers\n</code></pre>"},{"location":"models/building/#models.building_models.BuildingTicker.Scientists","title":"Scientists  <code>instance-attribute</code>","text":"<pre><code>Scientists\n</code></pre>"},{"location":"models/building/#models.building_models.BuildingTicker.AreaCost","title":"AreaCost  <code>instance-attribute</code>","text":"<pre><code>AreaCost\n</code></pre>"},{"location":"models/building/#models.building_models.BuildingTicker.UserNameSubmitted","title":"UserNameSubmitted  <code>instance-attribute</code>","text":"<pre><code>UserNameSubmitted\n</code></pre>"},{"location":"models/building/#models.building_models.BuildingTicker.Timestamp","title":"Timestamp  <code>instance-attribute</code>","text":"<pre><code>Timestamp\n</code></pre>"},{"location":"models/building/#models.building_models.BuildingTickerList","title":"BuildingTickerList","text":"<p>             Bases: <code>RootModel</code></p>"},{"location":"models/building/#models.building_models.BuildingTickerList.root","title":"root  <code>instance-attribute</code>","text":"<pre><code>root\n</code></pre>"},{"location":"models/exchange/","title":"Exchange","text":""},{"location":"models/exchange/#models.exchange_models.ExchangeOrder","title":"ExchangeOrder","text":"<p>             Bases: <code>BaseModel</code></p>"},{"location":"models/exchange/#models.exchange_models.ExchangeOrder.OrderId","title":"OrderId  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>OrderId = Field(min_length=32)\n</code></pre>"},{"location":"models/exchange/#models.exchange_models.ExchangeOrder.CompanyId","title":"CompanyId  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>CompanyId = Field(min_length=32)\n</code></pre>"},{"location":"models/exchange/#models.exchange_models.ExchangeOrder.CompanyName","title":"CompanyName  <code>instance-attribute</code>","text":"<pre><code>CompanyName\n</code></pre>"},{"location":"models/exchange/#models.exchange_models.ExchangeOrder.CompanyCode","title":"CompanyCode  <code>instance-attribute</code>","text":"<pre><code>CompanyCode\n</code></pre>"},{"location":"models/exchange/#models.exchange_models.ExchangeOrder.ItemCount","title":"ItemCount  <code>instance-attribute</code>","text":"<pre><code>ItemCount\n</code></pre>"},{"location":"models/exchange/#models.exchange_models.ExchangeOrder.ItemCost","title":"ItemCost  <code>instance-attribute</code>","text":"<pre><code>ItemCost\n</code></pre>"},{"location":"models/exchange/#models.exchange_models.ExchangeTicker","title":"ExchangeTicker","text":"<p>             Bases: <code>BaseModel</code></p>"},{"location":"models/exchange/#models.exchange_models.ExchangeTicker.MaterialTicker","title":"MaterialTicker  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>MaterialTicker = Field(max_length=3)\n</code></pre>"},{"location":"models/exchange/#models.exchange_models.ExchangeTicker.ExchangeCode","title":"ExchangeCode  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ExchangeCode = Field(min_length=3)\n</code></pre>"},{"location":"models/exchange/#models.exchange_models.ExchangeTicker.MMBuy","title":"MMBuy  <code>instance-attribute</code>","text":"<pre><code>MMBuy\n</code></pre>"},{"location":"models/exchange/#models.exchange_models.ExchangeTicker.MMSell","title":"MMSell  <code>instance-attribute</code>","text":"<pre><code>MMSell\n</code></pre>"},{"location":"models/exchange/#models.exchange_models.ExchangeTicker.PriceAverage","title":"PriceAverage  <code>instance-attribute</code>","text":"<pre><code>PriceAverage\n</code></pre>"},{"location":"models/exchange/#models.exchange_models.ExchangeTicker.Ask","title":"Ask  <code>instance-attribute</code>","text":"<pre><code>Ask\n</code></pre>"},{"location":"models/exchange/#models.exchange_models.ExchangeTicker.AskCount","title":"AskCount  <code>instance-attribute</code>","text":"<pre><code>AskCount\n</code></pre>"},{"location":"models/exchange/#models.exchange_models.ExchangeTicker.Bid","title":"Bid  <code>instance-attribute</code>","text":"<pre><code>Bid\n</code></pre>"},{"location":"models/exchange/#models.exchange_models.ExchangeTicker.BidCount","title":"BidCount  <code>instance-attribute</code>","text":"<pre><code>BidCount\n</code></pre>"},{"location":"models/exchange/#models.exchange_models.ExchangeTicker.Supply","title":"Supply  <code>instance-attribute</code>","text":"<pre><code>Supply\n</code></pre>"},{"location":"models/exchange/#models.exchange_models.ExchangeTicker.Demand","title":"Demand  <code>instance-attribute</code>","text":"<pre><code>Demand\n</code></pre>"},{"location":"models/exchange/#models.exchange_models.ExchangeTickerList","title":"ExchangeTickerList","text":"<p>             Bases: <code>RootModel</code></p>"},{"location":"models/exchange/#models.exchange_models.ExchangeTickerList.root","title":"root  <code>instance-attribute</code>","text":"<pre><code>root\n</code></pre>"},{"location":"models/exchange/#models.exchange_models.ExchangeTickerFull","title":"ExchangeTickerFull","text":"<p>             Bases: <code>ExchangeTicker</code></p>"},{"location":"models/exchange/#models.exchange_models.ExchangeTickerFull.MaterialTicker","title":"MaterialTicker  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>MaterialTicker = Field(max_length=3)\n</code></pre>"},{"location":"models/exchange/#models.exchange_models.ExchangeTickerFull.ExchangeCode","title":"ExchangeCode  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ExchangeCode = Field(min_length=3)\n</code></pre>"},{"location":"models/exchange/#models.exchange_models.ExchangeTickerFull.MMBuy","title":"MMBuy  <code>instance-attribute</code>","text":"<pre><code>MMBuy\n</code></pre>"},{"location":"models/exchange/#models.exchange_models.ExchangeTickerFull.MMSell","title":"MMSell  <code>instance-attribute</code>","text":"<pre><code>MMSell\n</code></pre>"},{"location":"models/exchange/#models.exchange_models.ExchangeTickerFull.PriceAverage","title":"PriceAverage  <code>instance-attribute</code>","text":"<pre><code>PriceAverage\n</code></pre>"},{"location":"models/exchange/#models.exchange_models.ExchangeTickerFull.Ask","title":"Ask  <code>instance-attribute</code>","text":"<pre><code>Ask\n</code></pre>"},{"location":"models/exchange/#models.exchange_models.ExchangeTickerFull.AskCount","title":"AskCount  <code>instance-attribute</code>","text":"<pre><code>AskCount\n</code></pre>"},{"location":"models/exchange/#models.exchange_models.ExchangeTickerFull.Bid","title":"Bid  <code>instance-attribute</code>","text":"<pre><code>Bid\n</code></pre>"},{"location":"models/exchange/#models.exchange_models.ExchangeTickerFull.BidCount","title":"BidCount  <code>instance-attribute</code>","text":"<pre><code>BidCount\n</code></pre>"},{"location":"models/exchange/#models.exchange_models.ExchangeTickerFull.Supply","title":"Supply  <code>instance-attribute</code>","text":"<pre><code>Supply\n</code></pre>"},{"location":"models/exchange/#models.exchange_models.ExchangeTickerFull.Demand","title":"Demand  <code>instance-attribute</code>","text":"<pre><code>Demand\n</code></pre>"},{"location":"models/exchange/#models.exchange_models.ExchangeTickerFull.BuyingOrders","title":"BuyingOrders  <code>instance-attribute</code>","text":"<pre><code>BuyingOrders\n</code></pre>"},{"location":"models/exchange/#models.exchange_models.ExchangeTickerFull.SellingOrders","title":"SellingOrders  <code>instance-attribute</code>","text":"<pre><code>SellingOrders\n</code></pre>"},{"location":"models/exchange/#models.exchange_models.ExchangeTickerFull.ExchangeName","title":"ExchangeName  <code>instance-attribute</code>","text":"<pre><code>ExchangeName\n</code></pre>"},{"location":"models/exchange/#models.exchange_models.ExchangeTickerFull.CXDataModelId","title":"CXDataModelId  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>CXDataModelId = Field(min_length=32)\n</code></pre>"},{"location":"models/exchange/#models.exchange_models.ExchangeTickerFull.MaterialName","title":"MaterialName  <code>instance-attribute</code>","text":"<pre><code>MaterialName\n</code></pre>"},{"location":"models/exchange/#models.exchange_models.ExchangeTickerFull.MaterialId","title":"MaterialId  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>MaterialId = Field(min_length=32)\n</code></pre>"},{"location":"models/exchange/#models.exchange_models.ExchangeTickerFull.Currency","title":"Currency  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>Currency = Field(min_length=2)\n</code></pre>"},{"location":"models/exchange/#models.exchange_models.ExchangeTickerFull.Price","title":"Price  <code>instance-attribute</code>","text":"<pre><code>Price\n</code></pre>"},{"location":"models/exchange/#models.exchange_models.ExchangeTickerFull.PriceTimeEpochMs","title":"PriceTimeEpochMs  <code>instance-attribute</code>","text":"<pre><code>PriceTimeEpochMs\n</code></pre>"},{"location":"models/exchange/#models.exchange_models.ExchangeTickerFull.High","title":"High  <code>instance-attribute</code>","text":"<pre><code>High\n</code></pre>"},{"location":"models/exchange/#models.exchange_models.ExchangeTickerFull.AllTimeHigh","title":"AllTimeHigh  <code>instance-attribute</code>","text":"<pre><code>AllTimeHigh\n</code></pre>"},{"location":"models/exchange/#models.exchange_models.ExchangeTickerFull.Low","title":"Low  <code>instance-attribute</code>","text":"<pre><code>Low\n</code></pre>"},{"location":"models/exchange/#models.exchange_models.ExchangeTickerFull.AllTimeLow","title":"AllTimeLow  <code>instance-attribute</code>","text":"<pre><code>AllTimeLow\n</code></pre>"},{"location":"models/exchange/#models.exchange_models.ExchangeTickerFull.Traded","title":"Traded  <code>instance-attribute</code>","text":"<pre><code>Traded\n</code></pre>"},{"location":"models/exchange/#models.exchange_models.ExchangeTickerFull.VolumeAmount","title":"VolumeAmount  <code>instance-attribute</code>","text":"<pre><code>VolumeAmount\n</code></pre>"},{"location":"models/exchange/#models.exchange_models.ExchangeTickerFull.NarrowPriceBandLow","title":"NarrowPriceBandLow  <code>instance-attribute</code>","text":"<pre><code>NarrowPriceBandLow\n</code></pre>"},{"location":"models/exchange/#models.exchange_models.ExchangeTickerFull.NarrowPriceBandHigh","title":"NarrowPriceBandHigh  <code>instance-attribute</code>","text":"<pre><code>NarrowPriceBandHigh\n</code></pre>"},{"location":"models/exchange/#models.exchange_models.ExchangeTickerFull.WidePriceBandLow","title":"WidePriceBandLow  <code>instance-attribute</code>","text":"<pre><code>WidePriceBandLow\n</code></pre>"},{"location":"models/exchange/#models.exchange_models.ExchangeTickerFull.WidePriceBandHigh","title":"WidePriceBandHigh  <code>instance-attribute</code>","text":"<pre><code>WidePriceBandHigh\n</code></pre>"},{"location":"models/exchange/#models.exchange_models.ExchangeTickerFull.UserNameSubmitted","title":"UserNameSubmitted  <code>instance-attribute</code>","text":"<pre><code>UserNameSubmitted\n</code></pre>"},{"location":"models/exchange/#models.exchange_models.ExchangeTickerFull.Timestamp","title":"Timestamp  <code>instance-attribute</code>","text":"<pre><code>Timestamp\n</code></pre>"},{"location":"models/exchange/#models.exchange_models.ExchangeTickerFullList","title":"ExchangeTickerFullList","text":"<p>             Bases: <code>RootModel</code></p>"},{"location":"models/exchange/#models.exchange_models.ExchangeTickerFullList.root","title":"root  <code>instance-attribute</code>","text":"<pre><code>root\n</code></pre>"},{"location":"models/exchange/#models.exchange_models.OrderDefinition","title":"OrderDefinition","text":"<p>             Bases: <code>BaseModel</code></p>"},{"location":"models/exchange/#models.exchange_models.OrderDefinition.Count","title":"Count  <code>instance-attribute</code>","text":"<pre><code>Count\n</code></pre>"},{"location":"models/exchange/#models.exchange_models.OrderDefinition.Cost","title":"Cost  <code>instance-attribute</code>","text":"<pre><code>Cost\n</code></pre>"},{"location":"models/exchange/#models.exchange_models.Order","title":"Order","text":"<p>             Bases: <code>BaseModel</code></p>"},{"location":"models/exchange/#models.exchange_models.Order.Ticker","title":"Ticker  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>Ticker = Field(max_length=7)\n</code></pre>"},{"location":"models/exchange/#models.exchange_models.Order.Buys","title":"Buys  <code>instance-attribute</code>","text":"<pre><code>Buys\n</code></pre>"},{"location":"models/exchange/#models.exchange_models.Order.Sells","title":"Sells  <code>instance-attribute</code>","text":"<pre><code>Sells\n</code></pre>"},{"location":"models/exchange/#models.exchange_models.OrderList","title":"OrderList","text":"<p>             Bases: <code>RootModel</code></p>"},{"location":"models/exchange/#models.exchange_models.OrderList.root","title":"root  <code>instance-attribute</code>","text":"<pre><code>root\n</code></pre>"},{"location":"models/group/","title":"Group","text":""},{"location":"models/group/#models.group_models.GroupAdmin","title":"GroupAdmin","text":"<p>             Bases: <code>BaseModel</code></p>"},{"location":"models/group/#models.group_models.GroupAdmin.GroupAdminUserName","title":"GroupAdminUserName  <code>instance-attribute</code>","text":"<pre><code>GroupAdminUserName\n</code></pre>"},{"location":"models/group/#models.group_models.GroupUser","title":"GroupUser","text":"<p>             Bases: <code>BaseModel</code></p>"},{"location":"models/group/#models.group_models.GroupUser.GroupUserName","title":"GroupUserName  <code>instance-attribute</code>","text":"<pre><code>GroupUserName\n</code></pre>"},{"location":"models/group/#models.group_models.Group","title":"Group","text":"<p>             Bases: <code>BaseModel</code></p>"},{"location":"models/group/#models.group_models.Group.GroupAdmins","title":"GroupAdmins  <code>instance-attribute</code>","text":"<pre><code>GroupAdmins\n</code></pre>"},{"location":"models/group/#models.group_models.Group.GroupUsers","title":"GroupUsers  <code>instance-attribute</code>","text":"<pre><code>GroupUsers\n</code></pre>"},{"location":"models/group/#models.group_models.Group.GroupModelId","title":"GroupModelId  <code>instance-attribute</code>","text":"<pre><code>GroupModelId\n</code></pre>"},{"location":"models/group/#models.group_models.Group.GroupOwner","title":"GroupOwner  <code>instance-attribute</code>","text":"<pre><code>GroupOwner\n</code></pre>"},{"location":"models/group/#models.group_models.Group.GroupName","title":"GroupName  <code>instance-attribute</code>","text":"<pre><code>GroupName\n</code></pre>"},{"location":"models/group/#models.group_models.Group.users","title":"users","text":"<pre><code>users()\n</code></pre> Source code in <code>fio_wrapper/models/group_models.py</code> <pre><code>def users(self) -&gt; List[str]:\n    return [user.GroupUserName.upper() for user in self.GroupUsers]\n</code></pre>"},{"location":"models/group/#models.group_models.GroupList","title":"GroupList","text":"<p>             Bases: <code>RootModel</code></p>"},{"location":"models/group/#models.group_models.GroupList.root","title":"root  <code>instance-attribute</code>","text":"<pre><code>root\n</code></pre>"},{"location":"models/group/#models.group_models.GroupList.ids","title":"ids","text":"<pre><code>ids()\n</code></pre> <p>Returns a list of Group IDs from all Groups in the List</p> <p>Returns:</p> Type Description <code>List[int]</code> <p>List[int]: List of GroupModelId</p> Source code in <code>fio_wrapper/models/group_models.py</code> <pre><code>def ids(self) -&gt; List[int]:\n    \"\"\"Returns a list of Group IDs from all Groups in the List\n\n    Returns:\n        List[int]: List of GroupModelId\n    \"\"\"\n    return [group.GroupModelId for group in self.root]\n</code></pre>"},{"location":"models/group/#models.group_models.GroupMembership","title":"GroupMembership","text":"<p>             Bases: <code>BaseModel</code></p>"},{"location":"models/group/#models.group_models.GroupMembership.GroupName","title":"GroupName  <code>instance-attribute</code>","text":"<pre><code>GroupName\n</code></pre>"},{"location":"models/group/#models.group_models.GroupMembership.GroupId","title":"GroupId  <code>instance-attribute</code>","text":"<pre><code>GroupId\n</code></pre>"},{"location":"models/group/#models.group_models.GroupMembershipList","title":"GroupMembershipList","text":"<p>             Bases: <code>RootModel</code></p>"},{"location":"models/group/#models.group_models.GroupMembershipList.root","title":"root  <code>instance-attribute</code>","text":"<pre><code>root\n</code></pre>"},{"location":"models/group/#models.group_models.GroupMembershipList.ids","title":"ids","text":"<pre><code>ids()\n</code></pre> <p>Returns a list of Group IDs from all Group Memberships</p> <p>Returns:</p> Type Description <code>List[int]</code> <p>List[int]: List of GroupIDs</p> Source code in <code>fio_wrapper/models/group_models.py</code> <pre><code>def ids(self) -&gt; List[int]:\n    \"\"\"Returns a list of Group IDs from all Group Memberships\n\n    Returns:\n        List[int]: List of GroupIDs\n    \"\"\"\n    return [membership.GroupId for membership in self.root]\n</code></pre>"},{"location":"models/group/#models.group_models.StorageItem","title":"StorageItem","text":"<p>             Bases: <code>BaseModel</code></p>"},{"location":"models/group/#models.group_models.StorageItem.MaterialTicker","title":"MaterialTicker  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>MaterialTicker = Field(max_length=3)\n</code></pre>"},{"location":"models/group/#models.group_models.StorageItem.MaterialName","title":"MaterialName  <code>instance-attribute</code>","text":"<pre><code>MaterialName\n</code></pre>"},{"location":"models/group/#models.group_models.StorageItem.MaterialCategoryName","title":"MaterialCategoryName  <code>instance-attribute</code>","text":"<pre><code>MaterialCategoryName\n</code></pre>"},{"location":"models/group/#models.group_models.StorageItem.Units","title":"Units  <code>instance-attribute</code>","text":"<pre><code>Units\n</code></pre>"},{"location":"models/group/#models.group_models.PlayerCXWarehouses","title":"PlayerCXWarehouses","text":"<p>             Bases: <code>BaseModel</code></p>"},{"location":"models/group/#models.group_models.PlayerCXWarehouses.PlayerName","title":"PlayerName  <code>instance-attribute</code>","text":"<pre><code>PlayerName\n</code></pre>"},{"location":"models/group/#models.group_models.PlayerCXWarehouses.StorageType","title":"StorageType  <code>instance-attribute</code>","text":"<pre><code>StorageType\n</code></pre>"},{"location":"models/group/#models.group_models.PlayerCXWarehouses.Items","title":"Items  <code>instance-attribute</code>","text":"<pre><code>Items\n</code></pre>"},{"location":"models/group/#models.group_models.CXWarehouse","title":"CXWarehouse","text":"<p>             Bases: <code>BaseModel</code></p>"},{"location":"models/group/#models.group_models.CXWarehouse.WarehouseLocationName","title":"WarehouseLocationName  <code>instance-attribute</code>","text":"<pre><code>WarehouseLocationName\n</code></pre>"},{"location":"models/group/#models.group_models.CXWarehouse.WarehouseLocationNaturalId","title":"WarehouseLocationNaturalId  <code>instance-attribute</code>","text":"<pre><code>WarehouseLocationNaturalId\n</code></pre>"},{"location":"models/group/#models.group_models.CXWarehouse.PlayerCXWarehouses","title":"PlayerCXWarehouses  <code>instance-attribute</code>","text":"<pre><code>PlayerCXWarehouses\n</code></pre>"},{"location":"models/group/#models.group_models.RepairMaterial","title":"RepairMaterial","text":"<p>             Bases: <code>BaseModel</code></p>"},{"location":"models/group/#models.group_models.RepairMaterial.MaterialTicker","title":"MaterialTicker  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>MaterialTicker = Field(max_length=3)\n</code></pre>"},{"location":"models/group/#models.group_models.RepairMaterial.Amount","title":"Amount  <code>instance-attribute</code>","text":"<pre><code>Amount\n</code></pre>"},{"location":"models/group/#models.group_models.AddressLine","title":"AddressLine","text":"<p>             Bases: <code>BaseModel</code></p>"},{"location":"models/group/#models.group_models.AddressLine.LineId","title":"LineId  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>LineId = Field(min_length=32)\n</code></pre>"},{"location":"models/group/#models.group_models.AddressLine.LineType","title":"LineType  <code>instance-attribute</code>","text":"<pre><code>LineType\n</code></pre>"},{"location":"models/group/#models.group_models.AddressLine.NaturalId","title":"NaturalId  <code>instance-attribute</code>","text":"<pre><code>NaturalId\n</code></pre>"},{"location":"models/group/#models.group_models.AddressLine.Name","title":"Name  <code>instance-attribute</code>","text":"<pre><code>Name\n</code></pre>"},{"location":"models/group/#models.group_models.AddressLineFlight","title":"AddressLineFlight","text":"<p>             Bases: <code>BaseModel</code></p>"},{"location":"models/group/#models.group_models.AddressLineFlight.LineId","title":"LineId  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>LineId = Field(min_length=32)\n</code></pre>"},{"location":"models/group/#models.group_models.AddressLineFlight.Type","title":"Type  <code>instance-attribute</code>","text":"<pre><code>Type\n</code></pre>"},{"location":"models/group/#models.group_models.AddressLineFlight.LineNaturalId","title":"LineNaturalId  <code>instance-attribute</code>","text":"<pre><code>LineNaturalId\n</code></pre>"},{"location":"models/group/#models.group_models.AddressLineFlight.LineName","title":"LineName  <code>instance-attribute</code>","text":"<pre><code>LineName\n</code></pre>"},{"location":"models/group/#models.group_models.ShipFuel","title":"ShipFuel","text":"<p>             Bases: <code>BaseModel</code></p>"},{"location":"models/group/#models.group_models.ShipFuel.CurrentSF","title":"CurrentSF  <code>instance-attribute</code>","text":"<pre><code>CurrentSF\n</code></pre>"},{"location":"models/group/#models.group_models.ShipFuel.MaxSF","title":"MaxSF  <code>instance-attribute</code>","text":"<pre><code>MaxSF\n</code></pre>"},{"location":"models/group/#models.group_models.ShipFuel.CurrentFF","title":"CurrentFF  <code>instance-attribute</code>","text":"<pre><code>CurrentFF\n</code></pre>"},{"location":"models/group/#models.group_models.ShipFuel.MaxFF","title":"MaxFF  <code>instance-attribute</code>","text":"<pre><code>MaxFF\n</code></pre>"},{"location":"models/group/#models.group_models.ShipCargo","title":"ShipCargo","text":"<p>             Bases: <code>BaseModel</code></p>"},{"location":"models/group/#models.group_models.ShipCargo.PlayerName","title":"PlayerName  <code>instance-attribute</code>","text":"<pre><code>PlayerName\n</code></pre>"},{"location":"models/group/#models.group_models.ShipCargo.StorageType","title":"StorageType  <code>instance-attribute</code>","text":"<pre><code>StorageType\n</code></pre>"},{"location":"models/group/#models.group_models.ShipCargo.Items","title":"Items  <code>instance-attribute</code>","text":"<pre><code>Items\n</code></pre>"},{"location":"models/group/#models.group_models.ShipCargo.LastUpdated","title":"LastUpdated  <code>instance-attribute</code>","text":"<pre><code>LastUpdated\n</code></pre>"},{"location":"models/group/#models.group_models.ShipFlightSegment","title":"ShipFlightSegment","text":"<p>             Bases: <code>BaseModel</code></p>"},{"location":"models/group/#models.group_models.ShipFlightSegment.OriginLines","title":"OriginLines  <code>instance-attribute</code>","text":"<pre><code>OriginLines\n</code></pre>"},{"location":"models/group/#models.group_models.ShipFlightSegment.DestinationLines","title":"DestinationLines  <code>instance-attribute</code>","text":"<pre><code>DestinationLines\n</code></pre>"},{"location":"models/group/#models.group_models.ShipFlightSegment.Type","title":"Type  <code>instance-attribute</code>","text":"<pre><code>Type\n</code></pre>"},{"location":"models/group/#models.group_models.ShipFlightSegment.DepartureTimeEpochMs","title":"DepartureTimeEpochMs  <code>instance-attribute</code>","text":"<pre><code>DepartureTimeEpochMs\n</code></pre>"},{"location":"models/group/#models.group_models.ShipFlightSegment.ArrivalTimeEpochMs","title":"ArrivalTimeEpochMs  <code>instance-attribute</code>","text":"<pre><code>ArrivalTimeEpochMs\n</code></pre>"},{"location":"models/group/#models.group_models.ShipFlightSegment.StlDistance","title":"StlDistance  <code>instance-attribute</code>","text":"<pre><code>StlDistance\n</code></pre>"},{"location":"models/group/#models.group_models.ShipFlightSegment.StlFuelConsumption","title":"StlFuelConsumption  <code>instance-attribute</code>","text":"<pre><code>StlFuelConsumption\n</code></pre>"},{"location":"models/group/#models.group_models.ShipFlightSegment.FtlDistance","title":"FtlDistance  <code>instance-attribute</code>","text":"<pre><code>FtlDistance\n</code></pre>"},{"location":"models/group/#models.group_models.ShipFlightSegment.FtlFuelConsumption","title":"FtlFuelConsumption  <code>instance-attribute</code>","text":"<pre><code>FtlFuelConsumption\n</code></pre>"},{"location":"models/group/#models.group_models.ShipFlightSegment.Origin","title":"Origin  <code>instance-attribute</code>","text":"<pre><code>Origin\n</code></pre>"},{"location":"models/group/#models.group_models.ShipFlightSegment.Destination","title":"Destination  <code>instance-attribute</code>","text":"<pre><code>Destination\n</code></pre>"},{"location":"models/group/#models.group_models.ShipFlight","title":"ShipFlight","text":"<p>             Bases: <code>BaseModel</code></p>"},{"location":"models/group/#models.group_models.ShipFlight.Segments","title":"Segments  <code>instance-attribute</code>","text":"<pre><code>Segments\n</code></pre>"},{"location":"models/group/#models.group_models.ShipFlight.FlightId","title":"FlightId  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>FlightId = Field(min_length=32)\n</code></pre>"},{"location":"models/group/#models.group_models.ShipFlight.ShipId","title":"ShipId  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ShipId = Field(min_length=32)\n</code></pre>"},{"location":"models/group/#models.group_models.ShipFlight.Origin","title":"Origin  <code>instance-attribute</code>","text":"<pre><code>Origin\n</code></pre>"},{"location":"models/group/#models.group_models.ShipFlight.Destination","title":"Destination  <code>instance-attribute</code>","text":"<pre><code>Destination\n</code></pre>"},{"location":"models/group/#models.group_models.ShipFlight.DepartureTimeEpochMs","title":"DepartureTimeEpochMs  <code>instance-attribute</code>","text":"<pre><code>DepartureTimeEpochMs\n</code></pre>"},{"location":"models/group/#models.group_models.ShipFlight.ArrivalTimeEpochMs","title":"ArrivalTimeEpochMs  <code>instance-attribute</code>","text":"<pre><code>ArrivalTimeEpochMs\n</code></pre>"},{"location":"models/group/#models.group_models.ShipFlight.CurrentSegmentIndex","title":"CurrentSegmentIndex  <code>instance-attribute</code>","text":"<pre><code>CurrentSegmentIndex\n</code></pre>"},{"location":"models/group/#models.group_models.ShipFlight.StlDistance","title":"StlDistance  <code>instance-attribute</code>","text":"<pre><code>StlDistance\n</code></pre>"},{"location":"models/group/#models.group_models.ShipFlight.FtlDistance","title":"FtlDistance  <code>instance-attribute</code>","text":"<pre><code>FtlDistance\n</code></pre>"},{"location":"models/group/#models.group_models.ShipFlight.IsAborted","title":"IsAborted  <code>instance-attribute</code>","text":"<pre><code>IsAborted\n</code></pre>"},{"location":"models/group/#models.group_models.ShipFlight.Timestamp","title":"Timestamp  <code>instance-attribute</code>","text":"<pre><code>Timestamp\n</code></pre>"},{"location":"models/group/#models.group_models.PlayerShip","title":"PlayerShip","text":"<p>             Bases: <code>BaseModel</code></p>"},{"location":"models/group/#models.group_models.PlayerShip.PlayerName","title":"PlayerName  <code>instance-attribute</code>","text":"<pre><code>PlayerName\n</code></pre>"},{"location":"models/group/#models.group_models.PlayerShip.ShipName","title":"ShipName  <code>instance-attribute</code>","text":"<pre><code>ShipName\n</code></pre>"},{"location":"models/group/#models.group_models.PlayerShip.ShipRegistration","title":"ShipRegistration  <code>instance-attribute</code>","text":"<pre><code>ShipRegistration\n</code></pre>"},{"location":"models/group/#models.group_models.PlayerShip.Location","title":"Location  <code>instance-attribute</code>","text":"<pre><code>Location\n</code></pre>"},{"location":"models/group/#models.group_models.PlayerShip.Destination","title":"Destination  <code>instance-attribute</code>","text":"<pre><code>Destination\n</code></pre>"},{"location":"models/group/#models.group_models.PlayerShip.LocationETA","title":"LocationETA  <code>instance-attribute</code>","text":"<pre><code>LocationETA\n</code></pre>"},{"location":"models/group/#models.group_models.PlayerShip.LocationETALocalTime","title":"LocationETALocalTime  <code>instance-attribute</code>","text":"<pre><code>LocationETALocalTime\n</code></pre>"},{"location":"models/group/#models.group_models.PlayerShip.Condition","title":"Condition  <code>instance-attribute</code>","text":"<pre><code>Condition\n</code></pre>"},{"location":"models/group/#models.group_models.PlayerShip.RepairMaterials","title":"RepairMaterials  <code>instance-attribute</code>","text":"<pre><code>RepairMaterials\n</code></pre>"},{"location":"models/group/#models.group_models.PlayerShip.AddressLines","title":"AddressLines  <code>instance-attribute</code>","text":"<pre><code>AddressLines\n</code></pre>"},{"location":"models/group/#models.group_models.PlayerShip.Flight","title":"Flight  <code>instance-attribute</code>","text":"<pre><code>Flight\n</code></pre>"},{"location":"models/group/#models.group_models.PlayerShip.Fuel","title":"Fuel  <code>instance-attribute</code>","text":"<pre><code>Fuel\n</code></pre>"},{"location":"models/group/#models.group_models.PlayerShip.Cargo","title":"Cargo  <code>instance-attribute</code>","text":"<pre><code>Cargo\n</code></pre>"},{"location":"models/group/#models.group_models.PlayerShip.LastUpdated","title":"LastUpdated  <code>instance-attribute</code>","text":"<pre><code>LastUpdated\n</code></pre>"},{"location":"models/group/#models.group_models.Currency","title":"Currency","text":"<p>             Bases: <code>BaseModel</code></p>"},{"location":"models/group/#models.group_models.Currency.CurrencyName","title":"CurrencyName  <code>instance-attribute</code>","text":"<pre><code>CurrencyName\n</code></pre>"},{"location":"models/group/#models.group_models.Currency.Amount","title":"Amount  <code>instance-attribute</code>","text":"<pre><code>Amount\n</code></pre>"},{"location":"models/group/#models.group_models.Currency.LastUpdated","title":"LastUpdated  <code>instance-attribute</code>","text":"<pre><code>LastUpdated\n</code></pre>"},{"location":"models/group/#models.group_models.Material","title":"Material","text":"<p>             Bases: <code>BaseModel</code></p>"},{"location":"models/group/#models.group_models.Material.MaterialTicker","title":"MaterialTicker  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>MaterialTicker = Field(max_length=3)\n</code></pre>"},{"location":"models/group/#models.group_models.Material.MaterialName","title":"MaterialName  <code>instance-attribute</code>","text":"<pre><code>MaterialName\n</code></pre>"},{"location":"models/group/#models.group_models.Material.MaterialCategoryName","title":"MaterialCategoryName  <code>instance-attribute</code>","text":"<pre><code>MaterialCategoryName\n</code></pre>"},{"location":"models/group/#models.group_models.Material.Units","title":"Units  <code>instance-attribute</code>","text":"<pre><code>Units\n</code></pre>"},{"location":"models/group/#models.group_models.ProductionLine","title":"ProductionLine","text":"<p>             Bases: <code>BaseModel</code></p>"},{"location":"models/group/#models.group_models.ProductionLine.Started","title":"Started  <code>instance-attribute</code>","text":"<pre><code>Started\n</code></pre>"},{"location":"models/group/#models.group_models.ProductionLine.Halted","title":"Halted  <code>instance-attribute</code>","text":"<pre><code>Halted\n</code></pre>"},{"location":"models/group/#models.group_models.ProductionLine.Recurring","title":"Recurring  <code>instance-attribute</code>","text":"<pre><code>Recurring\n</code></pre>"},{"location":"models/group/#models.group_models.ProductionLine.OrderDuration","title":"OrderDuration  <code>instance-attribute</code>","text":"<pre><code>OrderDuration\n</code></pre>"},{"location":"models/group/#models.group_models.ProductionLine.TimeCompletion","title":"TimeCompletion  <code>instance-attribute</code>","text":"<pre><code>TimeCompletion\n</code></pre>"},{"location":"models/group/#models.group_models.ProductionLine.Inputs","title":"Inputs  <code>instance-attribute</code>","text":"<pre><code>Inputs\n</code></pre>"},{"location":"models/group/#models.group_models.ProductionLine.Outputs","title":"Outputs  <code>instance-attribute</code>","text":"<pre><code>Outputs\n</code></pre>"},{"location":"models/group/#models.group_models.ProductionLine.LastUpdated","title":"LastUpdated  <code>instance-attribute</code>","text":"<pre><code>LastUpdated\n</code></pre>"},{"location":"models/group/#models.group_models.ProductionLine.BuildingName","title":"BuildingName  <code>instance-attribute</code>","text":"<pre><code>BuildingName\n</code></pre>"},{"location":"models/group/#models.group_models.ProductionLine.BuildingTicker","title":"BuildingTicker  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>BuildingTicker = Field(max_length=3)\n</code></pre>"},{"location":"models/group/#models.group_models.ProductionLine.Capacity","title":"Capacity  <code>instance-attribute</code>","text":"<pre><code>Capacity\n</code></pre>"},{"location":"models/group/#models.group_models.ProductionLine.Efficiency","title":"Efficiency  <code>instance-attribute</code>","text":"<pre><code>Efficiency\n</code></pre>"},{"location":"models/group/#models.group_models.ProductionLine.Condition","title":"Condition  <code>instance-attribute</code>","text":"<pre><code>Condition\n</code></pre>"},{"location":"models/group/#models.group_models.Building","title":"Building","text":"<p>             Bases: <code>BaseModel</code></p>"},{"location":"models/group/#models.group_models.Building.BuildingName","title":"BuildingName  <code>instance-attribute</code>","text":"<pre><code>BuildingName\n</code></pre>"},{"location":"models/group/#models.group_models.Building.BuildingTicker","title":"BuildingTicker  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>BuildingTicker = Field(max_length=3)\n</code></pre>"},{"location":"models/group/#models.group_models.Building.Condition","title":"Condition  <code>instance-attribute</code>","text":"<pre><code>Condition\n</code></pre>"},{"location":"models/group/#models.group_models.Building.RepairMaterials","title":"RepairMaterials  <code>instance-attribute</code>","text":"<pre><code>RepairMaterials\n</code></pre>"},{"location":"models/group/#models.group_models.Building.ReclaimableMaterials","title":"ReclaimableMaterials  <code>instance-attribute</code>","text":"<pre><code>ReclaimableMaterials\n</code></pre>"},{"location":"models/group/#models.group_models.Building.ProductionLiness","title":"ProductionLiness  <code>instance-attribute</code>","text":"<pre><code>ProductionLiness\n</code></pre>"},{"location":"models/group/#models.group_models.Storage","title":"Storage","text":"<p>             Bases: <code>BaseModel</code></p>"},{"location":"models/group/#models.group_models.Storage.PlayerName","title":"PlayerName  <code>instance-attribute</code>","text":"<pre><code>PlayerName\n</code></pre>"},{"location":"models/group/#models.group_models.Storage.StorageType","title":"StorageType  <code>instance-attribute</code>","text":"<pre><code>StorageType\n</code></pre>"},{"location":"models/group/#models.group_models.Storage.Items","title":"Items  <code>instance-attribute</code>","text":"<pre><code>Items\n</code></pre>"},{"location":"models/group/#models.group_models.Storage.LastUpdated","title":"LastUpdated  <code>instance-attribute</code>","text":"<pre><code>LastUpdated\n</code></pre>"},{"location":"models/group/#models.group_models.Location","title":"Location","text":"<p>             Bases: <code>BaseModel</code></p>"},{"location":"models/group/#models.group_models.Location.LocationIdentifier","title":"LocationIdentifier  <code>instance-attribute</code>","text":"<pre><code>LocationIdentifier\n</code></pre>"},{"location":"models/group/#models.group_models.Location.LocationName","title":"LocationName  <code>instance-attribute</code>","text":"<pre><code>LocationName\n</code></pre>"},{"location":"models/group/#models.group_models.Location.Buildings","title":"Buildings  <code>instance-attribute</code>","text":"<pre><code>Buildings\n</code></pre>"},{"location":"models/group/#models.group_models.Location.BaseStorage","title":"BaseStorage  <code>instance-attribute</code>","text":"<pre><code>BaseStorage\n</code></pre>"},{"location":"models/group/#models.group_models.Location.WarehouseStorage","title":"WarehouseStorage  <code>instance-attribute</code>","text":"<pre><code>WarehouseStorage\n</code></pre>"},{"location":"models/group/#models.group_models.Location.StationaryPlayerShips","title":"StationaryPlayerShips  <code>instance-attribute</code>","text":"<pre><code>StationaryPlayerShips\n</code></pre>"},{"location":"models/group/#models.group_models.PlayerModel","title":"PlayerModel","text":"<p>             Bases: <code>BaseModel</code></p>"},{"location":"models/group/#models.group_models.PlayerModel.Username","title":"Username  <code>instance-attribute</code>","text":"<pre><code>Username\n</code></pre>"},{"location":"models/group/#models.group_models.PlayerModel.Currencies","title":"Currencies  <code>instance-attribute</code>","text":"<pre><code>Currencies\n</code></pre>"},{"location":"models/group/#models.group_models.PlayerModel.Locations","title":"Locations  <code>instance-attribute</code>","text":"<pre><code>Locations\n</code></pre>"},{"location":"models/group/#models.group_models.GroupHub","title":"GroupHub","text":"<p>             Bases: <code>BaseModel</code></p>"},{"location":"models/group/#models.group_models.GroupHub.GroupName","title":"GroupName  <code>instance-attribute</code>","text":"<pre><code>GroupName\n</code></pre>"},{"location":"models/group/#models.group_models.GroupHub.CXWarehouses","title":"CXWarehouses  <code>instance-attribute</code>","text":"<pre><code>CXWarehouses\n</code></pre>"},{"location":"models/group/#models.group_models.GroupHub.PlayerShipsInFlight","title":"PlayerShipsInFlight  <code>instance-attribute</code>","text":"<pre><code>PlayerShipsInFlight\n</code></pre>"},{"location":"models/group/#models.group_models.GroupHub.PlayerStationaryShips","title":"PlayerStationaryShips  <code>instance-attribute</code>","text":"<pre><code>PlayerStationaryShips\n</code></pre>"},{"location":"models/group/#models.group_models.GroupHub.Failures","title":"Failures  <code>instance-attribute</code>","text":"<pre><code>Failures\n</code></pre>"},{"location":"models/group/#models.group_models.Inventory","title":"Inventory","text":"<p>             Bases: <code>BaseModel</code></p>"},{"location":"models/group/#models.group_models.Inventory.MaterialId","title":"MaterialId  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>MaterialId = Field(min_length=32)\n</code></pre>"},{"location":"models/group/#models.group_models.Inventory.MaterialTicker","title":"MaterialTicker  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>MaterialTicker = Field(max_length=3)\n</code></pre>"},{"location":"models/group/#models.group_models.Inventory.MaterialAmount","title":"MaterialAmount  <code>instance-attribute</code>","text":"<pre><code>MaterialAmount\n</code></pre>"},{"location":"models/group/#models.group_models.Consumption","title":"Consumption","text":"<p>             Bases: <code>BaseModel</code></p>"},{"location":"models/group/#models.group_models.Consumption.MaterialId","title":"MaterialId  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>MaterialId = Field(min_length=32)\n</code></pre>"},{"location":"models/group/#models.group_models.Consumption.MaterialTicker","title":"MaterialTicker  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>MaterialTicker = Field(max_length=3)\n</code></pre>"},{"location":"models/group/#models.group_models.Consumption.DailyAmount","title":"DailyAmount  <code>instance-attribute</code>","text":"<pre><code>DailyAmount\n</code></pre>"},{"location":"models/group/#models.group_models.Burn","title":"Burn","text":"<p>             Bases: <code>BaseModel</code></p>"},{"location":"models/group/#models.group_models.Burn.RequesterUserName","title":"RequesterUserName  <code>instance-attribute</code>","text":"<pre><code>RequesterUserName\n</code></pre>"},{"location":"models/group/#models.group_models.Burn.UserName","title":"UserName  <code>instance-attribute</code>","text":"<pre><code>UserName\n</code></pre>"},{"location":"models/group/#models.group_models.Burn.Error","title":"Error  <code>instance-attribute</code>","text":"<pre><code>Error\n</code></pre>"},{"location":"models/group/#models.group_models.Burn.PlanetId","title":"PlanetId  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>PlanetId = Field(min_length=32)\n</code></pre>"},{"location":"models/group/#models.group_models.Burn.PlanetName","title":"PlanetName  <code>instance-attribute</code>","text":"<pre><code>PlanetName\n</code></pre>"},{"location":"models/group/#models.group_models.Burn.PlanetNaturalId","title":"PlanetNaturalId  <code>instance-attribute</code>","text":"<pre><code>PlanetNaturalId\n</code></pre>"},{"location":"models/group/#models.group_models.Burn.PlanetConsumptionTime","title":"PlanetConsumptionTime  <code>instance-attribute</code>","text":"<pre><code>PlanetConsumptionTime\n</code></pre>"},{"location":"models/group/#models.group_models.Burn.LastUpdate","title":"LastUpdate  <code>instance-attribute</code>","text":"<pre><code>LastUpdate\n</code></pre>"},{"location":"models/group/#models.group_models.Burn.LastUpdateCause","title":"LastUpdateCause  <code>instance-attribute</code>","text":"<pre><code>LastUpdateCause\n</code></pre>"},{"location":"models/group/#models.group_models.Burn.Inventory","title":"Inventory  <code>instance-attribute</code>","text":"<pre><code>Inventory\n</code></pre>"},{"location":"models/group/#models.group_models.Burn.WorkforceConsumption","title":"WorkforceConsumption  <code>instance-attribute</code>","text":"<pre><code>WorkforceConsumption\n</code></pre>"},{"location":"models/group/#models.group_models.Burn.OrderConsumption","title":"OrderConsumption  <code>instance-attribute</code>","text":"<pre><code>OrderConsumption\n</code></pre>"},{"location":"models/group/#models.group_models.Burn.OrderProduction","title":"OrderProduction  <code>instance-attribute</code>","text":"<pre><code>OrderProduction\n</code></pre>"},{"location":"models/group/#models.group_models.BurnList","title":"BurnList","text":"<p>             Bases: <code>RootModel</code></p>"},{"location":"models/group/#models.group_models.BurnList.root","title":"root  <code>instance-attribute</code>","text":"<pre><code>root\n</code></pre>"},{"location":"models/localmarket/","title":"LocalMarket","text":""},{"location":"models/localmarket/#models.localmarket_models.AdBase","title":"AdBase","text":"<p>             Bases: <code>BaseModel</code></p>"},{"location":"models/localmarket/#models.localmarket_models.AdBase.ContractNaturalId","title":"ContractNaturalId  <code>instance-attribute</code>","text":"<pre><code>ContractNaturalId\n</code></pre>"},{"location":"models/localmarket/#models.localmarket_models.AdBase.PlanetId","title":"PlanetId  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>PlanetId = Field(min_length=32)\n</code></pre>"},{"location":"models/localmarket/#models.localmarket_models.AdBase.PlanetNaturalId","title":"PlanetNaturalId  <code>instance-attribute</code>","text":"<pre><code>PlanetNaturalId\n</code></pre>"},{"location":"models/localmarket/#models.localmarket_models.AdBase.PlanetName","title":"PlanetName  <code>instance-attribute</code>","text":"<pre><code>PlanetName\n</code></pre>"},{"location":"models/localmarket/#models.localmarket_models.AdBase.CreatorCompanyId","title":"CreatorCompanyId  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>CreatorCompanyId = Field(min_length=32)\n</code></pre>"},{"location":"models/localmarket/#models.localmarket_models.AdBase.CreatorCompanyName","title":"CreatorCompanyName  <code>instance-attribute</code>","text":"<pre><code>CreatorCompanyName\n</code></pre>"},{"location":"models/localmarket/#models.localmarket_models.AdBase.CreatorCompanyCode","title":"CreatorCompanyCode  <code>instance-attribute</code>","text":"<pre><code>CreatorCompanyCode\n</code></pre>"},{"location":"models/localmarket/#models.localmarket_models.AdBase.DeliveryTime","title":"DeliveryTime  <code>instance-attribute</code>","text":"<pre><code>DeliveryTime\n</code></pre>"},{"location":"models/localmarket/#models.localmarket_models.AdBase.CreationTimeEpochMs","title":"CreationTimeEpochMs  <code>instance-attribute</code>","text":"<pre><code>CreationTimeEpochMs\n</code></pre>"},{"location":"models/localmarket/#models.localmarket_models.AdBase.ExpiryTimeEpochMs","title":"ExpiryTimeEpochMs  <code>instance-attribute</code>","text":"<pre><code>ExpiryTimeEpochMs\n</code></pre>"},{"location":"models/localmarket/#models.localmarket_models.AdBase.MinimumRating","title":"MinimumRating  <code>instance-attribute</code>","text":"<pre><code>MinimumRating\n</code></pre>"},{"location":"models/localmarket/#models.localmarket_models.Ad","title":"Ad","text":"<p>             Bases: <code>AdBase</code></p>"},{"location":"models/localmarket/#models.localmarket_models.Ad.ContractNaturalId","title":"ContractNaturalId  <code>instance-attribute</code>","text":"<pre><code>ContractNaturalId\n</code></pre>"},{"location":"models/localmarket/#models.localmarket_models.Ad.PlanetId","title":"PlanetId  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>PlanetId = Field(min_length=32)\n</code></pre>"},{"location":"models/localmarket/#models.localmarket_models.Ad.PlanetNaturalId","title":"PlanetNaturalId  <code>instance-attribute</code>","text":"<pre><code>PlanetNaturalId\n</code></pre>"},{"location":"models/localmarket/#models.localmarket_models.Ad.PlanetName","title":"PlanetName  <code>instance-attribute</code>","text":"<pre><code>PlanetName\n</code></pre>"},{"location":"models/localmarket/#models.localmarket_models.Ad.CreatorCompanyId","title":"CreatorCompanyId  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>CreatorCompanyId = Field(min_length=32)\n</code></pre>"},{"location":"models/localmarket/#models.localmarket_models.Ad.CreatorCompanyName","title":"CreatorCompanyName  <code>instance-attribute</code>","text":"<pre><code>CreatorCompanyName\n</code></pre>"},{"location":"models/localmarket/#models.localmarket_models.Ad.CreatorCompanyCode","title":"CreatorCompanyCode  <code>instance-attribute</code>","text":"<pre><code>CreatorCompanyCode\n</code></pre>"},{"location":"models/localmarket/#models.localmarket_models.Ad.DeliveryTime","title":"DeliveryTime  <code>instance-attribute</code>","text":"<pre><code>DeliveryTime\n</code></pre>"},{"location":"models/localmarket/#models.localmarket_models.Ad.CreationTimeEpochMs","title":"CreationTimeEpochMs  <code>instance-attribute</code>","text":"<pre><code>CreationTimeEpochMs\n</code></pre>"},{"location":"models/localmarket/#models.localmarket_models.Ad.ExpiryTimeEpochMs","title":"ExpiryTimeEpochMs  <code>instance-attribute</code>","text":"<pre><code>ExpiryTimeEpochMs\n</code></pre>"},{"location":"models/localmarket/#models.localmarket_models.Ad.MinimumRating","title":"MinimumRating  <code>instance-attribute</code>","text":"<pre><code>MinimumRating\n</code></pre>"},{"location":"models/localmarket/#models.localmarket_models.Ad.MaterialId","title":"MaterialId  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>MaterialId = Field(min_length=32)\n</code></pre>"},{"location":"models/localmarket/#models.localmarket_models.Ad.MaterialName","title":"MaterialName  <code>instance-attribute</code>","text":"<pre><code>MaterialName\n</code></pre>"},{"location":"models/localmarket/#models.localmarket_models.Ad.MaterialTicker","title":"MaterialTicker  <code>instance-attribute</code>","text":"<pre><code>MaterialTicker\n</code></pre>"},{"location":"models/localmarket/#models.localmarket_models.Ad.MaterialCategory","title":"MaterialCategory  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>MaterialCategory = Field(min_length=32)\n</code></pre>"},{"location":"models/localmarket/#models.localmarket_models.Ad.MaterialWeight","title":"MaterialWeight  <code>instance-attribute</code>","text":"<pre><code>MaterialWeight\n</code></pre>"},{"location":"models/localmarket/#models.localmarket_models.Ad.MaterialVolume","title":"MaterialVolume  <code>instance-attribute</code>","text":"<pre><code>MaterialVolume\n</code></pre>"},{"location":"models/localmarket/#models.localmarket_models.Ad.MaterialAmount","title":"MaterialAmount  <code>instance-attribute</code>","text":"<pre><code>MaterialAmount\n</code></pre>"},{"location":"models/localmarket/#models.localmarket_models.Ad.Price","title":"Price  <code>instance-attribute</code>","text":"<pre><code>Price\n</code></pre>"},{"location":"models/localmarket/#models.localmarket_models.Ad.PriceCurrency","title":"PriceCurrency  <code>instance-attribute</code>","text":"<pre><code>PriceCurrency\n</code></pre>"},{"location":"models/localmarket/#models.localmarket_models.ShippingAd","title":"ShippingAd","text":"<p>             Bases: <code>AdBase</code></p>"},{"location":"models/localmarket/#models.localmarket_models.ShippingAd.ContractNaturalId","title":"ContractNaturalId  <code>instance-attribute</code>","text":"<pre><code>ContractNaturalId\n</code></pre>"},{"location":"models/localmarket/#models.localmarket_models.ShippingAd.PlanetId","title":"PlanetId  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>PlanetId = Field(min_length=32)\n</code></pre>"},{"location":"models/localmarket/#models.localmarket_models.ShippingAd.PlanetNaturalId","title":"PlanetNaturalId  <code>instance-attribute</code>","text":"<pre><code>PlanetNaturalId\n</code></pre>"},{"location":"models/localmarket/#models.localmarket_models.ShippingAd.PlanetName","title":"PlanetName  <code>instance-attribute</code>","text":"<pre><code>PlanetName\n</code></pre>"},{"location":"models/localmarket/#models.localmarket_models.ShippingAd.CreatorCompanyId","title":"CreatorCompanyId  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>CreatorCompanyId = Field(min_length=32)\n</code></pre>"},{"location":"models/localmarket/#models.localmarket_models.ShippingAd.CreatorCompanyName","title":"CreatorCompanyName  <code>instance-attribute</code>","text":"<pre><code>CreatorCompanyName\n</code></pre>"},{"location":"models/localmarket/#models.localmarket_models.ShippingAd.CreatorCompanyCode","title":"CreatorCompanyCode  <code>instance-attribute</code>","text":"<pre><code>CreatorCompanyCode\n</code></pre>"},{"location":"models/localmarket/#models.localmarket_models.ShippingAd.DeliveryTime","title":"DeliveryTime  <code>instance-attribute</code>","text":"<pre><code>DeliveryTime\n</code></pre>"},{"location":"models/localmarket/#models.localmarket_models.ShippingAd.CreationTimeEpochMs","title":"CreationTimeEpochMs  <code>instance-attribute</code>","text":"<pre><code>CreationTimeEpochMs\n</code></pre>"},{"location":"models/localmarket/#models.localmarket_models.ShippingAd.ExpiryTimeEpochMs","title":"ExpiryTimeEpochMs  <code>instance-attribute</code>","text":"<pre><code>ExpiryTimeEpochMs\n</code></pre>"},{"location":"models/localmarket/#models.localmarket_models.ShippingAd.MinimumRating","title":"MinimumRating  <code>instance-attribute</code>","text":"<pre><code>MinimumRating\n</code></pre>"},{"location":"models/localmarket/#models.localmarket_models.ShippingAd.OriginPlanetId","title":"OriginPlanetId  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>OriginPlanetId = Field(min_length=32)\n</code></pre>"},{"location":"models/localmarket/#models.localmarket_models.ShippingAd.OriginPlanetNaturalId","title":"OriginPlanetNaturalId  <code>instance-attribute</code>","text":"<pre><code>OriginPlanetNaturalId\n</code></pre>"},{"location":"models/localmarket/#models.localmarket_models.ShippingAd.OriginPlanetName","title":"OriginPlanetName  <code>instance-attribute</code>","text":"<pre><code>OriginPlanetName\n</code></pre>"},{"location":"models/localmarket/#models.localmarket_models.ShippingAd.DestinationPlanetId","title":"DestinationPlanetId  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>DestinationPlanetId = Field(min_length=32)\n</code></pre>"},{"location":"models/localmarket/#models.localmarket_models.ShippingAd.DestinationPlanetNaturalId","title":"DestinationPlanetNaturalId  <code>instance-attribute</code>","text":"<pre><code>DestinationPlanetNaturalId\n</code></pre>"},{"location":"models/localmarket/#models.localmarket_models.ShippingAd.DestinationPlanetName","title":"DestinationPlanetName  <code>instance-attribute</code>","text":"<pre><code>DestinationPlanetName\n</code></pre>"},{"location":"models/localmarket/#models.localmarket_models.ShippingAd.CargoWeight","title":"CargoWeight  <code>instance-attribute</code>","text":"<pre><code>CargoWeight\n</code></pre>"},{"location":"models/localmarket/#models.localmarket_models.ShippingAd.CargoVolume","title":"CargoVolume  <code>instance-attribute</code>","text":"<pre><code>CargoVolume\n</code></pre>"},{"location":"models/localmarket/#models.localmarket_models.ShippingAd.PayoutPrice","title":"PayoutPrice  <code>instance-attribute</code>","text":"<pre><code>PayoutPrice\n</code></pre>"},{"location":"models/localmarket/#models.localmarket_models.ShippingAd.PayoutCurrency","title":"PayoutCurrency  <code>instance-attribute</code>","text":"<pre><code>PayoutCurrency\n</code></pre>"},{"location":"models/localmarket/#models.localmarket_models.LocalMarketAds","title":"LocalMarketAds","text":"<p>             Bases: <code>BaseModel</code></p>"},{"location":"models/localmarket/#models.localmarket_models.LocalMarketAds.BuyingAds","title":"BuyingAds  <code>instance-attribute</code>","text":"<pre><code>BuyingAds\n</code></pre>"},{"location":"models/localmarket/#models.localmarket_models.LocalMarketAds.SellingAds","title":"SellingAds  <code>instance-attribute</code>","text":"<pre><code>SellingAds\n</code></pre>"},{"location":"models/localmarket/#models.localmarket_models.LocalMarketAds.ShippingAds","title":"ShippingAds  <code>instance-attribute</code>","text":"<pre><code>ShippingAds\n</code></pre>"},{"location":"models/localmarket/#models.localmarket_models.LocalMarketAdList","title":"LocalMarketAdList","text":"<p>             Bases: <code>RootModel</code></p>"},{"location":"models/localmarket/#models.localmarket_models.LocalMarketAdList.root","title":"root  <code>instance-attribute</code>","text":"<pre><code>root\n</code></pre>"},{"location":"models/localmarket/#models.localmarket_models.LocalMarketShippingAdList","title":"LocalMarketShippingAdList","text":"<p>             Bases: <code>RootModel</code></p>"},{"location":"models/localmarket/#models.localmarket_models.LocalMarketShippingAdList.root","title":"root  <code>instance-attribute</code>","text":"<pre><code>root\n</code></pre>"},{"location":"models/material/","title":"Material","text":""},{"location":"models/material/#models.material_models.MaterialTicker","title":"MaterialTicker","text":"<p>             Bases: <code>BaseModel</code></p>"},{"location":"models/material/#models.material_models.MaterialTicker.MaterialId","title":"MaterialId  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>MaterialId = Field(min_length=32)\n</code></pre>"},{"location":"models/material/#models.material_models.MaterialTicker.CategoryName","title":"CategoryName  <code>instance-attribute</code>","text":"<pre><code>CategoryName\n</code></pre>"},{"location":"models/material/#models.material_models.MaterialTicker.CategoryId","title":"CategoryId  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>CategoryId = Field(min_length=32)\n</code></pre>"},{"location":"models/material/#models.material_models.MaterialTicker.Name","title":"Name  <code>instance-attribute</code>","text":"<pre><code>Name\n</code></pre>"},{"location":"models/material/#models.material_models.MaterialTicker.Ticker","title":"Ticker  <code>instance-attribute</code>","text":"<pre><code>Ticker\n</code></pre>"},{"location":"models/material/#models.material_models.MaterialTicker.Weight","title":"Weight  <code>instance-attribute</code>","text":"<pre><code>Weight\n</code></pre>"},{"location":"models/material/#models.material_models.MaterialTicker.Volume","title":"Volume  <code>instance-attribute</code>","text":"<pre><code>Volume\n</code></pre>"},{"location":"models/material/#models.material_models.MaterialTicker.UserNameSubmitted","title":"UserNameSubmitted  <code>instance-attribute</code>","text":"<pre><code>UserNameSubmitted\n</code></pre>"},{"location":"models/material/#models.material_models.MaterialTicker.Timestamp","title":"Timestamp  <code>instance-attribute</code>","text":"<pre><code>Timestamp\n</code></pre>"},{"location":"models/material/#models.material_models.MaterialTickerList","title":"MaterialTickerList","text":"<p>             Bases: <code>RootModel</code></p>"},{"location":"models/material/#models.material_models.MaterialTickerList.root","title":"root  <code>instance-attribute</code>","text":"<pre><code>root\n</code></pre>"},{"location":"models/planet/","title":"Planet","text":""},{"location":"models/planet/#models.planet_models.PlanetResource","title":"PlanetResource","text":"<p>             Bases: <code>BaseModel</code></p>"},{"location":"models/planet/#models.planet_models.PlanetResource.MaterialId","title":"MaterialId  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>MaterialId = Field(min_length=32)\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetResource.ResourceType","title":"ResourceType  <code>instance-attribute</code>","text":"<pre><code>ResourceType\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetResource.Factor","title":"Factor  <code>instance-attribute</code>","text":"<pre><code>Factor\n</code></pre>"},{"location":"models/planet/#models.planet_models.BuildingRequirement","title":"BuildingRequirement","text":"<p>             Bases: <code>BaseModel</code></p>"},{"location":"models/planet/#models.planet_models.BuildingRequirement.MaterialName","title":"MaterialName  <code>instance-attribute</code>","text":"<pre><code>MaterialName\n</code></pre>"},{"location":"models/planet/#models.planet_models.BuildingRequirement.MaterialId","title":"MaterialId  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>MaterialId = Field(min_length=32)\n</code></pre>"},{"location":"models/planet/#models.planet_models.BuildingRequirement.MaterialTicker","title":"MaterialTicker  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>MaterialTicker = Field(max_length=3)\n</code></pre>"},{"location":"models/planet/#models.planet_models.BuildingRequirement.MaterialCategory","title":"MaterialCategory  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>MaterialCategory = Field(min_length=32)\n</code></pre>"},{"location":"models/planet/#models.planet_models.BuildingRequirement.MaterialAmount","title":"MaterialAmount  <code>instance-attribute</code>","text":"<pre><code>MaterialAmount\n</code></pre>"},{"location":"models/planet/#models.planet_models.BuildingRequirement.MaterialWeight","title":"MaterialWeight  <code>instance-attribute</code>","text":"<pre><code>MaterialWeight\n</code></pre>"},{"location":"models/planet/#models.planet_models.BuildingRequirement.MaterialVolume","title":"MaterialVolume  <code>instance-attribute</code>","text":"<pre><code>MaterialVolume\n</code></pre>"},{"location":"models/planet/#models.planet_models.ProductionFee","title":"ProductionFee","text":"<p>             Bases: <code>BaseModel</code></p>"},{"location":"models/planet/#models.planet_models.ProductionFee.Category","title":"Category  <code>instance-attribute</code>","text":"<pre><code>Category\n</code></pre>"},{"location":"models/planet/#models.planet_models.ProductionFee.WorkforceLevel","title":"WorkforceLevel  <code>instance-attribute</code>","text":"<pre><code>WorkforceLevel\n</code></pre>"},{"location":"models/planet/#models.planet_models.ProductionFee.FeeAmount","title":"FeeAmount  <code>instance-attribute</code>","text":"<pre><code>FeeAmount\n</code></pre>"},{"location":"models/planet/#models.planet_models.ProductionFee.FeeCurrency","title":"FeeCurrency  <code>instance-attribute</code>","text":"<pre><code>FeeCurrency\n</code></pre>"},{"location":"models/planet/#models.planet_models.COGCProgram","title":"COGCProgram","text":"<p>             Bases: <code>BaseModel</code></p>"},{"location":"models/planet/#models.planet_models.COGCProgram.ProgramType","title":"ProgramType  <code>instance-attribute</code>","text":"<pre><code>ProgramType\n</code></pre>"},{"location":"models/planet/#models.planet_models.COGCProgram.StartEpochMs","title":"StartEpochMs  <code>instance-attribute</code>","text":"<pre><code>StartEpochMs\n</code></pre>"},{"location":"models/planet/#models.planet_models.COGCProgram.EndEpochMs","title":"EndEpochMs  <code>instance-attribute</code>","text":"<pre><code>EndEpochMs\n</code></pre>"},{"location":"models/planet/#models.planet_models.COGCVote","title":"COGCVote","text":"<p>             Bases: <code>BaseModel</code></p>"},{"location":"models/planet/#models.planet_models.COGCVote.CompanyName","title":"CompanyName  <code>instance-attribute</code>","text":"<pre><code>CompanyName\n</code></pre>"},{"location":"models/planet/#models.planet_models.COGCVote.CompanyCode","title":"CompanyCode  <code>instance-attribute</code>","text":"<pre><code>CompanyCode\n</code></pre>"},{"location":"models/planet/#models.planet_models.COGCVote.Influence","title":"Influence  <code>instance-attribute</code>","text":"<pre><code>Influence\n</code></pre>"},{"location":"models/planet/#models.planet_models.COGCVote.VoteType","title":"VoteType  <code>instance-attribute</code>","text":"<pre><code>VoteType\n</code></pre>"},{"location":"models/planet/#models.planet_models.COGCVote.VoteTimeEpochMs","title":"VoteTimeEpochMs  <code>instance-attribute</code>","text":"<pre><code>VoteTimeEpochMs\n</code></pre>"},{"location":"models/planet/#models.planet_models.Planet","title":"Planet","text":"<p>             Bases: <code>BaseModel</code></p>"},{"location":"models/planet/#models.planet_models.Planet.PlanetNaturalId","title":"PlanetNaturalId  <code>instance-attribute</code>","text":"<pre><code>PlanetNaturalId\n</code></pre>"},{"location":"models/planet/#models.planet_models.Planet.PlanetName","title":"PlanetName  <code>instance-attribute</code>","text":"<pre><code>PlanetName\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetList","title":"PlanetList","text":"<p>             Bases: <code>RootModel</code></p>"},{"location":"models/planet/#models.planet_models.PlanetList.root","title":"root  <code>instance-attribute</code>","text":"<pre><code>root\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetFull","title":"PlanetFull","text":"<p>             Bases: <code>Planet</code></p>"},{"location":"models/planet/#models.planet_models.PlanetFull.PlanetNaturalId","title":"PlanetNaturalId  <code>instance-attribute</code>","text":"<pre><code>PlanetNaturalId\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetFull.PlanetName","title":"PlanetName  <code>instance-attribute</code>","text":"<pre><code>PlanetName\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetFull.Resources","title":"Resources  <code>instance-attribute</code>","text":"<pre><code>Resources\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetFull.BuildRequirements","title":"BuildRequirements  <code>instance-attribute</code>","text":"<pre><code>BuildRequirements\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetFull.ProductionFees","title":"ProductionFees  <code>instance-attribute</code>","text":"<pre><code>ProductionFees\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetFull.COGCPrograms","title":"COGCPrograms  <code>instance-attribute</code>","text":"<pre><code>COGCPrograms\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetFull.COGCVotes","title":"COGCVotes  <code>instance-attribute</code>","text":"<pre><code>COGCVotes\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetFull.PlanetId","title":"PlanetId  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>PlanetId = Field(min_length=32)\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetFull.Namer","title":"Namer  <code>instance-attribute</code>","text":"<pre><code>Namer\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetFull.NamingDataEpochMs","title":"NamingDataEpochMs  <code>instance-attribute</code>","text":"<pre><code>NamingDataEpochMs\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetFull.Nameable","title":"Nameable  <code>instance-attribute</code>","text":"<pre><code>Nameable\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetFull.SystemId","title":"SystemId  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>SystemId = Field(min_length=32)\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetFull.Gravity","title":"Gravity  <code>instance-attribute</code>","text":"<pre><code>Gravity\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetFull.MagneticField","title":"MagneticField  <code>instance-attribute</code>","text":"<pre><code>MagneticField\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetFull.Mass","title":"Mass  <code>instance-attribute</code>","text":"<pre><code>Mass\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetFull.MassEarth","title":"MassEarth  <code>instance-attribute</code>","text":"<pre><code>MassEarth\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetFull.OrbitSemiMajorAxis","title":"OrbitSemiMajorAxis  <code>instance-attribute</code>","text":"<pre><code>OrbitSemiMajorAxis\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetFull.OrbitEccentricity","title":"OrbitEccentricity  <code>instance-attribute</code>","text":"<pre><code>OrbitEccentricity\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetFull.OrbitInclination","title":"OrbitInclination  <code>instance-attribute</code>","text":"<pre><code>OrbitInclination\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetFull.OrbitRightAscension","title":"OrbitRightAscension  <code>instance-attribute</code>","text":"<pre><code>OrbitRightAscension\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetFull.OrbitPeriapsis","title":"OrbitPeriapsis  <code>instance-attribute</code>","text":"<pre><code>OrbitPeriapsis\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetFull.OrbitIndex","title":"OrbitIndex  <code>instance-attribute</code>","text":"<pre><code>OrbitIndex\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetFull.Pressure","title":"Pressure  <code>instance-attribute</code>","text":"<pre><code>Pressure\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetFull.Radiation","title":"Radiation  <code>instance-attribute</code>","text":"<pre><code>Radiation\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetFull.Radius","title":"Radius  <code>instance-attribute</code>","text":"<pre><code>Radius\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetFull.Sunlight","title":"Sunlight  <code>instance-attribute</code>","text":"<pre><code>Sunlight\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetFull.Surface","title":"Surface  <code>instance-attribute</code>","text":"<pre><code>Surface\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetFull.Temperature","title":"Temperature  <code>instance-attribute</code>","text":"<pre><code>Temperature\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetFull.Fertility","title":"Fertility  <code>instance-attribute</code>","text":"<pre><code>Fertility\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetFull.HasLocalMarket","title":"HasLocalMarket  <code>instance-attribute</code>","text":"<pre><code>HasLocalMarket\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetFull.HasChamberOfCommerce","title":"HasChamberOfCommerce  <code>instance-attribute</code>","text":"<pre><code>HasChamberOfCommerce\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetFull.HasWarehouse","title":"HasWarehouse  <code>instance-attribute</code>","text":"<pre><code>HasWarehouse\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetFull.HasAdministrationCenter","title":"HasAdministrationCenter  <code>instance-attribute</code>","text":"<pre><code>HasAdministrationCenter\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetFull.HasShipyard","title":"HasShipyard  <code>instance-attribute</code>","text":"<pre><code>HasShipyard\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetFull.FactionCode","title":"FactionCode  <code>instance-attribute</code>","text":"<pre><code>FactionCode\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetFull.FactionName","title":"FactionName  <code>instance-attribute</code>","text":"<pre><code>FactionName\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetFull.GovernorId","title":"GovernorId  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>GovernorId = Field(min_length=32)\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetFull.GovernorUserName","title":"GovernorUserName  <code>instance-attribute</code>","text":"<pre><code>GovernorUserName\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetFull.GovernorCorporationId","title":"GovernorCorporationId  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>GovernorCorporationId = Field(min_length=32)\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetFull.GovernorCorporationName","title":"GovernorCorporationName  <code>instance-attribute</code>","text":"<pre><code>GovernorCorporationName\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetFull.GovernorCorporationCode","title":"GovernorCorporationCode  <code>instance-attribute</code>","text":"<pre><code>GovernorCorporationCode\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetFull.CurrencyName","title":"CurrencyName  <code>instance-attribute</code>","text":"<pre><code>CurrencyName\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetFull.CurrencyCode","title":"CurrencyCode  <code>instance-attribute</code>","text":"<pre><code>CurrencyCode\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetFull.CollectorId","title":"CollectorId  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>CollectorId = Field(min_length=32)\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetFull.CollectorName","title":"CollectorName  <code>instance-attribute</code>","text":"<pre><code>CollectorName\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetFull.CollectorCode","title":"CollectorCode  <code>instance-attribute</code>","text":"<pre><code>CollectorCode\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetFull.BaseLocalMarketFee","title":"BaseLocalMarketFee  <code>instance-attribute</code>","text":"<pre><code>BaseLocalMarketFee\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetFull.LocalMarketFeeFactor","title":"LocalMarketFeeFactor  <code>instance-attribute</code>","text":"<pre><code>LocalMarketFeeFactor\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetFull.WarehouseFee","title":"WarehouseFee  <code>instance-attribute</code>","text":"<pre><code>WarehouseFee\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetFull.PopulationId","title":"PopulationId  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>PopulationId = Field(min_length=32)\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetFull.COGCProgramStatus","title":"COGCProgramStatus  <code>instance-attribute</code>","text":"<pre><code>COGCProgramStatus\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetFull.PlanetTier","title":"PlanetTier  <code>instance-attribute</code>","text":"<pre><code>PlanetTier\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetFull.UserNameSubmitted","title":"UserNameSubmitted  <code>instance-attribute</code>","text":"<pre><code>UserNameSubmitted\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetFull.Timestamp","title":"Timestamp  <code>instance-attribute</code>","text":"<pre><code>Timestamp\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetFull.DistanceResults","title":"DistanceResults  <code>instance-attribute</code>","text":"<pre><code>DistanceResults\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetFullList","title":"PlanetFullList","text":"<p>             Bases: <code>RootModel</code></p>"},{"location":"models/planet/#models.planet_models.PlanetFullList.root","title":"root  <code>instance-attribute</code>","text":"<pre><code>root\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetSite","title":"PlanetSite","text":"<p>             Bases: <code>BaseModel</code></p>"},{"location":"models/planet/#models.planet_models.PlanetSite.PlanetId","title":"PlanetId  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>PlanetId = Field(min_length=32)\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetSite.OwnerId","title":"OwnerId  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>OwnerId = Field(min_length=32)\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetSite.OwnerName","title":"OwnerName  <code>instance-attribute</code>","text":"<pre><code>OwnerName\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetSite.OwnerCode","title":"OwnerCode  <code>instance-attribute</code>","text":"<pre><code>OwnerCode\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetSite.PlotNumber","title":"PlotNumber  <code>instance-attribute</code>","text":"<pre><code>PlotNumber\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetSite.PlotId","title":"PlotId  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>PlotId = Field(min_length=32)\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetSite.SiteId","title":"SiteId  <code>instance-attribute</code>","text":"<pre><code>SiteId\n</code></pre>"},{"location":"models/planet/#models.planet_models.PlanetSiteList","title":"PlanetSiteList","text":"<p>             Bases: <code>RootModel</code></p>"},{"location":"models/planet/#models.planet_models.PlanetSiteList.root","title":"root  <code>instance-attribute</code>","text":"<pre><code>root\n</code></pre>"},{"location":"models/recipe/","title":"Recipe","text":""},{"location":"models/recipe/#models.recipe_models.RecipeIO","title":"RecipeIO","text":"<p>             Bases: <code>BaseModel</code></p>"},{"location":"models/recipe/#models.recipe_models.RecipeIO.Ticker","title":"Ticker  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>Ticker = Field(max_length=3)\n</code></pre>"},{"location":"models/recipe/#models.recipe_models.RecipeIO.Amount","title":"Amount  <code>instance-attribute</code>","text":"<pre><code>Amount\n</code></pre>"},{"location":"models/recipe/#models.recipe_models.Recipe","title":"Recipe","text":"<p>             Bases: <code>BaseModel</code></p>"},{"location":"models/recipe/#models.recipe_models.Recipe.Inputs","title":"Inputs  <code>instance-attribute</code>","text":"<pre><code>Inputs\n</code></pre>"},{"location":"models/recipe/#models.recipe_models.Recipe.Outputs","title":"Outputs  <code>instance-attribute</code>","text":"<pre><code>Outputs\n</code></pre>"},{"location":"models/recipe/#models.recipe_models.Recipe.BuildingTicker","title":"BuildingTicker  <code>instance-attribute</code>","text":"<pre><code>BuildingTicker\n</code></pre>"},{"location":"models/recipe/#models.recipe_models.Recipe.RecipeName","title":"RecipeName  <code>instance-attribute</code>","text":"<pre><code>RecipeName\n</code></pre>"},{"location":"models/recipe/#models.recipe_models.Recipe.StandardRecipeName","title":"StandardRecipeName  <code>instance-attribute</code>","text":"<pre><code>StandardRecipeName\n</code></pre>"},{"location":"models/recipe/#models.recipe_models.Recipe.TimeMs","title":"TimeMs  <code>instance-attribute</code>","text":"<pre><code>TimeMs\n</code></pre>"},{"location":"models/recipe/#models.recipe_models.RecipeList","title":"RecipeList","text":"<p>             Bases: <code>RootModel</code></p>"},{"location":"models/recipe/#models.recipe_models.RecipeList.root","title":"root  <code>instance-attribute</code>","text":"<pre><code>root\n</code></pre>"},{"location":"models/recipe/#models.recipe_models.MaterialRecipeIO","title":"MaterialRecipeIO","text":"<p>             Bases: <code>BaseModel</code></p>"},{"location":"models/recipe/#models.recipe_models.MaterialRecipeIO.CommodityName","title":"CommodityName  <code>instance-attribute</code>","text":"<pre><code>CommodityName\n</code></pre>"},{"location":"models/recipe/#models.recipe_models.MaterialRecipeIO.CommodityTicker","title":"CommodityTicker  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>CommodityTicker = Field(max_length=3)\n</code></pre>"},{"location":"models/recipe/#models.recipe_models.MaterialRecipeIO.Weight","title":"Weight  <code>instance-attribute</code>","text":"<pre><code>Weight\n</code></pre>"},{"location":"models/recipe/#models.recipe_models.MaterialRecipeIO.Volume","title":"Volume  <code>instance-attribute</code>","text":"<pre><code>Volume\n</code></pre>"},{"location":"models/recipe/#models.recipe_models.MaterialRecipeIO.Amount","title":"Amount  <code>instance-attribute</code>","text":"<pre><code>Amount\n</code></pre>"},{"location":"models/recipe/#models.recipe_models.MaterialRecipe","title":"MaterialRecipe","text":"<p>             Bases: <code>BaseModel</code></p>"},{"location":"models/recipe/#models.recipe_models.MaterialRecipe.BuildingTicker","title":"BuildingTicker  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>BuildingTicker = Field(max_length=3)\n</code></pre>"},{"location":"models/recipe/#models.recipe_models.MaterialRecipe.BuildingRecipeId","title":"BuildingRecipeId  <code>instance-attribute</code>","text":"<pre><code>BuildingRecipeId\n</code></pre>"},{"location":"models/recipe/#models.recipe_models.MaterialRecipe.Inputs","title":"Inputs  <code>instance-attribute</code>","text":"<pre><code>Inputs\n</code></pre>"},{"location":"models/recipe/#models.recipe_models.MaterialRecipe.Outputs","title":"Outputs  <code>instance-attribute</code>","text":"<pre><code>Outputs\n</code></pre>"},{"location":"models/recipe/#models.recipe_models.MaterialRecipeList","title":"MaterialRecipeList","text":"<p>             Bases: <code>RootModel</code></p>"},{"location":"models/recipe/#models.recipe_models.MaterialRecipeList.root","title":"root  <code>instance-attribute</code>","text":"<pre><code>root\n</code></pre>"},{"location":"models/sites/","title":"Sites","text":""},{"location":"models/sites/#models.sites_models.SiteBuildingMaterial","title":"SiteBuildingMaterial","text":"<p>             Bases: <code>BaseModel</code></p>"},{"location":"models/sites/#models.sites_models.SiteBuildingMaterial.MaterialId","title":"MaterialId  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>MaterialId = Field(min_length=32)\n</code></pre>"},{"location":"models/sites/#models.sites_models.SiteBuildingMaterial.MaterialName","title":"MaterialName  <code>instance-attribute</code>","text":"<pre><code>MaterialName\n</code></pre>"},{"location":"models/sites/#models.sites_models.SiteBuildingMaterial.MaterialTicker","title":"MaterialTicker  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>MaterialTicker = Field(max_length=3)\n</code></pre>"},{"location":"models/sites/#models.sites_models.SiteBuildingMaterial.MaterialAmount","title":"MaterialAmount  <code>instance-attribute</code>","text":"<pre><code>MaterialAmount\n</code></pre>"},{"location":"models/sites/#models.sites_models.SiteBuilding","title":"SiteBuilding","text":"<p>             Bases: <code>BaseModel</code></p>"},{"location":"models/sites/#models.sites_models.SiteBuilding.ReclaimableMaterials","title":"ReclaimableMaterials  <code>instance-attribute</code>","text":"<pre><code>ReclaimableMaterials\n</code></pre>"},{"location":"models/sites/#models.sites_models.SiteBuilding.RepairMaterials","title":"RepairMaterials  <code>instance-attribute</code>","text":"<pre><code>RepairMaterials\n</code></pre>"},{"location":"models/sites/#models.sites_models.SiteBuilding.SiteBuildingId","title":"SiteBuildingId  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>SiteBuildingId = Field(min_length=65)\n</code></pre>"},{"location":"models/sites/#models.sites_models.SiteBuilding.BuildingId","title":"BuildingId  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>BuildingId = Field(min_length=32)\n</code></pre>"},{"location":"models/sites/#models.sites_models.SiteBuilding.BuildingCreated","title":"BuildingCreated  <code>instance-attribute</code>","text":"<pre><code>BuildingCreated\n</code></pre>"},{"location":"models/sites/#models.sites_models.SiteBuilding.BuildingName","title":"BuildingName  <code>instance-attribute</code>","text":"<pre><code>BuildingName\n</code></pre>"},{"location":"models/sites/#models.sites_models.SiteBuilding.BuildingTicker","title":"BuildingTicker  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>BuildingTicker = Field(max_length=3)\n</code></pre>"},{"location":"models/sites/#models.sites_models.SiteBuilding.BuildingLastRepair","title":"BuildingLastRepair  <code>instance-attribute</code>","text":"<pre><code>BuildingLastRepair\n</code></pre>"},{"location":"models/sites/#models.sites_models.SiteBuilding.Condition","title":"Condition  <code>instance-attribute</code>","text":"<pre><code>Condition\n</code></pre>"},{"location":"models/sites/#models.sites_models.Site","title":"Site","text":"<p>             Bases: <code>BaseModel</code></p>"},{"location":"models/sites/#models.sites_models.Site.Buildings","title":"Buildings  <code>instance-attribute</code>","text":"<pre><code>Buildings\n</code></pre>"},{"location":"models/sites/#models.sites_models.Site.SiteId","title":"SiteId  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>SiteId = Field(min_length=32)\n</code></pre>"},{"location":"models/sites/#models.sites_models.Site.PlanetId","title":"PlanetId  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>PlanetId = Field(min_length=32)\n</code></pre>"},{"location":"models/sites/#models.sites_models.Site.PlanetIdentifier","title":"PlanetIdentifier  <code>instance-attribute</code>","text":"<pre><code>PlanetIdentifier\n</code></pre>"},{"location":"models/sites/#models.sites_models.Site.PlanetName","title":"PlanetName  <code>instance-attribute</code>","text":"<pre><code>PlanetName\n</code></pre>"},{"location":"models/sites/#models.sites_models.Site.PlanetFoundedEpochMs","title":"PlanetFoundedEpochMs  <code>instance-attribute</code>","text":"<pre><code>PlanetFoundedEpochMs\n</code></pre>"},{"location":"models/sites/#models.sites_models.Site.InvestedPermits","title":"InvestedPermits  <code>instance-attribute</code>","text":"<pre><code>InvestedPermits\n</code></pre>"},{"location":"models/sites/#models.sites_models.Site.MaximumPermits","title":"MaximumPermits  <code>instance-attribute</code>","text":"<pre><code>MaximumPermits\n</code></pre>"},{"location":"models/sites/#models.sites_models.Site.UserNameSubmitted","title":"UserNameSubmitted  <code>instance-attribute</code>","text":"<pre><code>UserNameSubmitted\n</code></pre>"},{"location":"models/sites/#models.sites_models.Site.Timestamp","title":"Timestamp  <code>instance-attribute</code>","text":"<pre><code>Timestamp\n</code></pre>"},{"location":"models/sites/#models.sites_models.SiteList","title":"SiteList","text":"<p>             Bases: <code>RootModel</code></p>"},{"location":"models/sites/#models.sites_models.SiteList.root","title":"root  <code>instance-attribute</code>","text":"<pre><code>root\n</code></pre>"},{"location":"models/sites/#models.sites_models.Warehouse","title":"Warehouse","text":"<p>             Bases: <code>BaseModel</code></p>"},{"location":"models/sites/#models.sites_models.Warehouse.WarehouseId","title":"WarehouseId  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>WarehouseId = Field(min_length=65)\n</code></pre>"},{"location":"models/sites/#models.sites_models.Warehouse.StoreId","title":"StoreId  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>StoreId = Field(min_length=32)\n</code></pre>"},{"location":"models/sites/#models.sites_models.Warehouse.Units","title":"Units  <code>instance-attribute</code>","text":"<pre><code>Units\n</code></pre>"},{"location":"models/sites/#models.sites_models.Warehouse.WeightCapacity","title":"WeightCapacity  <code>instance-attribute</code>","text":"<pre><code>WeightCapacity\n</code></pre>"},{"location":"models/sites/#models.sites_models.Warehouse.VolumeCapacity","title":"VolumeCapacity  <code>instance-attribute</code>","text":"<pre><code>VolumeCapacity\n</code></pre>"},{"location":"models/sites/#models.sites_models.Warehouse.NextPaymentTimestampEpochMs","title":"NextPaymentTimestampEpochMs  <code>instance-attribute</code>","text":"<pre><code>NextPaymentTimestampEpochMs\n</code></pre>"},{"location":"models/sites/#models.sites_models.Warehouse.FeeAmount","title":"FeeAmount  <code>instance-attribute</code>","text":"<pre><code>FeeAmount\n</code></pre>"},{"location":"models/sites/#models.sites_models.Warehouse.FeeCurrency","title":"FeeCurrency  <code>instance-attribute</code>","text":"<pre><code>FeeCurrency\n</code></pre>"},{"location":"models/sites/#models.sites_models.Warehouse.FeeCollectorId","title":"FeeCollectorId  <code>instance-attribute</code>","text":"<pre><code>FeeCollectorId\n</code></pre>"},{"location":"models/sites/#models.sites_models.Warehouse.FeeCollectorName","title":"FeeCollectorName  <code>instance-attribute</code>","text":"<pre><code>FeeCollectorName\n</code></pre>"},{"location":"models/sites/#models.sites_models.Warehouse.FeeCollectorCode","title":"FeeCollectorCode  <code>instance-attribute</code>","text":"<pre><code>FeeCollectorCode\n</code></pre>"},{"location":"models/sites/#models.sites_models.Warehouse.LocationName","title":"LocationName  <code>instance-attribute</code>","text":"<pre><code>LocationName\n</code></pre>"},{"location":"models/sites/#models.sites_models.Warehouse.LocationNaturalId","title":"LocationNaturalId  <code>instance-attribute</code>","text":"<pre><code>LocationNaturalId\n</code></pre>"},{"location":"models/sites/#models.sites_models.Warehouse.UserNameSubmitted","title":"UserNameSubmitted  <code>instance-attribute</code>","text":"<pre><code>UserNameSubmitted\n</code></pre>"},{"location":"models/sites/#models.sites_models.Warehouse.Timestamp","title":"Timestamp  <code>instance-attribute</code>","text":"<pre><code>Timestamp\n</code></pre>"},{"location":"models/sites/#models.sites_models.WarehouseList","title":"WarehouseList","text":"<p>             Bases: <code>RootModel</code></p>"},{"location":"models/sites/#models.sites_models.WarehouseList.root","title":"root  <code>instance-attribute</code>","text":"<pre><code>root\n</code></pre>"},{"location":"models/storage/","title":"Storage","text":""},{"location":"models/storage/#models.storage_models.StorageItem","title":"StorageItem","text":"<p>             Bases: <code>BaseModel</code></p>"},{"location":"models/storage/#models.storage_models.StorageItem.MaterialId","title":"MaterialId  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>MaterialId = Field(min_length=32)\n</code></pre>"},{"location":"models/storage/#models.storage_models.StorageItem.MaterialName","title":"MaterialName  <code>instance-attribute</code>","text":"<pre><code>MaterialName\n</code></pre>"},{"location":"models/storage/#models.storage_models.StorageItem.MaterialTicker","title":"MaterialTicker  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>MaterialTicker = Field(max_length=3, default=None)\n</code></pre>"},{"location":"models/storage/#models.storage_models.StorageItem.MaterialCategory","title":"MaterialCategory  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>MaterialCategory = Field(min_length=32, default=None)\n</code></pre>"},{"location":"models/storage/#models.storage_models.StorageItem.MaterialWeight","title":"MaterialWeight  <code>instance-attribute</code>","text":"<pre><code>MaterialWeight\n</code></pre>"},{"location":"models/storage/#models.storage_models.StorageItem.MaterialVolume","title":"MaterialVolume  <code>instance-attribute</code>","text":"<pre><code>MaterialVolume\n</code></pre>"},{"location":"models/storage/#models.storage_models.StorageItem.MaterialAmount","title":"MaterialAmount  <code>instance-attribute</code>","text":"<pre><code>MaterialAmount\n</code></pre>"},{"location":"models/storage/#models.storage_models.StorageItem.MaterialValue","title":"MaterialValue  <code>instance-attribute</code>","text":"<pre><code>MaterialValue\n</code></pre>"},{"location":"models/storage/#models.storage_models.StorageItem.MaterialValueCurrency","title":"MaterialValueCurrency  <code>instance-attribute</code>","text":"<pre><code>MaterialValueCurrency\n</code></pre>"},{"location":"models/storage/#models.storage_models.StorageItem.Type","title":"Type  <code>instance-attribute</code>","text":"<pre><code>Type\n</code></pre>"},{"location":"models/storage/#models.storage_models.StorageItem.TotalWeight","title":"TotalWeight  <code>instance-attribute</code>","text":"<pre><code>TotalWeight\n</code></pre>"},{"location":"models/storage/#models.storage_models.StorageItem.TotalVolume","title":"TotalVolume  <code>instance-attribute</code>","text":"<pre><code>TotalVolume\n</code></pre>"},{"location":"models/storage/#models.storage_models.Storage","title":"Storage","text":"<p>             Bases: <code>BaseModel</code></p>"},{"location":"models/storage/#models.storage_models.Storage.StorageItems","title":"StorageItems  <code>instance-attribute</code>","text":"<pre><code>StorageItems\n</code></pre>"},{"location":"models/storage/#models.storage_models.Storage.StorageId","title":"StorageId  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>StorageId = Field(min_length=32)\n</code></pre>"},{"location":"models/storage/#models.storage_models.Storage.AddressableId","title":"AddressableId  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>AddressableId = Field(min_length=32)\n</code></pre>"},{"location":"models/storage/#models.storage_models.Storage.Name","title":"Name  <code>instance-attribute</code>","text":"<pre><code>Name\n</code></pre>"},{"location":"models/storage/#models.storage_models.Storage.Type","title":"Type  <code>instance-attribute</code>","text":"<pre><code>Type\n</code></pre>"},{"location":"models/storage/#models.storage_models.Storage.WeightCapacity","title":"WeightCapacity  <code>instance-attribute</code>","text":"<pre><code>WeightCapacity\n</code></pre>"},{"location":"models/storage/#models.storage_models.Storage.VolumeCapacity","title":"VolumeCapacity  <code>instance-attribute</code>","text":"<pre><code>VolumeCapacity\n</code></pre>"},{"location":"models/storage/#models.storage_models.Storage.UserNameSubmitted","title":"UserNameSubmitted  <code>instance-attribute</code>","text":"<pre><code>UserNameSubmitted\n</code></pre>"},{"location":"models/storage/#models.storage_models.Storage.Timestamp","title":"Timestamp  <code>instance-attribute</code>","text":"<pre><code>Timestamp\n</code></pre>"},{"location":"models/storage/#models.storage_models.StorageList","title":"StorageList","text":"<p>             Bases: <code>RootModel</code></p>"},{"location":"models/storage/#models.storage_models.StorageList.root","title":"root  <code>instance-attribute</code>","text":"<pre><code>root\n</code></pre>"},{"location":"coverage/","title":"Coverage Report","text":""}]}